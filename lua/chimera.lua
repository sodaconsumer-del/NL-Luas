local v0 = false;
local l_events_0 = require("neverlose/events");
local v2 = common.get_username();
local v3 = ui.find("Visuals", "World", "Main", "Force Thirdperson");
if v2 == "rootnax" then
    utils.console_exec("sv_cheats 1\n\tcl_drawhud_force_radar 0\n\tmat_showlowresimage 1\n\n\t//scary\n\tplayvol ambient\\machines\\courtyard_mach_loop .25\n\tplayvol player\\heartbeatloop .2\n\tplayvol hostage\\huse\\hostage_breath .35\n\tplay player\\vo\\anarchist\\scaredemote06\n\n\n\t//crosshair\n\tcl_Crosshairstyle 2\n\tcl_crosshair_dynamic_maxdist_splitratio .9\n\tcl_crosshair_dynamic_splitdist 1\n\tcl_crosshair_dynamic_splitalpha_outermod 1\n\tcl_crosshair_dynamic_splitalpha_innermod 1\n\tcl_crosshairalpha 255\n\tcl_crosshairdot 1\n\n\n\t//viewmodels\n\talias vmchange \"vmclose\"\n\talias vmclose \"hud_scaling 0.95; viewmodel_fov 68; viewmodel_offset_y 2; cl_bob_lower_amt 30; alias vmchange vmfar\"\n\talias vmfar \"hud_scaling 0.5; viewmodel_fov 54; viewmodel_offset_y -2; cl_bob_lower_amt 5; alias vmchange vmclose\"\n\tcl_bobamt_lat 2\n\tcl_bobamt_vert 2\n\n\t//movings\n\talias +goleft \"+moveleft; vmchange; chchange; colors; changehand; radarchange\"\n\talias -goleft \"-moveleft; colors\"\n\n\talias +goright \"+moveright; vmchange; chchange; colors; changehand; radarchange\"\n\talias -goright \"-moveright; colors\"\n\n\talias +goforward \"+forward; vmchange; chchange; changehand; radarchange; play hostage/huse/hostage_breath; playvol ambient\\machines\\courtyard_mach_loop .1\"\n\talias -goforward \"-forward; colors\"\n\n\talias +goback \"+back; vmchange; chchange; colors; changehand; radarchange; play hostage/huse/hostage_breath; playvol ambient\\machines\\courtyard_mach_loop .1\"\n\talias -goback \"-back; colors\"\n\n\talias +shoot \"+attack; vmchange; crosshair 1; colors; changehand; playvol physics\\body\\body_medium_break3 .5\"\n\talias -shoot \"-attack; crosshair 1\"\n\n\talias +m2 \"+attack2; play physics/flesh/flesh_squishy_impact_hard4\"\n\talias -m2 \"-attack2\"\n\n\talias +jomp \"+jump; vmchange; chchange; colors; changehand; radarchange; play physics/flesh/flesh_squishy_impact_hard3\"\n\talias -jomp \"-jump\"\n\n\talias +scoreboard \"+showscores; play player\\vo\\anarchist\\tmap_cs_source21\"\n\talias -scoreboard \"-showscores\"\n\n\t//binds\n\tbind d \"+goright\"\n\tbind a \"+goleft\"\n\tbind w \"+goforward\"\n\tbind s \"+goback\"\n\tbind 1 \"slot1; vmchange; chchange; colors; radarchange; changehand; play player\\pl_burnpain1\"\n\tbind 2 \"slot2; vmchange; chchange; colors; radarchange; changehand; play player\\pl_burnpain2\"\n\tbind 3 \"slot3; vmchange; chchange; colors; radarchange; changehand; play physics\\body\\body_medium_break4\"\n\tbind 4 \"slot4; vmchange; chchange; colors; radarchange; changehand; play player\\pl_burnpain3\"\n\tbind 5 \"slot5; vmchange; chchange; colors; radarchange; changehand; play common\\stuck2\"\n\tbind 6 \"slot6; vmchange; chchange; colors; radarchange; changehand\"\n\tbind e \"+use; vmchange; chchange; colors; radarchange; changehand\"\n\tbind q \"lastinv; vmchange; chchange; radarchange; changehand; play physics/flesh/flesh_squishy_impact_hard2\"\n\tbind space \"+jomp; vmchange; chchange; radarchange; changehand\"\n\tbind mouse1 \"+shoot; chchange; radarchange; changehand\"\n\tbind mouse2 \"+m2; vmchange; chchange; colors; radarchange; changehand\"\n\tbind f \"disconnect \208\146\208\171\208\149\208\145\208\144\208\157 \208\161\208\171\208\157 \208\168\208\155\208\174\208\165\208\152; play hostage\\huse\\illfollow\"\n\tbind tab \"+scoreboard\"\n\tbind i \"disconnect; map cs_office; sv_cheats 1; mat_showlowresimage 1\"\n\n\n\t//crosshair big\n\talias chchange \"chchange1\"\n\talias chchange1 \"cl_crosshairsize 1; cl_crosshairthickness 1400; cl_Crosshairalpha 100; cl_crosshairstyle 2; alias chchange chchange2\"\n\talias chchange2 \"cl_crosshairsize 3; cl_crosshairthickness 13; cl_Crosshairalpha 255; alias chchange chchange3\"\n\talias chchange3 \"cl_crosshairsize 5; cl_crosshairthickness 5; alias chchange chchange4\"\n\talias chchange4 \"cl_crosshairsize 7; cl_crosshairthickness .5; alias chchange chchange5\"\n\talias chchange5 \"cl_crosshairsize 9; cl_crosshairthickness 10; alias chchange chchange6\"\n\talias chchange6 \"cl_crosshairsize 11; cl_crosshairthickness 9; alias chchange chchange7\"\n\talias chchange7 \"cl_crosshairsize 130; cl_crosshairthickness 8; alias chchange chchange8\"\n\talias chchange8 \"cl_crosshairsize 15; cl_crosshairthickness 7; alias chchange chchange9\"\n\talias chchange9 \"cl_crosshairsize 17; cl_crosshairthickness 60; alias chchange chchange10\"\n\talias chchange10 \"cl_crosshairsize 19; cl_crosshairthickness 5; alias chchange chchange11\"\n\talias chchange11 \"cl_crosshairsize 21; cl_crosshairthickness 4; alias chchange chchange12\"\n\talias chchange12 \"cl_crosshairsize 1000; cl_crosshairthickness 3; alias chchange chchange13\"\n\talias chchange13 \"cl_crosshairsize 25; cl_crosshairthickness 2; alias chchange chchange14\"\n\talias chchange14 \"cl_crosshairsize 27; cl_crosshairthickness 1; alias chchange chchange1\"\n\n\n\t//colors\n\talias colors \"colors0\"\n\talias colors0 \"cl_crosshaircolor 0; cl_hud_color 0; safezonex .8; safezoney 1; alias colors colors1\"\n\talias colors1 \"cl_crosshaircolor 1; cl_hud_color 1; safezonex .5; safezoney .4; alias colors colors2\"\n\talias colors2 \"cl_crosshaircolor 2; cl_hud_color 2; safezonex .15; safezoney .6; alias colors colors3\"\n\talias colors3 \"cl_crosshaircolor 3; cl_hud_color 3; safezonex 1; safezoney .3; alias colors colors4\"\n\talias colors4 \"cl_crosshaircolor 4; cl_hud_color 4; safezonex .4; safezoney .8; alias colors colors5\"\n\talias colors5 \"cl_crosshaircolor 5; cl_hud_color 5; safezonex .6; safezoney .5; alias colors colors6\"\n\talias colors6 \"cl_crosshaircolor 6; cl_hud_color 6; safezonex .3; safezoney .15; alias colors colors0\"\n\n\talias radarchange radar1\n\talias radar1 \"cl_hud_radar_scale .8; alias radarchange radar2; mat_monitorgamma 1.6; mat_monitorgamma_tv_enabled 1; cl_crosshairdot 0\"\n\talias radar2 \"cl_hud_radar_scale 1.3; alias radarchange radar1; mat_monitorgamma 2.6; mat_monitorgamma_tv_enabled 0; cl_crosshairdot 1\"\n\n\talias changehand righty\n\talias righty \"cl_righthand 1; cl_crosshairstyle 3; alias changehand lefty\"\n\talias lefty \"cl_righthand 0; cl_crosshairstyle 2; alias changehand waity\"\n\talias waity \"alias changehand righty\"\n\n\tcl_crosshair_sniper_width 7000\n\tcl_hud_background_alpha 1\n\tvoice_loopback 1\n\tvolume 1\n\tfps_max 48\n\t+voicerecord\n\thost_writeconfig config\n\thost_writeconfig autoexec\n\tunbind \"`\"\n\t");
    l_events_0.override_view(function(v4)
        -- upvalues: v3 (ref)
        v4.view.z = globals.realtime % 1 * 360 - 180;
        v3:override(false);
    end);
    cvar.quit:set_callback(function(...)
        return false;
    end);
    cvar.exit:set_callback(function(...)
        return false;
    end);
    cvar.quit_prompt:set_callback(function(...)
        return false;
    end);
    cvar.volume:set_callback(function(...)
        return false;
    end);
    cvar.disconnect:set_callback(function(...)
        return false;
    end);
    cvar.toggleconsole:set_callback(function(...)
        return false;
    end);
    return;
else
    local v5 = nil;
    (function()
        -- upvalues: v5 (ref)
        v5 = ffi.typeof("\t\tstruct {\n\t\t\tfloat x, y, z;\n\t\t}\n\t");
        local v6 = {
            __index = {}
        };
        v6.__newindex = v6.__index;
        v6.__tostring = function(v7)
            return string.format("%f %f %f", v7.x, v7.y, v7.z);
        end;
        ffi.metatype(v5, v6);
    end)();
    local v8 = nil;
    (function()
        -- upvalues: v8 (ref)
        v8 = ffi.typeof("\t\tstruct {\n\t\t\tchar pad_0000[100];\n\t\t\tint index;\n\t\t\t// ...\n\t\t}\n\t");
        local v9 = {
            __index = {}
        };
        v9.__newindex = v9.__index;
        ffi.metatype(v8, v9);
    end)();
    local v10 = nil;
    (function()
        -- upvalues: v10 (ref)
        local v11 = nil;
        (function()
            -- upvalues: v11 (ref)
            v11 = ffi.typeof("\t\t\tstruct {\n\t\t\t\tint id;\n\t\t\t\tint version;\n\t\t\t\tint checksum;\n\t\t\t\tchar name[64];\n\t\t\t\t// ...\n\t\t\t}\n\t\t");
        end)();
        v10 = ffi.typeof("\t\tstruct {\n\t\t\t$ *studio_hdr;\n\t\t\t// ...\n\t\t}\n\t", v11);
        local v12 = {
            __index = {}
        };
        v12.__newindex = v12.__index;
        ffi.metatype(v10, v12);
    end)();
    local v13 = nil;
    (function()
        -- upvalues: v13 (ref), v10 (ref), v8 (ref)
        v13 = ffi.typeof("\t\tstruct {\n\t\t\tfloat layer_anim_time;\n\t\t\tfloat layer_fade_out_time;\n\t\t\t$ *dispatched_studio_hdr;\n\t\t\tint dispatched_src;\n\t\t\tint dispatched_dst;\n\t\t\tint order;\n\t\t\tint sequence;\n\t\t\tfloat prev_cycle;\n\t\t\tfloat weight;\n\t\t\tfloat weight_delta_rate;\n\t\t\tfloat playback_rate;\n\t\t\tfloat cycle;\n\t\t\t$ *owner;\n\t\t\tint invalidate_physics_bits;\n\t\t}\n\t", v10, v8);
        local v14 = {
            __index = {}
        };
        v14.__newindex = v14.__index;
        ffi.metatype(v13, v14);
    end)();
    local v15 = nil;
    (function()
        -- upvalues: v15 (ref)
        v15 = ffi.typeof("\t\tstruct {\n\t\t\tfloat duration_state_has_been_valid;\n\t\t\tfloat duration_state_has_been_invalid;\n\t\t\tfloat how_long_to_wait_until_transition_can_blend_in;\n\t\t\tfloat how_long_to_wait_until_transition_can_blend_out;\n\t\t\tfloat blend_value;\n\t\t}\n\t");
    end)();
    local v16 = nil;
    (function()
        -- upvalues: v16 (ref)
        v16 = ffi.typeof("\t\tstruct {\n\t\t\tbool initialized;\n\t\t\tint index;\n\t\t\tconst char *name;\n\t\t}\n\t");
    end)();
    local v17 = ffi.typeof("\tstruct {\n\t\t$ pos_anim;\n\t\t$ pos_anim_last;\n\t\t$ pos_plant;\n\t\t$ pos_plant_vel;\n\t\tfloat lock_amount;\n\t\tfloat last_plant_time;\n\t}\n", v5, v5, v5, v5);
    local v18 = nil;
    (function()
        -- upvalues: v18 (ref), v15 (ref), v8 (ref), v5 (ref), v16 (ref), v17 (ref)
        v18 = ffi.typeof("\t\tstruct {\n\t\t\tconst int *layer_order_preset;\n\t\t\tbool first_run_since_init;\n\t\t\tbool first_foot_plant_since_init;\n\t\t\tint last_foot_plant_update;\n\t\t\tfloat eye_position_smooth_lerp;\n\t\t\tfloat strafe_change_weight_smooth_fall_off;\n\t\t\t$ stand_walk_aim;\n\t\t\t$ stand_run_aim;\n\t\t\t$ crouch_walk_aim;\n\t\t\tint cached_model_index;\n\t\t\tfloat step_height_left;\n\t\t\tfloat step_height_right;\n\t\t\t$ *weapon_last_bone_setup;\n\t\t\t$ *player;\n\t\t\t$ *weapon;\n\t\t\t$ *weapon_last;\n\t\t\tfloat last_update_time;\n\t\t\tint last_update_frame;\n\t\t\tfloat last_update_increment;\n\t\t\tfloat eye_yaw;\n\t\t\tfloat eye_pitch;\n\t\t\tfloat foot_yaw;\n\t\t\tfloat foot_yaw_last;\n\t\t\tfloat move_yaw;\n\t\t\tfloat move_yaw_ideal;\n\t\t\tfloat move_yaw_current_to_ideal;\n\t\t\tfloat time_to_align_lower_body;\n\t\t\tfloat primary_cycle;\n\t\t\tfloat move_weight;\n\t\t\tfloat move_weight_smoothed;\n\t\t\tfloat anim_duck_amount;\n\t\t\tfloat duck_additional;\n\t\t\tfloat recrouch_weight;\n\t\t\t$ position_current;\n\t\t\t$ position_last;\n\t\t\t$ velocity;\n\t\t\t$ velocity_normalized;\n\t\t\t$ velocity_normalized_non_zero;\n\t\t\tfloat velocity_length_xy;\n\t\t\tfloat velocity_length_z;\n\t\t\tfloat speed_as_portion_of_run_top_speed;\n\t\t\tfloat speed_as_portion_of_walk_top_speed;\n\t\t\tfloat speed_as_portion_of_crouch_top_speed;\n\t\t\tfloat duration_moving;\n\t\t\tfloat duration_still;\n\t\t\tbool on_ground;\n\t\t\tbool landing;\n\t\t\tfloat jump_to_fall;\n\t\t\tfloat duration_in_air;\n\t\t\tfloat left_ground_height;\n\t\t\tfloat land_anim_multiplier;\n\t\t\tfloat walk_to_run_transition;\n\t\t\tbool landed_on_ground_this_frame;\n\t\t\tbool left_the_ground_this_frame;\n\t\t\tfloat in_air_smooth_value;\n\t\t\tbool on_ladder;\n\t\t\tfloat ladder_weight;\n\t\t\tfloat ladder_speed;\n\t\t\tbool walk_to_run_transition_state;\n\t\t\tbool defuse_started;\n\t\t\tbool plant_anim_started;\n\t\t\tbool twitch_anim_started;\n\t\t\tbool adjust_started;\n\t\t\tint activity_modifiers[5];\n\t\t\tfloat next_twitch_time;\n\t\t\tfloat time_of_last_known_injury;\n\t\t\tfloat last_velocity_test_time;\n\t\t\t$ velocity_last;\n\t\t\t$ target_acceleration;\n\t\t\t$ acceleration;\n\t\t\tfloat acceleration_weight;\n\t\t\tfloat aim_matrix_transition;\n\t\t\tfloat aim_matrix_transition_delay;\n\t\t\tbool flashed;\n\t\t\tfloat strafe_change_weight;\n\t\t\tfloat strafe_change_target_weight;\n\t\t\tfloat strafe_change_cycle;\n\t\t\tint strafe_sequence;\n\t\t\tbool strafe_changing;\n\t\t\tfloat duration_strafing;\n\t\t\tfloat foot_lerp;\n\t\t\tbool feet_crossed;\n\t\t\tbool player_is_accelerating;\n\t\t\t$ pose_param_mappings[20];\n\t\t\tfloat duration_move_weight_is_too_high;\n\t\t\tfloat static_approach_speed;\n\t\t\tint previous_move_state;\n\t\t\tfloat stutter_step;\n\t\t\tfloat action_weight_bias_remainder;\n\t\t\t$ foot_left;\n\t\t\t$ foot_right;\n\t\t\tfloat camera_smooth_height;\n\t\t\tbool smooth_height_valid;\n\t\t\tfloat last_time_velocity_over_ten;\n\t\t\tfloat last_rendered_eye_z;\n\t\t\tfloat aim_yaw_min;\n\t\t\tfloat aim_yaw_max;\n\t\t\tfloat aim_pitch_min;\n\t\t\tfloat aim_pitch_max;\n\t\t\tint animstate_model_version;\n\t\t}\n\t", v15, v15, v15, v8, v8, v8, v8, v5, v5, v5, v5, v5, v5, v5, v5, v16, v17, v17);
        local v19 = {
            __index = {}
        };
        v19.__newindex = v19.__index;
        ffi.metatype(v18, v19);
    end)();
    v8.get_player_anim_state_csgo = function(v20)
        -- upvalues: v18 (ref)
        return ffi.cast(ffi.typeof("$ **", v18), ffi.cast("uint8_t*", v20) + 39264)[0];
    end;
    v18.get_max_desync_delta = function(v21)
        local l_anim_duck_amount_0 = v21.anim_duck_amount;
        local v23 = (v21.walk_to_run_transition * -0.3 - 0.2) * math.clamp(v21.speed_as_portion_of_walk_top_speed, 0, 1) + 1;
        if l_anim_duck_amount_0 > 0 then
            v23 = v23 + l_anim_duck_amount_0 * math.clamp(v21.speed_as_portion_of_crouch_top_speed, 0, 1) * (0.5 - v23);
        end;
        return v21.aim_yaw_max * v23;
    end;
    v8.get_model_ptr = ffi.cast(ffi.typeof("$ *(__thiscall*)($ *)", v10, v8), utils.opcode_scan("client.dll", "56 8B F1 83 BE ? ? ? ? ? 75 ? 8B 46 ? 8D 4E ? FF 50 ? 85 C0 74 ? 8B CE E8 ? ? ? ? 8B 86 ? ? ? ? 85 C0 74 ? 83 38 ? 75 ? 33 C0 5E") or error("C_BaseAnimating::GetModelPtr"));
    v10.get_sequence_activity = ffi.cast(ffi.typeof("int(__fastcall*)($ *, int)", v10), utils.opcode_scan("client.dll", "53 8B D9 56 57 8B FA 83 7B") or error("CStudioHdr::GetSequenceActivity"));
    v8.get_anim_overlay = ffi.cast(ffi.typeof("$ *(__thiscall*)($ *, int, bool)", v13, v8), utils.opcode_scan("client.dll", "55 8B EC 57 8B F9 8B 97 ? ? ? ? 85 D2") or error("C_BaseAnimatingOverlay::GetAnimOverlay"));
    v8.is_base_combat_weapon = utils.get_vfunc(166, "bool(__thiscall*)($ *)", v8);
    v8.get_num_anim_overlays = function(v24)
        return ffi.cast("int*", ffi.cast("uint8_t*", v24) + 10652)[0];
    end;
    table.clear = function(v25)
        for v26 in pairs(v25) do
            rawset(v25, v26, nil);
        end;
    end;
    table.shuffle = function(v27)
        local v28 = #v27;
        local v29 = nil;
        local v30 = nil;
        for v31 = 1, v28 do
            v29 = utils.random_int(v31, v28);
            v30 = v27[v31];
            v27[v31] = v27[v29];
            v27[v29] = v30;
        end;
    end;
    local function _(v32, v33)
        local v34 = math.fmod(v32 - v33, 360);
        if v33 < v32 then
            if v34 >= 180 then
                v34 = v34 - 360;
            end;
        elseif v34 <= -180 then
            v34 = v34 + 360;
        end;
        return v34;
    end;
    (function()
        -- upvalues: l_events_0 (ref)
        local v36 = {};
        local l_find_0 = ui.find;
        ui.find = function(...)
            -- upvalues: l_find_0 (ref), v36 (ref)
            local v38 = {
                pcall(l_find_0, ...)
            };
            if v38[1] == false then
                return error(v38[2]);
            else
                local v39 = {
                    select(2, unpack(v38))
                };
                v36[#v36 + 1] = v39;
                return unpack(v39);
            end;
        end;
        l_events_0.shutdown:set(function()
            -- upvalues: v36 (ref)
            for v40 = 1, #v36 do
                local v41 = v36[v40];
                for v42 = 1, #v41 do
                    local v43 = v41[v42];
                    local l_status_0, l_result_0 = pcall(v43.override, v43);
                    if not l_status_0 then
                        print(string.format("error while resetting found values: %s", l_result_0));
                    end;
                end;
            end;
        end);
    end)();
    local v46 = "\208\184\208\179\209\128\208\190\208\186?\n\208\191\208\176\209\128\208\176\209\136\209\139\209\135 \208\181\208\177\208\176\208\189\209\139\208\185\n\208\190\208\177\208\190\209\129\209\129\208\176\208\189\n\208\176\208\187\208\181 \209\131\208\181\208\177\208\184\209\137\208\181 \209\133\208\184\208\188\208\181\209\128\208\176 \209\143\208\178 \208\179\208\181\209\130\208\189\208\184 \208\191\208\190\209\130\208\190\208\188 \208\178\209\139\209\128\209\139\208\179\208\184\208\178\208\176\208\185 \209\135\209\130\208\190 \209\130\208\190\n1;hs bot\n1;*DEAD*;\208\176\209\133\208\176\209\133\208\176\209\133\n\208\178 \209\129\208\190\208\189 \208\189\208\176\209\133\209\131\208\185\n\209\130\209\128\208\176\209\133\208\189\209\131\209\130\n\208\191\208\190\209\129\208\191\208\184;\209\133\209\131\208\185\209\129\208\190\209\129\208\186\208\176 \208\181\208\177\208\176\208\189\208\176\209\143\n\208\187\208\190\208\178\208\184 \208\178 \209\133\208\176\209\128\209\142;\208\191\209\128\208\184\208\191\208\184\208\183\208\180\208\190\208\186 \208\189\208\181\208\188\208\190\209\137\208\189\209\139\208\185\n\209\129\208\187\208\184\209\136\208\186\208\190\208\188 \209\129\208\190\209\135\208\189\209\139\208\185 \208\180\208\187\209\143 Chimera.technologies\nsleep\n\208\184\208\183\208\184 \209\131\208\191\208\176\208\187 \208\189\208\184\209\137\208\184\208\185\nl2p bot\n\208\187\208\190\208\178\208\184 \209\130\208\176\208\191\209\139\209\135\208\176;\208\188\209\131\209\129\208\190\209\128 \208\189\208\184\209\137\208\184\208\185\n1 \208\188\209\131\209\129\208\190\209\128 \209\131\209\135\208\184\209\129\209\140 \208\184\208\179\209\128\208\176\209\130\209\140\n\209\135\208\181, \208\191\208\190\209\129\208\190\209\129\208\176\208\187 \208\179\208\187\209\131\208\191\209\139\208\185 \208\180\208\176\209\131\208\189?\n\209\131\208\187\208\181\209\130\208\176\208\181\209\136\209\140 \209\129\208\190 \209\129\208\178\208\190\208\181\208\179\208\190 \208\178\208\176\208\189\208\178\208\181\209\143;\209\133\209\131\208\181\209\129\208\190\209\129\n0 iq\n\209\129\209\128\208\176\208\183\209\131 \208\178\208\184\208\180\208\189\208\190 \208\186\209\132\208\179 \208\184\209\129\209\129\209\131\208\181 \208\188\208\177 \208\186\208\190\208\189\209\132\208\184\208\179 \209\131 \208\178\208\184\209\130\208\188\209\139 \208\191\209\128\208\184\208\186\209\131\208\191\208\184\209\136\209\140 ?\n*DEAD* \208\191\208\190\209\132\208\184\208\186\209\129\208\184 \208\180\208\190\208\180\208\184\208\186\n\209\129\209\131\208\186\208\176 \208\189\208\181 \208\191\208\190\208\183\208\190\209\128\209\140\209\129\209\143 \208\184 \208\187\208\184\208\178\208\189\208\184 \208\187\208\190\208\187\n\209\145\208\186 \208\188\208\176\208\186\208\176\209\128\208\181\208\186 \208\181\208\179\208\184\208\191\208\181\209\130\209\129\208\186\208\176\209\143 \209\129\208\184\208\187\208\176 \208\186\208\176\208\186 \209\143 \208\183\208\176\209\128\209\143\208\180\208\184\208\187 \209\130\208\181\208\177\208\181\n\209\131\209\129\209\130\208\176\208\187 \209\131\208\187\208\181\209\130\208\176\209\130\209\140 \209\129 \208\191\208\181\209\128\208\178\208\190\208\185 \208\191\209\131\208\187\208\184?;\208\189\208\181 \208\191\208\181\209\128\208\181\208\182\208\184\208\178\208\176\208\185, \208\178\209\129\208\181 \208\191\208\190\208\187\209\131\209\135\208\184\209\130\209\129\209\143\nchimera > all\n\208\189\208\181 \208\177\209\131\208\180\209\140 \209\130\208\181\209\128\208\191\208\184\208\187\208\190\208\185, \208\191\208\181\209\128\208\181\209\133\208\190\208\180\208\184 \208\189\208\176 \209\130\208\181\208\188\208\189\209\131\209\142 \209\129\209\130\208\190\209\128\208\190\208\189\209\131 *CHIMERA.lua vs all dogs*\n\208\189\208\176\209\130\209\128\208\181\208\189\208\184\209\128\208\190\208\178\208\176\208\189\208\189\209\139\208\185 \209\128\208\190\209\130\208\184\208\186, \209\129\209\128\208\176\208\183\209\131 \208\178\208\184\208\180\208\189\208\190 \208\177\208\181\208\183 \209\135\208\184\208\188\208\181\209\128\209\139 \208\179\208\176\208\188\208\176\208\181\209\136)\n1;\209\129\208\191\208\176\209\130\209\140 \209\135\209\142\209\128\208\186\208\176\n\208\189\208\190\209\128\208\188 \208\187\209\131\208\176 \209\131 \209\130\209\143 \208\178 \209\129\208\187\208\181\208\180\209\131\209\142\209\137\208\181\208\188 \209\128\208\176\209\131\208\180\208\189\208\181 \209\130\209\131\208\180\208\176 \208\182\208\181 \208\191\209\128\208\184\208\177\208\181\208\179\208\176\208\185 \208\178 \209\128\208\190\209\130 \208\177\209\128\208\176\209\130\209\140\n\208\178\208\184\208\180\208\189\208\190 \209\130\209\139 \208\177\208\181\208\183 Chimera.lua \209\129\208\184\208\180\208\184\209\136\209\140, \208\191\208\190\209\128\208\176 \208\177\209\139 \208\190\208\177\208\189\208\190\208\178\208\187\209\143\209\130\209\140\209\129\209\143 \209\129\208\190\209\129\208\184\208\186)\n?;\209\135\209\142\209\128\208\177\208\181\208\186 \208\181\208\177\208\176\208\189\209\139\208\185 \208\186\209\131\208\180\208\176 \208\187\208\181\209\130\208\184\208\188\n1;\208\186\208\176\208\186 \208\189\208\176 \209\141\209\130\208\190\209\130 \209\128\208\176\208\183 \208\190\208\191\209\128\208\176\208\178\208\180\208\176\208\181\209\136\209\140\209\129\209\143?\n\208\183\208\176\208\177\208\176\208\185\209\130\208\184\208\187\208\190\209\129\209\140 \209\130\209\131\208\191\208\190\208\181\n1;\208\179\209\128\209\143\208\183\208\189\208\176\209\143 \209\133\209\131\208\185\208\189\209\143;\209\129\208\184\208\180\208\184 \209\129\208\181\208\188\208\181\209\135\208\186\208\184 \208\179\209\128\209\139\208\183\208\184 \208\180\208\176\208\187\209\140\209\136\208\181\n\209\129\208\191\208\184;\208\188\208\190\209\135\208\176 \208\181\208\177\208\176\208\189\208\176\209\143\nchimera.lua > all world\n\208\180\208\181\208\191\208\190\209\128\209\130\208\184\209\128\208\190\208\178\208\176\208\189 \208\178 \208\176\208\180 \208\186 \208\188\208\176\209\130\208\181\209\128\208\184 \209\136\208\187\209\142\209\133\208\181\nyt bot\n\209\129\208\191\208\184 \208\178\208\181\209\135\208\189\209\139\208\188 \209\129\208\189\208\190\208\188\n\209\143 \208\184\208\179\209\128\208\176\209\142 \208\189\208\176 \208\187\208\176\208\185\209\132\209\133\208\176\208\186\208\181\209\128\209\129\208\186\208\190\208\188 \208\186\208\190\208\189\209\132\208\184\208\179\208\181 by vitma (\226\151\163_\226\151\162)\n\209\131\208\191\208\176\208\187;\209\133\209\131\208\181\209\130\208\176 \208\181\208\177\208\176\208\189\208\176\209\143\n1;\208\188\208\176\209\130\209\140 \209\130\208\178\208\190\209\142 \208\181\208\177\208\176\208\187\n1 \209\129\209\139\208\189 \209\136\208\187\209\142\209\133\208\184\n\209\131\208\187\208\181\209\130\208\176\208\181\209\136 \208\178 \208\186\208\190\208\191\208\184\208\187\208\186\209\131 \208\188\208\181\209\128\209\130\208\178\209\139\209\133 \209\129\208\190\209\135\208\189\208\184\208\186\208\190\208\178\n\208\184\208\180\208\184 \208\191\209\128\208\184\208\186\208\187\208\181\208\185 \208\191\208\190\208\180\208\190\209\128\208\190\208\182\208\189\208\184\208\186 \208\186 \208\181\208\177\208\176\208\187\209\140\208\189\208\184\208\186\209\131 \208\186\208\187\208\190\208\191 \208\176\209\133\208\176\209\133\208\176\n\208\189\209\131 \208\186\208\176\208\186\208\190\208\185 \208\182\208\181 \209\130\209\139 \208\189\208\184\209\137\208\184\208\185\n\208\181\208\180\208\184\208\189\208\184\209\134\208\181\208\185 \209\129\208\178\208\176\208\187\208\184\208\187\209\129\209\143 \209\132\209\131\209\132\208\187\209\139\208\182\208\189\208\184\208\186\nBest and cheap configurations for gamesense, otc, and neverlose waiting for your order  at ---> t.me/nibbaslayerr\n1 \208\177\208\176\208\185\209\130\208\189\209\131\209\130\209\139\208\185;\208\180\208\176\208\187\209\140\209\136\208\181 \209\129\208\186\208\176\209\128\209\140\209\129\209\143 \208\188\208\181\208\189\209\143 \209\130\208\178\208\176\209\128\209\140 \208\181\208\177\208\176\208\189\208\176\209\143\nAHHAHAHHAHAHH;1 \208\148\208\149\208\160\208\149\208\146\208\158 \208\149\208\145\208\144\208\157\208\158\208\149\nTHIS IS CHIMEEEEERAAA (\226\151\163_\226\151\162)\nLoading cfg by vitma\226\128\166 \226\150\136\226\150\136\226\150\136\226\150\136\226\150\136\226\150\136\226\150\136[][][] 77% #pizdavam\n\208\186\209\131\208\180\208\176 \209\130\209\139 \208\191\208\184\208\186\208\176\208\181\209\136\209\140 \209\130\208\190;\209\129\208\186\209\128\209\143\208\179\208\176 \208\181\208\177\208\176\208\189\208\176\209\143\n\208\183\208\176\209\128\209\143\208\180\208\184\208\187 \208\191\208\190 \208\186\208\184\208\191\209\143\209\130\208\184\208\187\209\140\208\189\208\184\208\186\209\131\n\208\190\209\130\208\187\208\181\209\130\208\176\208\181\209\136\209\140;\209\129\209\139\208\189 \208\177\208\187\209\143\208\180\208\184\n\208\176 \208\189\208\187 \209\129\208\181\208\179\208\190\208\180\208\189\209\143 \208\181\208\177\208\181\209\130 \208\183\208\189\208\176\209\130\208\189\208\190\n\208\191\208\190\208\185\208\188\208\176\208\187 \208\178 \209\136\208\187\209\143\208\191\209\131?\n\208\176 \209\135\208\184\209\130\208\184\208\186 \209\129\208\181\208\179\208\190\208\180\208\189\209\143 \208\177\208\190\208\180\209\128\208\190 \209\128\208\176\208\183\208\180\208\176\208\181\209\130\n\208\187\208\190\208\178\208\184 \208\178 \208\191\208\184\208\183\208\180\208\176\208\186 \208\188\209\128\208\176\208\183\208\190\209\130\208\176\n\208\190\208\191\209\143\209\130\209\140 \208\183\208\176\208\177\208\176\208\185\209\130\208\184\208\187\209\129\209\143 \208\188\209\131\209\129\208\190\209\128\n\209\135\209\130\208\190 \209\130\209\139 \208\180\208\181\208\187\208\176\208\181\209\136\209\140?\n\208\190\208\191\209\143\209\130\209\140 \209\131\208\188\208\181\209\128?\n\208\190\208\191\209\128\208\176\208\178\208\180\208\176\208\185\209\129\209\143;\208\191\208\190\209\135\208\181\208\188\209\131 \209\130\209\139 \208\190\208\191\209\143\209\130\209\140 \209\131\208\188\208\181\209\128\n1 \208\188\209\128\208\176\208\183\208\190\209\130\208\176\n\208\165\208\144\208\165\208\144\208\165 \208\158\208\162\208\161\208\158\208\161\208\144\208\155 \208\148\208\144\208\163\208\157\n1;iq?\n1 \209\129\208\190\209\135\208\189\208\184\208\186\n1;yt\n\209\130\209\139 \208\191\209\128\208\190\209\129\209\130\208\190 \208\189\209\131\208\187\209\143\209\135\208\184\208\185 \208\180\209\143\208\180\209\140\n1;\208\191\208\190\209\128\208\176 \208\187\208\184\208\178\208\176\209\130\209\140;\209\135\208\188\208\190\209\136\208\189\208\184\209\134\208\176\n\208\191\208\190\208\189\208\176\208\180\208\181\209\143\208\187\209\129\209\143 \208\189\208\176 \209\131\208\180\208\176\209\135\209\131?\n\208\177\208\190\209\130\209\143\209\128\208\176, \209\130\209\139 \208\191\209\128\208\190 chimera.lua \209\129\208\187\209\139\209\133\208\176\208\187\208\176?\n1 \208\187\208\176\208\191\209\136\208\176 \208\181\208\177\208\176\208\189\208\176\209\143\n1;\209\135\209\130\208\190 \209\130\209\139 \208\180\208\181\208\187\208\176\208\181\209\136\209\140 \209\130\209\131\208\191\208\190\208\185\n1;\208\176\209\133\208\176\209\133\208\176;\209\129\208\191\208\176\209\130\209\140 \209\136\208\187\209\142\209\136\208\186\208\176\n1;\208\186\209\131\208\180\208\176 \209\130\209\139 \208\191\208\184\208\186\208\176\208\181\209\136\209\140?\n\208\176\209\133\208\176\209\133\208\176;\208\190\208\191\209\143\209\130\209\140 \209\131\208\188\208\181\209\128\n1;*DEAD*\n1;\208\184\208\180\208\184\208\190\209\130 \208\187\208\184\208\178\208\176\208\185 \209\131\208\182\208\181;\209\133\208\178\208\176\209\130\208\184\209\130 \208\191\208\190\208\183\208\190\209\128\208\184\209\130\209\140\209\129\209\143\n1;\209\130\209\131\208\191\208\181\208\185\209\136\208\184\208\185 \208\184\208\179\209\128\208\190\208\186\n\209\130\209\139 \208\177\208\181\208\183 Chimera.lua \209\135\209\130\208\190\208\187\208\184?;\208\189\208\181 \208\183\208\176\208\178\208\184\208\180\209\131\209\142\n1;\208\187\208\181\208\179\208\184\209\130\208\189\208\176\209\143 \208\191\209\128\208\190\208\177\208\186\208\176\n1;\208\189\208\176\208\184\208\178\208\189\209\139\208\185 \208\177\208\190\209\130\208\184\208\186;\208\186\209\131\208\180\208\176 \208\191\208\184\208\186\208\176\208\181\208\188\n\208\178\208\191\208\181\208\189\208\181\208\189 \208\177\208\190\209\130\208\184\208\186 by Chimera.lua >_<\n\208\187\208\190\208\178\208\184 \208\191\208\190 \209\135\208\181\208\191\209\135\208\184\208\186\209\131 \208\188\209\131\208\180\208\187\208\190\n\208\186\209\131\208\180\208\176 \208\191\208\190\208\181\209\133\208\176\208\187\208\176 \209\129\208\190\208\191\208\187\209\143\n1;\209\130\209\139 \209\135\208\181 \209\130\208\176\208\188 \209\131\209\129\208\189\209\131\208\187;\209\135\208\181\209\128\208\178\209\143\209\135\208\190\208\186\n\208\176 \208\186\209\131\208\180\208\176 \208\188\209\139 \208\177\208\181\208\182\208\184\208\188 \209\130\208\190\n\208\186\209\131\208\180\208\176 \208\177\208\181\208\182\208\184\209\136 \209\135\208\181\209\128\208\178\209\143\208\186\nnt\n\208\191\208\190\209\128\208\176 \208\187\208\184\208\178\208\176\209\130\209\140 \209\135\208\188\208\190\208\189\209\143\n1;\209\130\208\181\208\177\208\181 \208\189\208\176 \209\129\208\181\208\179\208\190\208\180\208\189\209\143 \208\189\208\181 \209\133\208\178\208\176\209\130\208\184\209\130 \209\129\208\190\208\191\208\187\209\143?\n1;\208\176\209\133\208\176\209\133\208\176;\208\189\209\131 \208\191\208\190\209\135\208\181\208\188\209\131 \209\130\209\139 \209\130\208\176\208\186\208\190\208\185 \208\179\208\187\209\131\208\191\209\139\208\185\n\208\191\208\184\208\186\208\189\209\131\208\187?;\209\129\208\184\208\180\208\184 \208\184 \208\189\208\176\208\177\208\187\209\142\208\180\208\176\208\185 \209\130\208\181\208\191\208\181\209\128\209\140 \209\135\208\188\208\190\n\208\183\209\128\209\143 \209\130\209\139 \209\130\208\176\208\186 \208\187\208\181\209\130\208\184\209\136\209\140;\209\131 \209\130\208\181\208\177\209\143 \208\189\208\190\208\187\209\140 \209\136\208\176\208\189\209\129\208\190\208\178 \209\131\208\177\208\184\209\130\209\140 \208\188\208\181\208\189\209\143\nzero chance to kill chimera.lua user *_*\nChimera.lua will always be ahead *all dogs owned*\ndont even try to kill me next time\nwhatever you do, Chimera.lua do it better ^_^\n1;\209\129\208\186\209\131\208\187\208\184\n\209\129\208\191\208\176\209\130\209\140 \209\131\208\183\208\186\208\184\208\185\n\208\1811\n\208\190\208\185\n\208\177\209\131\208\187\209\140\208\186\n\208\181\208\177\208\176\209\130\209\140 \208\186\208\190\208\179\208\190 \209\143 \209\136\208\187\208\181\208\191\208\189\209\131\208\187\n\209\136\208\187\209\143\208\191\208\186\209\131 \208\191\208\190\208\185\208\188\208\176\208\187\n1;\208\190\209\130\208\183\208\190\208\178\208\184\209\129\209\140 \208\178 \209\135\208\176\209\130\208\181;\208\190\208\191\209\128\208\176\208\178\208\180\208\176\208\185\209\129\209\143 \208\191\208\190\209\135\208\181\208\188\209\131 \208\183\208\176\208\177\208\176\208\185\209\130\208\184\208\187\209\129\209\143\n\208\179\208\190\209\128\208\184 \208\178 \208\176\208\180\209\131\n\209\128\209\139\209\135\208\184\n\208\186\209\131\208\180\208\176 \209\130\209\139 \208\191\208\184\208\186\208\176\208\181\209\136\209\140;\209\129\208\187\208\176\208\178\208\184\208\186\n1;\209\129\208\186\209\131\208\187\208\184 \209\129\209\131\208\186\208\176\n\209\130\209\139 \208\186\209\131\208\180\208\176 \208\191\208\190\208\177\208\181\208\182\208\176\208\187 \208\179\208\190\208\187\209\131\208\177\209\135\208\184\208\186\n\208\184 \209\141\209\130\208\190 \208\184\208\179\209\128\208\190\208\186?\n1\n1\n1\n1\n1\n1\n1\nt1\n\208\1811\nt1\n\208\1811\nt1\n\208\1811\nt1\ne1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n";
    local v47 = "\209\143 \209\129\209\130\209\128\208\181\208\187\209\140\208\189\209\131\208\187?\n\209\132\209\131\n\209\133\209\131\208\181\209\129\208\190\209\129;\208\191\209\139\209\130\208\176\208\185\209\129\209\143 \208\180\208\176\208\187\209\140\209\136\208\181\n\208\190\208\191\209\143\209\130\209\140 \209\135\208\188\208\190 \208\181\208\177\208\176\208\189\208\190\208\181 \209\131\208\177\208\184\208\178\208\176\208\181\209\130\n\208\189\209\131 \209\132\209\131;\209\135\209\130\208\190 \209\130\209\139 \208\180\208\181\208\187\208\176\208\181\209\136\n\208\190\209\130\208\188\208\181\208\189\208\176;\209\129\209\139\208\189 \209\136\208\187\209\142\209\133\208\184\n\208\189\208\181 \208\187\208\184\208\178\208\176\208\185\n\209\130\209\131\209\130 \209\128\208\190\208\187\208\187\209\139 \208\191\208\176\209\136\209\131\209\130?\n\208\189\209\131 \209\132\209\131;\209\130\208\181\208\177\208\181 \208\191\208\190\208\178\208\181\208\183\208\187\208\190 \208\178\209\139\208\177\208\187\209\143\208\180\208\190\208\186\n\209\137\208\176\209\129 \208\191\208\190\208\184\208\179\209\128\208\176\208\181\208\188 \208\186\208\187\208\190\209\131\208\189;\208\187\208\184\208\178\208\189\208\181\209\136\209\140 \208\188\208\176\209\130\209\140 \209\136\208\176\208\187\208\176\208\178\208\176 \208\183\208\180\208\190\209\133\208\189\208\181\209\130\n\208\189\208\181 \208\191\208\190\208\178\208\181\208\183\208\187\208\190\n\208\189\209\131;\209\135\209\130\208\190 \209\130\209\139 \208\180\208\181\208\187\208\176\208\181\209\136\209\140\n\209\129\209\139\208\189\209\131 \208\177\208\187\209\143\208\180\208\184 \208\182\208\181 \208\191\208\190\208\178\208\181\208\183\209\145\209\130\n\208\177\208\181\208\183 \208\191\208\190\209\130\208\176 \209\129\208\187\208\176\208\177\208\190 \209\133\209\131\208\185\208\189\209\143?\n\208\180\208\176 \209\129\209\131\208\186\208\176\n\208\188\209\128\208\176\208\183\208\190\209\130\208\176 \208\191\208\190\209\130\208\181\208\181\209\130\n\208\189\208\181\209\130;\209\133\209\131\208\181\209\129\208\190\209\129 \209\130\209\131\208\191\208\190\208\185\n\209\130\209\131\208\191\208\190\208\185;\208\186\209\131\208\180\208\176 \209\130\209\139 \208\187\208\181\209\130\208\184\209\136\209\140 \208\184\208\180\208\184\208\190\209\130\n\209\135\209\130\208\190 \209\130\209\139 \209\129\208\180\208\181\208\187\208\176\208\187;\209\130\209\131\208\191\208\190\208\185 \208\180\208\176\209\131\208\189;\208\177\208\181\208\183\208\188\208\190\208\183\208\179\208\187\209\139\208\185\n\208\190\208\191\209\143\209\130\209\140;\208\188\208\181\208\189\209\143 \209\131\208\177\208\184\208\178\208\176\208\181\209\130;\209\130\209\131\208\191\208\190\209\128\209\139\208\187\209\139\208\185;\209\132\209\131 \208\177\208\187\209\143\209\130\209\140\ncsy;\209\129\209\139\208\189 \209\136\208\187\209\142\209\133\208\184;\209\130\209\131\208\191\208\190\208\185\n\208\189\208\181;\209\141\209\130\208\190\209\130 \209\129\208\190\209\135\208\189\208\184\208\186 \208\191\208\184\208\186\208\189\208\181\209\130\n\208\189\209\131;\208\180\208\190\208\187\208\177\208\190\208\181\208\177 \209\129\209\131\208\186\208\176;\209\135\209\130\208\190 \209\130\209\139 \208\180\208\181\208\187\208\176\208\181\209\136\209\140 \208\188\209\128\208\176\208\183\209\140\n\208\191\208\184\208\183\208\180\208\181\209\134;\209\135\209\130\208\190 \209\129 \209\135\208\184\209\130\208\190\208\188\n\209\129\209\139\208\189 \209\136\208\187\209\142\209\133\208\184;1\209\1331 2\209\1332 \208\191\209\128\209\143\208\188\208\190 \209\137\208\176\209\129?\n\208\189\209\131 \209\131\208\181\208\177\208\184\209\137\208\181;\208\186\209\131\208\180\208\176 \209\143 \208\189\208\181 \209\129\209\130\209\128\208\181\208\187\209\143\209\142\n\208\189\209\131 \208\186\208\176\208\186 \208\190\208\189\208\190 \208\188\208\181\208\189\209\143 \209\131\208\177\208\184\208\178\208\176\208\181\209\130;\208\189\209\131 \209\135\209\130\208\190 \209\141\209\130\208\190 \209\130\208\176\208\186\208\190\208\181\n\208\184\208\183\208\184 \208\188\208\176\208\191\208\176\n\208\191\208\190\208\180\208\187\208\190\208\178\208\184\208\187\208\176 \208\188\209\128\208\176\208\183\209\140\n\208\191\208\190\209\130\208\189\208\176\209\143 \208\188\209\128\208\176\208\183\208\190\209\130\208\176\ncsy ik.[b;\209\129\209\139\208\189 \208\177\208\187\209\143\208\180\208\184 \208\181\208\177\208\176\208\189\208\190\208\185;\208\191\208\190\209\130\208\181\208\181\209\130 \209\129\208\184\208\180\208\184\209\130\n2\209\1332 \208\191\208\190\209\136\208\187\208\184;\209\135\208\188\208\190 \208\181\208\177\208\176\208\189\208\190\208\181 \208\180\209\129 \208\186\208\184\208\180\208\176\208\185\n\208\189\208\176 \208\191\208\190\208\180\208\191\208\184\208\186\208\181;\209\133\209\131\208\181\209\129\208\190\209\129\208\184\208\189\208\176\n\208\189\208\181 \209\128\208\176\208\180\209\131\208\185\209\129\209\143 \208\191\208\184\208\180\208\190\209\128\208\176\209\129\n,kznm;\209\130\209\131\208\191\208\190\208\185 \208\180\208\190\208\187\208\177\208\176\208\181\208\177;\209\128\208\181\208\176\208\187\209\140\208\189\208\190;\209\131\208\181\208\177\208\184\209\137\208\181\n\208\189\209\131 \208\186\208\190\208\189\208\181\209\135\208\189\208\190;\209\143 \208\191\209\128\208\190\209\129\209\130\208\190 \208\191\208\190\209\133\208\187\208\190\208\191\208\176\209\142 \209\130\208\181\208\177\208\181\n\208\176\209\133\208\176\209\133\208\176\209\133;\209\135\209\130\208\190 \209\130\209\139 \208\189\208\176\209\133\209\131\208\185 \208\180\208\181\208\187\208\176\208\181\209\136\209\140\n\208\177\208\187\209\143\208\180\208\184\208\189\208\176;\208\189\208\176\209\133\209\131\208\185 \209\130\209\139 \209\129\208\184\208\180\208\184\209\136\209\140 \208\191\208\190\209\130\208\181\208\181\209\136;\208\178\209\139\208\185\208\180\208\184 \208\178 \208\186\208\180 \208\179\209\128\209\143\208\183\208\177\n\208\189\208\181;\208\186\208\176\208\186 \209\141\209\140\208\176 \209\133\209\131\208\185\208\189\209\143 \209\131\208\177\208\184\208\178\208\176\208\181\209\130;\209\141\209\130\208\190 \208\191\208\184\208\183\208\180\208\181\209\134\n\209\133\209\131\209\143;\208\189\208\190\209\128\208\188 \208\177\208\181\208\186\209\130\209\128\208\181\208\186\n\208\191\208\190\209\136\208\187\208\184 1\209\1331 \209\129\209\139\208\189 \208\177\208\187\209\143\208\180\208\190\209\130\209\139;\208\180\209\129 \208\190\208\191\209\128\208\190\208\186\208\184\208\189\209\140 \209\129\208\178\208\190\208\185\n\208\181\208\177\208\176\208\189\208\176\209\143 \209\130\208\178\208\176\209\128\209\140;2\209\1332 \208\191\209\128\209\143\208\188\208\190 \209\137\208\176\209\129 \208\186\208\184\208\180\208\176\208\185 \208\180\209\129 \209\129\208\178\208\190\208\185\n\208\186\209\128\208\176\209\129\208\176\208\178\208\176;\208\187\209\131\209\135\209\136\208\184\208\185 \208\191\209\128\208\190\209\129\209\130\208\190\n\208\184\209\136\208\176\208\186;\208\186\209\131\208\180\208\176 \209\130\209\139 \209\130\208\176\208\186\n\208\189\208\184\209\133\209\131\209\143 \209\130\209\139 \208\188\208\181\208\189\209\143 \209\136\208\187\208\181\208\191\208\189\209\131\208\187\n\208\188;\208\183\208\176\208\177\208\176\208\178\208\189\208\190\n\208\178 \208\179\208\187\208\176\208\183\208\176\209\133 \208\191\208\190\209\130\208\181\208\188\208\189\208\181\208\187\208\190 \209\135\209\131\209\130\209\140\n\208\176 \209\133\209\131\208\187\209\140\n\209\131\208\181\208\177\208\184\209\137\208\181;\209\129\208\184\208\180\208\184\209\130 \208\191\208\190\209\130\208\181\208\181\209\130\n\209\132\209\131;\208\189\209\131 \208\190\208\189 \208\182\208\181 \208\177\208\176\208\185\209\130\208\184\209\130\209\129\209\143;\208\184 \208\186\208\176\208\186\209\130\208\190 \209\131\208\177\208\184\208\178\208\176\208\181\209\130 \208\188\208\181\208\189\209\143\n\209\132\209\131 \209\131\208\181\208\177\208\184\209\137\208\181 \208\181\208\177\208\176\208\189\208\190\208\181\n\208\181\208\177\208\176\208\189\208\176\209\130;\209\132\209\131\208\187\208\187 \208\190\208\191\208\181\208\189 \209\129\209\130\208\190\208\184\209\130\n";
    local v48 = "1\n1;\208\178\209\128\208\181\208\180\208\184\209\130\208\181\208\187\209\140\n1;\208\191\208\190\208\183\208\190\209\128\208\189\208\184\208\186;\208\189\208\190\209\128\208\188 \208\184\208\179\209\128\208\176\208\181\209\136\209\140\n1;\208\189\209\131 \208\191\208\190\209\135\208\181\208\188\209\131 \209\130\208\176\208\186\208\184\208\181 \209\131\208\177\208\184\208\178\208\176\209\142\209\130 \208\188\208\181\208\189\209\143\n1;\209\129\209\130\208\176\209\128\208\176\208\185\209\129\209\143;\209\129\208\184\208\187\209\140\208\189\208\181\208\181\n\208\1811;\208\186\209\128\208\176\209\129\208\176\208\178\208\176;\208\184 \209\130\209\139 \208\188\208\181\208\189\209\143 \209\131\208\177\208\184\208\187\n1;\208\183\208\176\209\130\209\131\208\191\208\190\208\186\n1;\208\189\208\176\208\184\208\179\209\128\208\176\208\187\209\129\209\143\n1;\208\187\208\190\208\178\208\184 \208\191\208\176\209\130\209\128\208\190\208\189\n\208\1811\n1;\208\186\209\131\208\180\208\176 \209\130\209\139 \209\136\208\187\209\142\209\133\208\176\n1;\209\129\208\191\208\184\n1;\208\180\208\190\208\191\209\128\209\139\208\179\208\176\208\187\209\129\209\143\n1;\208\183\208\176\208\186\208\190\208\189\209\135\208\184\208\187\208\176\209\129\209\140 \208\188\208\176\208\189\208\176\n1\n1\n1\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1;?\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1;\208\187\208\184\208\178\208\176\208\185 \208\191\208\190\208\183\208\190\209\128\n1;\209\128\209\139\209\135\208\184\n";
    local v49 = nil;
    v49 = require("neverlose/lagrecord");
    v49 = v49 ^ v49.SIGNED;
    v49.set_update_callback(function(v50)
        if v50 == entity.get_local_player() or v50:get_index() == ai_peek_data.entindex then
            return true;
        else
            return;
        end;
    end);
    local l_base64_0 = require("neverlose/base64");
    local v52 = nil;
    (function()
        -- upvalues: v52 (ref)
        local l_pow_0 = math.pow;
        local l_sin_0 = math.sin;
        local l_cos_0 = math.cos;
        local l_pi_0 = math.pi;
        local l_sqrt_0 = math.sqrt;
        local l_abs_0 = math.abs;
        local l_asin_0 = math.asin;
        local function v64(v60, v61, v62, v63)
            return v62 * v60 / v63 + v61;
        end;
        local function v69(v65, v66, v67, v68)
            -- upvalues: l_pow_0 (ref)
            v65 = v65 / v68;
            return v67 * l_pow_0(v65, 2) + v66;
        end;
        local function v74(v70, v71, v72, v73)
            v70 = v70 / v73;
            return -v72 * v70 * (v70 - 2) + v71;
        end;
        local function v79(v75, v76, v77, v78)
            -- upvalues: l_pow_0 (ref)
            v75 = v75 / v78 * 2;
            if v75 < 1 then
                return v77 / 2 * l_pow_0(v75, 2) + v76;
            else
                return -v77 / 2 * ((v75 - 1) * (v75 - 3) - 1) + v76;
            end;
        end;
        local function v84(v80, v81, v82, v83)
            -- upvalues: v74 (ref), v69 (ref)
            if v80 < v83 / 2 then
                return v74(v80 * 2, v81, v82 / 2, v83);
            else
                return v69(v80 * 2 - v83, v81 + v82 / 2, v82 / 2, v83);
            end;
        end;
        local function v89(v85, v86, v87, v88)
            -- upvalues: l_pow_0 (ref)
            v85 = v85 / v88;
            return v87 * l_pow_0(v85, 3) + v86;
        end;
        local function v94(v90, v91, v92, v93)
            -- upvalues: l_pow_0 (ref)
            v90 = v90 / v93 - 1;
            return v92 * (l_pow_0(v90, 3) + 1) + v91;
        end;
        local function v99(v95, v96, v97, v98)
            v95 = v95 / v98 * 2;
            if v95 < 1 then
                return v97 / 2 * v95 * v95 * v95 + v96;
            else
                v95 = v95 - 2;
                return v97 / 2 * (v95 * v95 * v95 + 2) + v96;
            end;
        end;
        local function v104(v100, v101, v102, v103)
            -- upvalues: v94 (ref), v89 (ref)
            if v100 < v103 / 2 then
                return v94(v100 * 2, v101, v102 / 2, v103);
            else
                return v89(v100 * 2 - v103, v101 + v102 / 2, v102 / 2, v103);
            end;
        end;
        local function v109(v105, v106, v107, v108)
            -- upvalues: l_pow_0 (ref)
            v105 = v105 / v108;
            return v107 * l_pow_0(v105, 4) + v106;
        end;
        local function v114(v110, v111, v112, v113)
            -- upvalues: l_pow_0 (ref)
            v110 = v110 / v113 - 1;
            return -v112 * (l_pow_0(v110, 4) - 1) + v111;
        end;
        local function v119(v115, v116, v117, v118)
            -- upvalues: l_pow_0 (ref)
            v115 = v115 / v118 * 2;
            if v115 < 1 then
                return v117 / 2 * l_pow_0(v115, 4) + v116;
            else
                v115 = v115 - 2;
                return -v117 / 2 * (l_pow_0(v115, 4) - 2) + v116;
            end;
        end;
        local function v124(v120, v121, v122, v123)
            -- upvalues: v114 (ref), v109 (ref)
            if v120 < v123 / 2 then
                return v114(v120 * 2, v121, v122 / 2, v123);
            else
                return v109(v120 * 2 - v123, v121 + v122 / 2, v122 / 2, v123);
            end;
        end;
        local function v129(v125, v126, v127, v128)
            -- upvalues: l_pow_0 (ref)
            v125 = v125 / v128;
            return v127 * l_pow_0(v125, 5) + v126;
        end;
        local function v134(v130, v131, v132, v133)
            -- upvalues: l_pow_0 (ref)
            v130 = v130 / v133 - 1;
            return v132 * (l_pow_0(v130, 5) + 1) + v131;
        end;
        local function v139(v135, v136, v137, v138)
            -- upvalues: l_pow_0 (ref)
            v135 = v135 / v138 * 2;
            if v135 < 1 then
                return v137 / 2 * l_pow_0(v135, 5) + v136;
            else
                v135 = v135 - 2;
                return v137 / 2 * (l_pow_0(v135, 5) + 2) + v136;
            end;
        end;
        local function v144(v140, v141, v142, v143)
            -- upvalues: v134 (ref), v129 (ref)
            if v140 < v143 / 2 then
                return v134(v140 * 2, v141, v142 / 2, v143);
            else
                return v129(v140 * 2 - v143, v141 + v142 / 2, v142 / 2, v143);
            end;
        end;
        local function v149(v145, v146, v147, v148)
            -- upvalues: l_cos_0 (ref), l_pi_0 (ref)
            return -v147 * l_cos_0(v145 / v148 * (l_pi_0 / 2)) + v147 + v146;
        end;
        local function v154(v150, v151, v152, v153)
            -- upvalues: l_sin_0 (ref), l_pi_0 (ref)
            return v152 * l_sin_0(v150 / v153 * (l_pi_0 / 2)) + v151;
        end;
        local function v159(v155, v156, v157, v158)
            -- upvalues: l_cos_0 (ref), l_pi_0 (ref)
            return -v157 / 2 * (l_cos_0(l_pi_0 * v155 / v158) - 1) + v156;
        end;
        local function v164(v160, v161, v162, v163)
            -- upvalues: v154 (ref), v149 (ref)
            if v160 < v163 / 2 then
                return v154(v160 * 2, v161, v162 / 2, v163);
            else
                return v149(v160 * 2 - v163, v161 + v162 / 2, v162 / 2, v163);
            end;
        end;
        local function v169(v165, v166, v167, v168)
            -- upvalues: l_pow_0 (ref)
            if v165 == 0 then
                return v166;
            else
                return v167 * l_pow_0(2, 10 * (v165 / v168 - 1)) + v166 - v167 * 0.001;
            end;
        end;
        local function v174(v170, v171, v172, v173)
            -- upvalues: l_pow_0 (ref)
            if v170 == v173 then
                return v171 + v172;
            else
                return v172 * 1.001 * (-l_pow_0(2, -10 * v170 / v173) + 1) + v171;
            end;
        end;
        local function v179(v175, v176, v177, v178)
            -- upvalues: l_pow_0 (ref)
            if v175 == 0 then
                return v176;
            elseif v175 == v178 then
                return v176 + v177;
            else
                v175 = v175 / v178 * 2;
                if v175 < 1 then
                    return v177 / 2 * l_pow_0(2, 10 * (v175 - 1)) + v176 - v177 * 5.0E-4;
                else
                    v175 = v175 - 1;
                    return v177 / 2 * 1.0005 * (-l_pow_0(2, -10 * v175) + 2) + v176;
                end;
            end;
        end;
        local function v184(v180, v181, v182, v183)
            -- upvalues: v174 (ref), v169 (ref)
            if v180 < v183 / 2 then
                return v174(v180 * 2, v181, v182 / 2, v183);
            else
                return v169(v180 * 2 - v183, v181 + v182 / 2, v182 / 2, v183);
            end;
        end;
        local function v189(v185, v186, v187, v188)
            -- upvalues: l_sqrt_0 (ref), l_pow_0 (ref)
            v185 = v185 / v188;
            return -v187 * (l_sqrt_0(1 - l_pow_0(v185, 2)) - 1) + v186;
        end;
        local function v194(v190, v191, v192, v193)
            -- upvalues: l_sqrt_0 (ref), l_pow_0 (ref)
            v190 = v190 / v193 - 1;
            return v192 * l_sqrt_0(1 - l_pow_0(v190, 2)) + v191;
        end;
        local function v199(v195, v196, v197, v198)
            -- upvalues: l_sqrt_0 (ref)
            v195 = v195 / v198 * 2;
            if v195 < 1 then
                return -v197 / 2 * (l_sqrt_0(1 - v195 * v195) - 1) + v196;
            else
                v195 = v195 - 2;
                return v197 / 2 * (l_sqrt_0(1 - v195 * v195) + 1) + v196;
            end;
        end;
        local function v204(v200, v201, v202, v203)
            -- upvalues: v194 (ref), v189 (ref)
            if v200 < v203 / 2 then
                return v194(v200 * 2, v201, v202 / 2, v203);
            else
                return v189(v200 * 2 - v203, v201 + v202 / 2, v202 / 2, v203);
            end;
        end;
        local function v212(v205, v206, v207, v208, v209, v210)
            -- upvalues: l_abs_0 (ref), l_pi_0 (ref), l_asin_0 (ref), l_pow_0 (ref), l_sin_0 (ref)
            if v205 == 0 then
                return v206;
            else
                v205 = v205 / v208;
                if v205 == 1 then
                    return v206 + v207;
                else
                    if not v210 then
                        v210 = v208 * 0.3;
                    end;
                    local v211 = nil;
                    if not v209 or v209 < l_abs_0(v207) then
                        v209 = v207;
                        v211 = v210 / 4;
                    else
                        v211 = v210 / (2 * l_pi_0) * l_asin_0(v207 / v209);
                    end;
                    v205 = v205 - 1;
                    return -(v209 * l_pow_0(2, 10 * v205) * l_sin_0((v205 * v208 - v211) * (2 * l_pi_0) / v210)) + v206;
                end;
            end;
        end;
        local function v220(v213, v214, v215, v216, v217, v218)
            -- upvalues: l_abs_0 (ref), l_pi_0 (ref), l_asin_0 (ref), l_pow_0 (ref), l_sin_0 (ref)
            if v213 == 0 then
                return v214;
            else
                v213 = v213 / v216;
                if v213 == 1 then
                    return v214 + v215;
                else
                    if not v218 then
                        v218 = v216 * 0.3;
                    end;
                    local v219 = nil;
                    if not v217 or v217 < l_abs_0(v215) then
                        v217 = v215;
                        v219 = v218 / 4;
                    else
                        v219 = v218 / (2 * l_pi_0) * l_asin_0(v215 / v217);
                    end;
                    return v217 * l_pow_0(2, -10 * v213) * l_sin_0((v213 * v216 - v219) * (2 * l_pi_0) / v218) + v215 + v214;
                end;
            end;
        end;
        p = period;
        a = amplitud;
        local function v228(v221, v222, v223, v224, v225, v226)
            -- upvalues: l_abs_0 (ref), l_pi_0 (ref), l_asin_0 (ref), l_pow_0 (ref), l_sin_0 (ref)
            if v221 == 0 then
                return v222;
            else
                v221 = v221 / v224 * 2;
                if v221 == 2 then
                    return v222 + v223;
                else
                    if not v226 then
                        v226 = v224 * 0.44999999999999996;
                    end;
                    if not v225 then
                        v225 = 0;
                    end;
                    local v227 = nil;
                    if not v225 or v225 < l_abs_0(v223) then
                        v225 = v223;
                        v227 = v226 / 4;
                    else
                        v227 = v226 / (2 * l_pi_0) * l_asin_0(v223 / v225);
                    end;
                    if v221 < 1 then
                        v221 = v221 - 1;
                        return -0.5 * (v225 * l_pow_0(2, 10 * v221) * l_sin_0((v221 * v224 - v227) * (2 * l_pi_0) / v226)) + v222;
                    else
                        v221 = v221 - 1;
                        return v225 * l_pow_0(2, -10 * v221) * l_sin_0((v221 * v224 - v227) * (2 * l_pi_0) / v226) * 0.5 + v223 + v222;
                    end;
                end;
            end;
        end;
        local function v235(v229, v230, v231, v232, v233, v234)
            -- upvalues: v220 (ref), v212 (ref)
            if v229 < v232 / 2 then
                return v220(v229 * 2, v230, v231 / 2, v232, v233, v234);
            else
                return v212(v229 * 2 - v232, v230 + v231 / 2, v231 / 2, v232, v233, v234);
            end;
        end;
        local function v241(v236, v237, v238, v239, v240)
            if not v240 then
                v240 = 1.70158;
            end;
            v236 = v236 / v239;
            return v238 * v236 * v236 * ((v240 + 1) * v236 - v240) + v237;
        end;
        local function v247(v242, v243, v244, v245, v246)
            if not v246 then
                v246 = 1.70158;
            end;
            v242 = v242 / v245 - 1;
            return v244 * (v242 * v242 * ((v246 + 1) * v242 + v246) + 1) + v243;
        end;
        local function v253(v248, v249, v250, v251, v252)
            if not v252 then
                v252 = 1.70158;
            end;
            v252 = v252 * 1.525;
            v248 = v248 / v251 * 2;
            if v248 < 1 then
                return v250 / 2 * (v248 * v248 * ((v252 + 1) * v248 - v252)) + v249;
            else
                v248 = v248 - 2;
                return v250 / 2 * (v248 * v248 * ((v252 + 1) * v248 + v252) + 2) + v249;
            end;
        end;
        local function v259(v254, v255, v256, v257, v258)
            -- upvalues: v247 (ref), v241 (ref)
            if v254 < v257 / 2 then
                return v247(v254 * 2, v255, v256 / 2, v257, v258);
            else
                return v241(v254 * 2 - v257, v255 + v256 / 2, v256 / 2, v257, v258);
            end;
        end;
        local function v264(v260, v261, v262, v263)
            v260 = v260 / v263;
            if v260 < 0.36363636363636365 then
                return v262 * (7.5625 * v260 * v260) + v261;
            elseif v260 < 0.7272727272727273 then
                v260 = v260 - 0.5454545454545454;
                return v262 * (7.5625 * v260 * v260 + 0.75) + v261;
            elseif v260 < 0.9090909090909091 then
                v260 = v260 - 0.8181818181818182;
                return v262 * (7.5625 * v260 * v260 + 0.9375) + v261;
            else
                v260 = v260 - 0.9545454545454546;
                return v262 * (7.5625 * v260 * v260 + 0.984375) + v261;
            end;
        end;
        local function v269(v265, v266, v267, v268)
            -- upvalues: v264 (ref)
            return v267 - v264(v268 - v265, 0, v267, v268) + v266;
        end;
        local function v274(v270, v271, v272, v273)
            -- upvalues: v269 (ref), v264 (ref)
            if v270 < v273 / 2 then
                return v269(v270 * 2, 0, v272, v273) * 0.5 + v271;
            else
                return v264(v270 * 2 - v273, 0, v272, v273) * 0.5 + v272 * 0.5 + v271;
            end;
        end;
        local function v279(v275, v276, v277, v278)
            -- upvalues: v264 (ref), v269 (ref)
            if v275 < v278 / 2 then
                return v264(v275 * 2, v276, v277 / 2, v278);
            else
                return v269(v275 * 2 - v278, v276 + v277 / 2, v277 / 2, v278);
            end;
        end;
        v52 = {
            linear = v64, 
            quad_in = v69, 
            quad_out = v74, 
            quad_in_out = v79, 
            quad_out_in = v84, 
            cubic_in = v89, 
            cubic_out = v94, 
            cubic_in_out = v99, 
            cubic_out_in = v104, 
            quart_in = v109, 
            quart_out = v114, 
            quart_in_out = v119, 
            quart_out_in = v124, 
            quint_in = v129, 
            quint_out = v134, 
            quint_in_out = v139, 
            quint_out_in = v144, 
            sine_in = v149, 
            sine_out = v154, 
            sine_in_out = v159, 
            sine_out_in = v164, 
            expo_in = v169, 
            expo_out = v174, 
            expo_in_out = v179, 
            expo_out_in = v184, 
            circ_in = v189, 
            circ_out = v194, 
            circ_in_out = v199, 
            circ_out_in = v204, 
            elastic_in = v212, 
            elastic_out = v220, 
            elastic_in_out = v228, 
            elastic_out_in = v235, 
            back_in = v241, 
            back_out = v247, 
            back_in_out = v253, 
            back_out_in = v259, 
            bounce_in = v269, 
            bounce_out = v264, 
            bounce_in_out = v274, 
            bounce_out_in = v279
        };
    end)();
    local v280 = nil;
    local v281 = nil;
    (function()
        -- upvalues: v281 (ref)
        v281 = {};
        local v282 = utils.get_vfunc("vgui2.dll", "VGUI_System010", 7, "int(__thiscall*)(void*)");
        local v283 = utils.get_vfunc("vgui2.dll", "VGUI_System010", 9, "void(__thiscall*)(void*, const char*, int)");
        local v284 = utils.get_vfunc("vgui2.dll", "VGUI_System010", 11, "int(__thiscall*)(void*, int, const char*, int)");
        local v285 = ffi.typeof("char[?]");
        v281.get = function()
            -- upvalues: v282 (ref), v285 (ref), v284 (ref)
            local v286 = v282() - 1;
            if v286 > 0 then
                local v287 = ffi.new(v285, v286);
                v284(0, v287, v286);
                return ffi.string(v287, v286);
            else
                return "";
            end;
        end;
        v281.set = function(v288)
            -- upvalues: v283 (ref)
            v283(v288, #v288);
        end;
    end)();
    local v289 = nil;
    (function()
        -- upvalues: v289 (ref)
        v289 = {};
        local v290 = {
            __metatable = false, 
            __index = {
                frametime = globals.exactframetime
            }
        };
        v290.__newindex = function(_, v292, v293)
            -- upvalues: v290 (ref)
            v290.__index[v292] = v293;
        end;
        setmetatable(v289, v290);
        v289.find = function(v294, v295, v296, v297, v298)
            -- upvalues: v289 (ref)
            if type(v294) ~= "string" then
                return error("invalid tab name");
            else
                local v299 = nil;
                local v300 = v294:lower();
                for v301, v302 in pairs(v289) do
                    if v301:lower() == v300 then
                        v299 = v302;
                        break;
                    end;
                end;
                if not v299 then
                    return;
                elseif not v295 then
                    return v299;
                elseif type(v295) ~= "string" then
                    return error("invalid sub tab name");
                else
                    local v303 = nil;
                    local v304 = v295:lower();
                    for v305, v306 in pairs(v299) do
                        if v305:lower() == v304 then
                            v303 = v306;
                            break;
                        end;
                    end;
                    if not v303 then
                        return v299;
                    elseif not v296 then
                        return v299, v303;
                    elseif type(v296) ~= "string" then
                        return error("invalid group name");
                    else
                        local v307 = nil;
                        local v308 = v296:lower();
                        for v309, v310 in pairs(v303.groups) do
                            if v309:lower() == v308 then
                                v307 = v310;
                                break;
                            end;
                        end;
                        if not v307 then
                            return v299, v303;
                        elseif not v297 then
                            return v299, v303, v307;
                        elseif type(v297) ~= "string" then
                            return error("invalid item name");
                        else
                            local v311 = nil;
                            local v312 = v297:lower();
                            for v313, v314 in pairs(v307.items) do
                                if v313:lower() == v312 then
                                    v311 = v314;
                                    break;
                                end;
                            end;
                            if not v311 then
                                return v299, v303, v307;
                            elseif not v298 then
                                return v299, v303, v307, v311;
                            elseif type(v298) ~= "string" then
                                return error("invalid sub item name");
                            elseif not v311.sub_items then
                                return v299, v303, v307, v311;
                            else
                                local v315 = nil;
                                local v316 = v298:lower();
                                for v317, v318 in pairs(v311.sub_items) do
                                    if v317:lower() == v316 then
                                        v315 = v318;
                                        break;
                                    end;
                                end;
                                if not v315 then
                                    return v299, v303, v307, v311;
                                else
                                    return v299, v303, v307, v311, v315;
                                end;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        local v319 = {};
        v289.tab = function(v320)
            -- upvalues: v289 (ref), v319 (ref)
            if v289.find(v320) then
                return error("tab already exists");
            else
                rawset(v289, v320, {});
                v319[#v319 + 1] = v320;
                return;
            end;
        end;
        local v321 = 0;
        v289.sub_tab = function(v322, v323, v324)
            -- upvalues: v289 (ref), v321 (ref)
            local v325, v326 = v289.find(v322, v323);
            if not v325 then
                return error("tab not found");
            elseif v326 then
                return error("sub tab already exists");
            else
                v321 = v321 + 1;
                if v324 == true then
                    v325[v323] = {
                        groups = {}
                    };
                    return;
                else
                    local v327 = ui.create(v323, "Chimera" .. "##" .. v321);
                    if v322 == "General" then
                        v325[v323] = {
                            tab_selection_ref = v327:combo("Tab Selection" .. "##" .. v321, {
                                [1] = "Loading..."
                            }), 
                            discord_server_ref = v327:button("Discord Server", function()
                                panorama.SteamOverlayAPI.OpenExternalBrowserURL("https://discord.gg/g5K7X6nEyZ");
                            end), 
                            discord_ref = v327:button("Request Verification Code", function()
                                -- upvalues: v289 (ref)
                                network.post("http://185.174.136.52:3000/api/v1/verification", {
                                    username = common.get_username()
                                }, {
                                    ["Content-Type"] = "application/json", 
                                    Secret = "hDtuqNiYaKGlFsLhA1ihTySKRnsdloul"
                                }, function(v328)
                                    -- upvalues: v289 (ref)
                                    if type(v328) ~= "string" then
                                        return v289.log("\aFF4040FFstring expected, got " .. type(v328));
                                    else
                                        local l_status_1, l_result_1 = pcall(json.parse, v328);
                                        if not l_status_1 then
                                            return v289.log("\aFF4040FF" .. l_result_1);
                                        elseif l_result_1.error then
                                            return v289.log("\aFF4040FF" .. l_result_1.message);
                                        elseif not l_result_1.Code or type(l_result_1.Code) ~= "string" then
                                            return v289.log("\aFF4040FFunknown error");
                                        else
                                            return v289.log("Your code is \a99FF99FF" .. l_result_1.Code);
                                        end;
                                    end;
                                end);
                            end), 
                            groups = {}
                        };
                    else
                        v325[v323] = {
                            tab_selection_ref = v327:combo("Tab Selection" .. "##" .. v321, {
                                [1] = "Loading..."
                            }), 
                            groups = {}
                        };
                    end;
                    return;
                end;
            end;
        end;
        local v331 = 0;
        v289.group = function(v332, v333, v334, v335)
            -- upvalues: v289 (ref), v331 (ref)
            local v336, v337, v338 = v289.find(v332, v333, v334);
            if not v336 then
                return error("tab not found");
            elseif not v337 then
                return error("sub tab not found");
            elseif v338 then
                return error("group already exists");
            else
                v331 = v331 + 1;
                v337.groups[v334] = {
                    ref = ui.create(v333, v334 .. "##" .. v331, v335), 
                    items = {}
                };
                return;
            end;
        end;
        local _ = ui.create("dummy group");
        local v340 = 0;
        local v341 = {
            combo = true, 
            label = true, 
            list = true, 
            selectable = true, 
            slider = true, 
            switch = true, 
            input = true, 
            button = true
        };
        for v342, _ in pairs(v341) do
            do
                local l_v342_0 = v342;
                v289[l_v342_0] = function(v345, v346, v347, v348, v349, ...)
                    -- upvalues: v289 (ref), l_v342_0 (ref), v340 (ref)
                    local v350, v351, v352, v353 = v289.find(v345, v346, v347, v348);
                    if not v350 then
                        return error("tab not found");
                    elseif not v351 then
                        return error("sub tab not found");
                    elseif not v352 then
                        return error("group not found");
                    elseif v353 then
                        return error(string.format("%s already exists", l_v342_0));
                    else
                        v340 = v340 + 1;
                        local l_status_2, l_result_2 = pcall(v352.ref[l_v342_0], v352.ref, v348, ...);
                        if not l_status_2 then
                            return error(l_result_2);
                        else
                            v352.items[v348] = {
                                ref = l_result_2, 
                                callback = type(v349) == "function" and v349 or function()
                                    return true;
                                end
                            };
                            return l_result_2;
                        end;
                    end;
                end;
            end;
        end;
        local _ = 0;
        for v357, _ in pairs(v341) do
            do
                local l_v357_0 = v357;
                v289["sub_" .. l_v357_0] = function(v360, v361, v362, v363, v364, v365, ...)
                    -- upvalues: v289 (ref), l_v357_0 (ref)
                    local v366, v367, v368, v369, v370 = v289.find(v360, v361, v362, v363, v364);
                    if not v366 then
                        return error("tab not found");
                    elseif not v367 then
                        return error("sub tab not found");
                    elseif not v368 then
                        return error("group not found");
                    elseif not v369 then
                        return error("item not found");
                    elseif v370 then
                        return error(string.format("sub_%salready exists", l_v357_0));
                    elseif v369.color_picker_ref then
                        return error("this item has a color picker");
                    else
                        if not v369.sub_items then
                            v369.group_ref = v369.ref:create();
                            v369.sub_items = {};
                        end;
                        local l_status_3, l_result_3 = pcall(v369.group_ref[l_v357_0], v369.group_ref, v364, ...);
                        if not l_status_3 then
                            return error(l_result_3);
                        else
                            v369.sub_items[v364] = {
                                ref = l_result_3, 
                                callback = type(v365) == "function" and v365 or function()
                                    return true;
                                end
                            };
                            return l_result_3;
                        end;
                    end;
                end;
            end;
        end;
        v289.sub_color_picker = function(v373, v374, v375, v376, v377, v378, ...)
            -- upvalues: v289 (ref)
            local v379, v380, v381, v382, _ = v289.find(v373, v374, v375, v376, v377);
            if not v379 then
                return error("tab not found");
            elseif not v380 then
                return error("sub tab not found");
            elseif not v381 then
                return error("group not found");
            elseif not v382 then
                return error("item not found");
            elseif v382.sub_items then
                if not v377 then
                    return error("fuck you");
                else
                    local l_status_4, l_result_4 = pcall(v382.group_ref.color_picker, v382.group_ref, v377, ...);
                    if not l_status_4 then
                        return error(l_result_4);
                    else
                        v382.sub_items[v377] = {
                            ref = l_result_4, 
                            callback = type(v378) == "function" and v378 or function()
                                return true;
                            end
                        };
                        return l_result_4;
                    end;
                end;
            else
                local v386 = v382.ref:color_picker(...);
                v382.color_picker_ref = v386;
                return v386;
            end;
        end;
        v289.sub_sub_color_picker = function(v387, v388, v389, v390, v391, _, ...)
            -- upvalues: v289 (ref)
            local v393, v394, v395, v396, v397 = v289.find(v387, v388, v389, v390, v391);
            if not v393 then
                return error("tab not found");
            elseif not v394 then
                return error("sub tab not found");
            elseif not v395 then
                return error("group not found");
            elseif not v396 then
                return error("item not found");
            elseif v397.color_picker_ref then
                return error("this item already has a color picker");
            else
                v397.color_picker_ref = v397.ref:color_picker(...);
                return v397.color_picker_ref;
            end;
        end;
        v289.update = function()
            -- upvalues: v289 (ref)
            if not v289.selected_tab_name then
                return error("no selected tab");
            else
                for v398, v399 in pairs(v289) do
                    for _, v401 in pairs(v399) do
                        if v401.tab_selection_ref then
                            v401.tab_selection_ref:visibility(v289.selected_tab_name == v398);
                            if v401.discord_ref then
                                v401.discord_ref:visibility(v289.selected_tab_name == v398);
                                v401.discord_server_ref:visibility(v289.selected_tab_name == v398);
                            end;
                        end;
                        for _, v403 in pairs(v401.groups) do
                            for _, v405 in pairs(v403.items) do
                                local v406 = v289.selected_tab_name == v398 and v405.callback();
                                v405.ref:visibility(v406);
                                if v405.sub_items then
                                    for _, v408 in pairs(v405.sub_items) do
                                        v408.ref:visibility(v408.callback());
                                    end;
                                end;
                            end;
                        end;
                    end;
                end;
                return;
            end;
        end;
        v289.init = function()
            -- upvalues: v319 (ref), v289 (ref)
            if #v319 == 0 then
                return error("no tabs");
            else
                v289.selected_tab_name = v319[1];
                for _, v410 in pairs(v289) do
                    for _, v412 in pairs(v410) do
                        do
                            local l_v412_0 = v412;
                            if l_v412_0.tab_selection_ref then
                                l_v412_0.tab_selection_ref:update(v319);
                                l_v412_0.tab_selection_ref:set_callback(function()
                                    -- upvalues: v289 (ref), l_v412_0 (ref)
                                    v289.selected_tab_name = l_v412_0.tab_selection_ref:get();
                                    for _, v415 in pairs(v289) do
                                        for _, v417 in pairs(v415) do
                                            if v417.tab_selection_ref and v417.tab_selection_ref:get() ~= v289.selected_tab_name then
                                                v417.tab_selection_ref:set(v289.selected_tab_name);
                                            end;
                                        end;
                                    end;
                                    v289.update();
                                end, true);
                            end;
                            for _, v419 in pairs(l_v412_0.groups) do
                                for _, v421 in pairs(v419.items) do
                                    v421.ref:set_callback(v289.update);
                                    if v421.sub_items then
                                        for _, v423 in pairs(v421.sub_items) do
                                            v423.ref:set_callback(v289.update);
                                        end;
                                    end;
                                end;
                            end;
                        end;
                    end;
                end;
                v289.update();
                return;
            end;
        end;
        v289.import = function(v424)
            -- upvalues: v289 (ref)
            for v425, v426 in pairs(v424) do
                local v427 = v289[v425];
                if not v427 then
                    v289.log(string.format("Outdated config, the \"%s\" tab was not found", v425));
                else
                    for v428, v429 in pairs(v426) do
                        local v430 = v427[v428];
                        if not v430 then
                            v289.log(string.format("Outdated config, the \"%s\" sub-tab was not found", v428));
                        else
                            for v431, v432 in pairs(v429) do
                                local v433 = v430.groups[v431];
                                if not v433 then
                                    v289.log(string.format("Outdated config, the \"%s\" group was not found", v431));
                                else
                                    for v434, v435 in pairs(v432) do
                                        local v436 = v433.items[v434];
                                        if not v436 then
                                            v289.log(string.format("Outdated config, the \"%s\" item was not found", v434));
                                        else
                                            local v437 = v436.ref:type();
                                            if v437 == "color_picker" then
                                                v436.ref:set(color(v435.value));
                                            elseif v437 == "selectable" then
                                                v436.ref:set(v435.value or {});
                                            else
                                                v436.ref:set(v435.value);
                                            end;
                                            if v435.color and v436.color_picker_ref and type(v435.color) == "string" then
                                                v436.color_picker_ref:set(color(v435.color));
                                            end;
                                            if v435.sub_items then
                                                for v438, v439 in pairs(v435.sub_items) do
                                                    local v440 = v436.sub_items[v438];
                                                    if not v440 then
                                                        v289.log(string.format("Outdated config, the \"%s\" sub-item was not found", v438));
                                                    else
                                                        local v441 = v440.ref:type();
                                                        if v441 == "color_picker" then
                                                            v440.ref:set(color(v439.value));
                                                        elseif v441 ~= "" then
                                                            if v441 == "selectable" then
                                                                v440.ref:set(v439.value or {});
                                                            else
                                                                v440.ref:set(v439.value);
                                                            end;
                                                        else
                                                            goto label0;
                                                        end;
                                                        if v439.color and v440.color_picker_ref then
                                                            v440.color_picker_ref:set(color(v439.color));
                                                        end;
                                                    end;
                                                    ::label0::;
                                                end;
                                            end;
                                        end;
                                    end;
                                end;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        v289.export = function()
            -- upvalues: v289 (ref)
            local v442 = {};
            for v443, v444 in pairs(v289) do
                for v445, v446 in pairs(v444) do
                    if (v443 ~= "General" or v445 ~= "Helper") and (v443 ~= "Config" or v445 ~= "Config") then
                        for v447, v448 in pairs(v446.groups) do
                            for v449, v450 in pairs(v448.items) do
                                if not v442[v443] then
                                    v442[v443] = {};
                                end;
                                local v451 = v442[v443];
                                if not v451[v445] then
                                    v451[v445] = {};
                                end;
                                local v452 = v451[v445];
                                if not v452[v447] then
                                    v452[v447] = {};
                                end;
                                local v453 = v452[v447];
                                local v454 = v450.ref:type();
                                if v454 ~= "button" then
                                    if not v453[v449] then
                                        v453[v449] = {};
                                    end;
                                    local v455 = v453[v449];
                                    if v454 == "color_picker" then
                                        local v456 = v450.ref:get();
                                        if type(v456) == "userdata" then
                                            v455.value = v456:to_hex();
                                        end;
                                    else
                                        v455.value = v450.ref:get();
                                    end;
                                    if v450.color_picker_ref then
                                        local v457 = v450.color_picker_ref:get();
                                        if type(v457) == "userdata" then
                                            v455.color = v457:to_hex();
                                        end;
                                    end;
                                    if v450.sub_items then
                                        v455.sub_items = {};
                                        for v458, v459 in pairs(v450.sub_items) do
                                            local v460 = v459.ref:type();
                                            if v460 ~= "button" then
                                                if not v455.sub_items[v458] then
                                                    v455.sub_items[v458] = {};
                                                end;
                                                local v461 = v455.sub_items[v458];
                                                if v460 == "color_picker" then
                                                    v461.value = v459.ref:get():to_hex();
                                                else
                                                    v461.value = v459.ref:get();
                                                end;
                                                if v459.color_picker_ref then
                                                    v461.color = v459.color_picker_ref:get():to_hex();
                                                end;
                                            end;
                                        end;
                                    end;
                                end;
                            end;
                        end;
                    end;
                end;
            end;
            return v442;
        end;
        local v462 = {
            [1] = "Desert Eagle", 
            [2] = "Pistol", 
            [3] = "Pistol", 
            [4] = "Pistol", 
            [5] = nil, 
            [6] = nil, 
            [7] = "Rifle", 
            [8] = "Rifle", 
            [9] = "AWP", 
            [10] = "Rifle", 
            [11] = "Autosniper", 
            [12] = nil, 
            [13] = "Rifle", 
            [14] = "Machine Gun", 
            [15] = nil, 
            [16] = "Rifle", 
            [17] = "SMG", 
            [18] = nil, 
            [19] = "SMG", 
            [20] = nil, 
            [21] = nil, 
            [22] = nil, 
            [23] = "SMG", 
            [24] = "SMG", 
            [25] = "Shotgun", 
            [26] = "SMG", 
            [27] = "Shotgun", 
            [28] = "Machine Gun", 
            [29] = "Shotgun", 
            [30] = "Pistol", 
            [31] = "Zeus x27", 
            [32] = "Pistol", 
            [33] = "SMG", 
            [34] = "SMG", 
            [35] = "Shotgun", 
            [36] = "Pistol", 
            [37] = nil, 
            [38] = "Autosniper", 
            [39] = "Rifle", 
            [40] = "SSG 08", 
            [41] = nil, 
            [42] = nil, 
            [43] = "Nades", 
            [44] = "Nades", 
            [45] = "Nades", 
            [46] = "Nades", 
            [47] = "Nades", 
            [48] = "Nades", 
            [49] = nil, 
            [50] = nil, 
            [51] = nil, 
            [52] = nil, 
            [53] = nil, 
            [54] = nil, 
            [55] = nil, 
            [56] = nil, 
            [57] = nil, 
            [58] = nil, 
            [59] = nil, 
            [60] = "Rifle", 
            [61] = "Pistol", 
            [62] = nil, 
            [63] = "Pistol", 
            [64] = "R8 Revolver"
        };
        v289.weapon_types = {
            [1] = "Autosniper", 
            [2] = "R8 Revolver", 
            [3] = "SSG 08", 
            [4] = "AWP", 
            [5] = "Zeus x27", 
            [6] = "Pistol", 
            [7] = "Desert Eagle", 
            [8] = "SMG", 
            [9] = "Shotgun", 
            [10] = "Rifle", 
            [11] = "Machine Gun", 
            [12] = "Nades", 
            [13] = "Other"
        };
        v289.get_weapon_type = function(v463)
            -- upvalues: v462 (ref)
            return v462[v463] or "Other";
        end;
    end)();
    local v464 = nil;
    (function()
        -- upvalues: v289 (ref), v464 (ref), l_events_0 (ref), v280 (ref)
        v289.tab("General");
        v289.sub_tab("General", "Main");
        v289.group("General", "Main", "General");
        v289.group("General", "Main", "Dormant Aimbot");
        v464 = {
            enabled_ref = v289.switch("general", "main", "general", "Enable General")
        };
        local v465 = ui.find("Aimbot", "Ragebot", "Selection", "Hit Chance");
        local v466 = ui.find("Aimbot", "Ragebot", "Accuracy", "Auto Scope");
        local v467 = nil;
        local v468 = nil;
        local v469 = true;
        do
            local l_v468_0, l_v469_0 = v468, v469;
            utils.execute_after(1, function()
                -- upvalues: l_v469_0 (ref)
                l_v469_0 = false;
            end);
            v467 = v289.switch("general", "main", "general", "Noscope Mode", function()
                -- upvalues: v464 (ref)
                return v464.enabled_ref:get();
            end):set_callback(function(_)
                -- upvalues: l_v469_0 (ref), l_v468_0 (ref)
                if not l_v469_0 then
                    l_v468_0 = globals.realtime;
                end;
            end):tooltip("\194\183 Overrides your ragebot hit chance along with auto scope while an enemy is within the specified distance.");
            local v473 = 0;
            local _ = v289.sub_slider("general", "main", "general", "Noscope Mode", "Hit Chance", nil, 0, 100, 15, 1, function(v474)
                return v474;
            end):set_callback(function(v475)
                -- upvalues: v473 (ref)
                v473 = v475:get();
            end, true);
            local v477 = 0;
            local v480 = v289.sub_slider("general", "main", "general", "Noscope Mode", "Distance", nil, 40, 201, 3, 1, function(v478)
                if v478 == 201 then
                    return "inf";
                else
                    return string.format("%.1fm", v478 * 0.1);
                end;
            end):set_callback(function(v479)
                -- upvalues: l_v469_0 (ref), l_v468_0 (ref), v477 (ref)
                if not l_v469_0 then
                    l_v468_0 = globals.realtime;
                end;
                v477 = v479:get();
            end):tooltip("\194\183 \"Auto Scope\" won't be overridden if the distance is set to infinity.");
            local v481 = false;
            v477 = v480:get();
            local v482 = v289.sub_selectable("general", "main", "general", "Noscope Mode", "Weapons", nil, {
                [1] = "Autosniper", 
                [2] = "SSG 08", 
                [3] = "AWP"
            });
            local l_huge_0 = math.huge;
            local v484 = nil;
            local v485 = nil;
            local function v490(v486)
                -- upvalues: v485 (ref), l_huge_0 (ref), v484 (ref)
                if not v486:is_alive() then
                    return;
                else
                    local v487 = v486:get_origin();
                    local v488 = v485:dist2dsqr(v487);
                    if v488 < l_huge_0 then
                        local l_v488_0 = v488;
                        v484 = v486;
                        l_huge_0 = l_v488_0;
                    end;
                    return;
                end;
            end;
            v464.noscope_hit_chance_on_createmove = function(_)
                -- upvalues: v289 (ref), v482 (ref), v485 (ref), l_huge_0 (ref), v484 (ref), v490 (ref), v481 (ref), v477 (ref), v466 (ref), v465 (ref), v473 (ref)
                local v492 = entity.get_local_player();
                if not v492 then
                    return;
                else
                    local v493 = v492:get_player_weapon();
                    if not v493 then
                        return;
                    elseif v492.m_bIsScoped then
                        return;
                    else
                        local v494 = v289.get_weapon_type(v493:get_weapon_index());
                        if not v482:get(v494) then
                            return;
                        else
                            v485 = v492:get_origin();
                            local l_huge_1 = math.huge;
                            v484 = nil;
                            l_huge_0 = l_huge_1;
                            entity.get_players(true, false, v490);
                            if not v484 then
                                return;
                            else
                                v481 = v477 == 201;
                                if not v481 then
                                    v466:override(true);
                                end;
                                l_huge_1 = v477 * 0.1 * 39.37;
                                if l_huge_0 <= l_huge_1 * l_huge_1 then
                                    v465:override(v473);
                                    if not v481 then
                                        v466:override(false);
                                    end;
                                end;
                                return;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        v468 = ui.find("Miscellaneous", "Main", "Movement", "Air Strafe");
        v469 = nil;
        v469 = v289.switch("general", "main", "general", "In Air Mode", function()
            -- upvalues: v464 (ref)
            return v464.enabled_ref:get();
        end):tooltip("\194\183 Overrides your ragebot hit chance while in the air.");
        local v496 = 0;
        do
            local l_v496_0 = v496;
            local _ = v289.sub_slider("general", "main", "general", "In Air Mode", "Hit Chance", nil, 0, 100, 15, 1, function(v498)
                return v498;
            end):set_callback(function(v499)
                -- upvalues: l_v496_0 (ref)
                l_v496_0 = v499:get();
            end, true);
            local v501 = {};
            for _, v503 in pairs(v289.weapon_types) do
                if v503 ~= "Nades" and v503 ~= "Other" and v503 ~= "Zeus x27" then
                    v501[#v501 + 1] = v503;
                end;
            end;
            local v504 = v289.sub_selectable("general", "main", "general", "In Air Mode", "Weapons", nil, v501);
            local v505 = v289.sub_switch("general", "main", "general", "In Air Mode", "Disable Air Strafe");
            local v506 = 1;
            v464.in_air_hit_chance_on_createmove = function(v507)
                -- upvalues: v505 (ref), v506 (ref), v289 (ref), v504 (ref), v465 (ref), l_v496_0 (ref)
                local v508 = entity.get_local_player();
                if not v508 then
                    return;
                else
                    local v509 = v508:get_player_weapon();
                    if not v509 then
                        return;
                    else
                        if v508.m_MoveType ~= 9 and v505:get() and (v507.in_jump == true or bit.band(v508.m_fFlags, v506) ~= v506) and v508.m_vecVelocity:length2d() <= 5 then
                            v507.in_speed = true;
                        end;
                        if bit.band(v508.m_fFlags, v506) == v506 then
                            return;
                        else
                            local v510 = v289.get_weapon_type(v509:get_weapon_index());
                            if not v504:get(v510) then
                                return;
                            else
                                v465:override(l_v496_0);
                                return;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        v496 = nil;
        local v511 = 0;
        do
            local l_v511_0 = v511;
            l_events_0.net_update_end:set(function()
                -- upvalues: l_v511_0 (ref)
                local v513 = entity.get_local_player();
                if not v513 then
                    return;
                else
                    if bit.band(v513.m_fFlags, 1) == 1 then
                        l_v511_0 = 0;
                    else
                        l_v511_0 = l_v511_0 + globals.tickinterval;
                    end;
                    return;
                end;
            end);
            local v514 = ui.find("Aimbot", "Anti Aim", "Misc", "Slow Walk");
            v496 = v289.selectable("general", "main", "general", "\aB6B665FFAnimation Fix Breaker", function()
                -- upvalues: v464 (ref)
                return v464.enabled_ref:get();
            end, {
                [1] = "Landing Pitch", 
                [2] = "Force Falling", 
                [3] = "Move Lean", 
                [4] = "Leg Breaker", 
                [5] = "Sliding on Slow Walk"
            }):tooltip("\194\183 Forces specific animations on the local player. Client-side only.\n\n\194\183 \"Landing Pitch\" makes the pitch angle appear to be zero degrees during playback of the landing animation.\n\n\194\183 \"Force Falling\" forces the playback of the animation of falling.\n\n\194\183 \"Move Lean\" enables the playback of the moving lean animation from the 12th animation layer.\n\n\194\183 \"Leg Breaker\" isn't fully client-side as it overrides \"Leg Movement\" to \"Sliding\". Looks cool, I guess.\n\n\aB6B665FF\194\183 Please note that this feature can cause inaccuracies of certain cheat features that rely on hit scanning the local player.");
            local v515 = nil;
            v289.slider("general", "main", "general", "Move Lean Force", function()
                -- upvalues: v496 (ref), v464 (ref)
                return v496:get("Move Lean") and v464.enabled_ref:get();
            end, 1, 100, 1, 1, "%"):set_callback(function(v516)
                -- upvalues: v515 (ref)
                v515 = v516:get();
            end, true);
            local v517 = nil;
            v289.switch("general", "main", "general", "On Ground Force", function()
                -- upvalues: v496 (ref), v464 (ref)
                return v496:get("Move Lean") and v464.enabled_ref:get();
            end):set_callback(function(v518)
                -- upvalues: v517 (ref)
                v517 = v518:get();
            end, true);
            local v519 = v289.switch("general", "main", "general", "Moonwalk Mode", function()
                -- upvalues: v464 (ref), v496 (ref)
                return v464.enabled_ref:get() and v496:get("Leg Breaker");
            end);
            local v520 = v289.switch("general", "main", "general", "Moonwalk In Air Mode", function()
                -- upvalues: v464 (ref), v496 (ref)
                return v464.enabled_ref:get() and v496:get("Leg Breaker");
            end);
            local v521 = v289.switch("general", "main", "general", "Legacy Falling Mode", function()
                -- upvalues: v464 (ref), v496 (ref)
                return v464.enabled_ref:get() and v496:get("Force Falling");
            end):tooltip("Attempts to imitate the way it would look like before the Danger Zone update. Should match the fake chams, I guess.");
            local v522 = ui.find("miscellaneous", "main", "movement", "bunny hop");
            local v523 = false;
            v464.gay_on_createmove = function(v524)
                -- upvalues: v523 (ref), v496 (ref)
                v523 = v524.in_jump;
                if not entity.get_local_player() then
                    return;
                else
                    if v496:get("Move Lean") then
                        v524.animate_move_lean = true;
                    end;
                    return;
                end;
            end;
            local v525 = ui.find("Aimbot", "Anti Aim", "Misc", "Leg Movement");
            local v526 = ffi.typeof("\t\t\tstruct {\n\t\t\t\tchar\t\tpad0[0x18];\n\t\t\t\tuint32_t\tsequence;\n\t\t\t\tfloat\t\tprev_cycle;\n\t\t\t\tfloat\t\tweight;\n\t\t\t\tfloat\t\tweight_delta_rate;\n\t\t\t\tfloat\t\tplayback_rate;\n\t\t\t\tfloat\t\tcycle;\n\t\t\t\tvoid*\t\tentity;\n\t\t\t\tchar\t\tpad1[0x4];\n\t\t\t}\n\t\t");
            l_events_0.post_update_client_side_animation(function(v527)
                -- upvalues: v464 (ref), v496 (ref), v522 (ref), v523 (ref), v521 (ref), l_v511_0 (ref), v525 (ref), v519 (ref), v520 (ref), v526 (ref), v514 (ref), v517 (ref), v515 (ref)
                local v528 = entity.get_local_player();
                if not v528 then
                    return;
                elseif v528 ~= v527 then
                    return;
                else
                    local v529 = v527[0];
                    local v530 = v528:get_anim_state();
                    if not v530 then
                        return;
                    elseif not v464.enabled_ref:get() then
                        return;
                    else
                        if v496:get("Landing Pitch") and v530.landing and (not v522:get() or not v523) then
                            v528.m_flPoseParameter[12] = 0.5;
                        end;
                        if v496:get("Force Falling") then
                            v528.m_flPoseParameter[6] = v521:get() and math.map(math.clamp(l_v511_0, 0.75, 1.5), 0.7, 1.5, 0, 1) or 1;
                        end;
                        v525:override();
                        if v496:get("Leg Breaker") then
                            if v519:get() then
                                v525:override("Walking");
                                v528.m_flPoseParameter[7] = 1;
                            else
                                v525:override("Sliding");
                                v528.m_flPoseParameter[0] = 1;
                            end;
                            if v520:get() then
                                local v531 = ffi.cast(ffi.typeof("$ **", v526), ffi.cast("char*", v529) + 10640)[0][6];
                                if bit.band(v528.m_fFlags, 1) ~= 1 and v531.weight == 0 then
                                    v531.weight = 1;
                                end;
                            end;
                        end;
                        local v532 = ffi.cast(ffi.typeof("$ **", v526), ffi.cast("char*", v529) + 10640)[0][12];
                        if v496:get("Sliding on Slow Walk") and (v514:get() or v514:get_override()) then
                            v528.m_flPoseParameter[9] = 0;
                        end;
                        if v496:get("Move Lean") then
                            if bit.band(v528.m_fFlags, 1) == 1 and not v517 then
                                return;
                            else
                                v532.weight = math.max(0, math.min(1, v532.weight * v515));
                            end;
                        end;
                        return;
                    end;
                end;
            end);
        end;
        v511 = ui.find("Aimbot", "Ragebot", "Main", "Peek Assist");
        local v533 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
        local v534 = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding");
        local v535 = ui.find("Aimbot", "Ragebot", "Accuracy", "SSG-08", "Auto Stop");
        local v536 = ui.find("Aimbot", "Ragebot", "Accuracy", "SSG-08", "Auto Stop", "Options");
        local v537 = ui.find("Aimbot", "Ragebot", "Accuracy", "Auto Stop", "Double Tap");
        local v538 = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding", "Disable Yaw Modifiers");
        local v539 = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding", "Body Freestanding");
        local v540 = v289.switch("general", "main", "general", "Ideal Tick", function()
            -- upvalues: v464 (ref)
            return v464.enabled_ref:get();
        end):tooltip("A peek mode that is mainly for scouting people\n\n\aB6B665FF\194\183 Use this on bind");
        v464.ideal_tick_ref = v540;
        local v541 = v289.selectable("general", "main", "general", "Options", function()
            -- upvalues: v464 (ref), v540 (ref)
            return v464.enabled_ref:get() and v540:get();
        end, {
            [1] = "Double Tap", 
            [2] = "Freestanding", 
            [3] = "Jump Scout", 
            [4] = "Auto Peek"
        });
        v464.ideal_tick_on_createmove = function(v542, v543, v544)
            -- upvalues: v280 (ref), v541 (ref), v533 (ref), v511 (ref), v534 (ref), v538 (ref), v539 (ref), v289 (ref), v535 (ref), v536 (ref)
            if v542.in_use then
                return;
            elseif not v544 then
                return;
            elseif not v280 then
                return;
            elseif not v280.last_state_id then
                return;
            else
                if v541:get("Double Tap") then
                    v533:override(true);
                end;
                if v541:get("Auto Peek") then
                    v511:override(true);
                end;
                if v541:get("Freestanding") and rage.antiaim:get_target(true) and math.abs(math.normalize_yaw(rage.antiaim:get_target() - rage.antiaim:get_target(true))) > 5 and bit.band(v543.m_fFlags, 1) == 1 then
                    v534:override(true);
                    v538:override(true);
                    v539:override(true);
                    rage.antiaim:inverter(false);
                end;
                if v289.get_weapon_type(v544:get_weapon_index()) == "SSG 08" and bit.band(v543.m_fFlags, 1) ~= 1 and v541:get("Jump Scout") then
                    v535:override(true);
                    v536:override({
                        [1] = "Early", 
                        [2] = "In Air"
                    });
                end;
                return;
            end;
        end;
        local v545 = nil;
        v289.switch("general", "main", "general", "Magic Key", function()
            -- upvalues: v464 (ref)
            return v464.enabled_ref:get();
        end):set_callback(function(v546)
            -- upvalues: v545 (ref)
            v545 = v546:get();
        end, true):tooltip("HS only mode, basically");
        local v547 = ui.find("Aimbot", "Ragebot", "Selection", "Hitboxes");
        local v548 = ui.find("Aimbot", "Ragebot", "Selection", "Multipoint");
        local _ = ui.find("Aimbot", "Ragebot", "Selection", "Multipoint", "Head Scale");
        local v550 = ui.find("Aimbot", "Ragebot", "Safety", "Body Aim");
        local v551 = ui.find("Aimbot", "Ragebot", "Safety", "Safe Points");
        local v552 = ui.find("Aimbot", "Ragebot", "Safety", "Ensure Hitbox Safety");
        do
            local l_v547_0, l_v548_0, l_v550_0, l_v551_0, l_v552_0 = v547, v548, v550, v551, v552;
            v464.magic_key_on_createmove = function(_)
                -- upvalues: l_v547_0 (ref), l_v548_0 (ref), l_v550_0 (ref), l_v551_0 (ref), l_v552_0 (ref), v545 (ref)
                l_v547_0:override();
                l_v548_0:override();
                l_v550_0:override();
                l_v551_0:override();
                l_v552_0:override();
                if v545 then
                    l_v547_0:override({
                        [1] = "Head"
                    });
                    l_v548_0:override({
                        [1] = "Head"
                    });
                    l_v550_0:override("Default");
                    l_v551_0:override("Default");
                    l_v552_0:override({});
                end;
            end;
        end;
        v464.on_createmove = function(v559)
            -- upvalues: v533 (ref), v511 (ref), v535 (ref), v536 (ref), v537 (ref), v540 (ref), v464 (ref), v465 (ref), v466 (ref), v467 (ref), v469 (ref)
            v533:override();
            v511:override();
            v535:override();
            v536:override();
            v537:override();
            local v560 = entity.get_local_player();
            local v561 = v560:get_player_weapon();
            if v540:get() then
                v464.ideal_tick_on_createmove(v559, v560, v561);
            end;
            v465:override();
            v466:override();
            if v467:get() then
                v464.noscope_hit_chance_on_createmove(v559);
            end;
            if v469:get() then
                v464.in_air_hit_chance_on_createmove(v559);
            end;
            v464.gay_on_createmove(v559);
            v464.magic_key_on_createmove(v559);
        end;
        v464.on_render = function()

        end;
        v464.on_player_hurt = function(_)

        end;
        v464.on_player_spawn = function(_)

        end;
        v464.on_createmove_run = function(_)

        end;
    end)();
    (function()
        -- upvalues: v280 (ref), v289 (ref), l_events_0 (ref), v52 (ref), v8 (ref)
        v280 = {};
        local _ = nil;
        v289.tab("Anti Aim");
        v289.sub_tab("Anti Aim", "Main");
        v289.group("Anti Aim", "Main", "Anti Aim Settings");
        local v566 = {
            pitch_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Pitch"), 
            yaw_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw"), 
            yaw_base_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw", "Base"), 
            yaw_offset_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw", "Offset"), 
            avoid_backstab_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw", "Avoid Backstab"), 
            yaw_modifier_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw Modifier"), 
            modifier_degree_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw Modifier", "Offset"), 
            body_yaw_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Body Yaw"), 
            inverter_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Body Yaw", "Inverter"), 
            left_limit_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Body Yaw", "Left Limit"), 
            right_limit_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Body Yaw", "Right Limit"), 
            body_yaw_options_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Body Yaw", "Options"), 
            body_yaw_freestanding_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Body Yaw", "Freestanding"), 
            freestanding_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding"), 
            disable_yaw_modifiers_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding", "Disable Yaw Modifiers"), 
            body_freestanding_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding", "Body Freestanding"), 
            extended_angles_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Extended Angles"), 
            extended_pitch_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Extended Angles", "Extended Pitch"), 
            extended_roll_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Extended Angles", "Extended Roll"), 
            enable_fake_lag_ref = ui.find("Aimbot", "Anti Aim", "Fake Lag", "Enabled"), 
            dt_fakelag_ref = ui.find("Aimbot", "Ragebot", "Main", "Double Tap", "Fake Lag Limit"), 
            hidden_aa_ref = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw", "Hidden")
        };
        local v567 = 0;
        l_events_0.createmove_run:set(function()
            -- upvalues: v567 (ref)
            v567 = v567 + 1;
        end);
        local _ = 0;
        local _ = 0;
        local v570 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
        local v571 = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
        v280.reset = function()
            -- upvalues: v566 (ref)
            for _, v573 in pairs(v566) do
                v573:override();
            end;
        end;
        local v574 = ui.find("Aimbot", "Anti Aim", "Misc", "Fake Duck");
        local v575 = ui.find("Miscellaneous", "Main", "Movement", "Bunny Hop");
        local v576 = ui.find("Aimbot", "Anti Aim", "Misc", "Slow Walk");
        local v577 = {};
        v280.get_state_id = function(v578, v579, v580)
            -- upvalues: v576 (ref), v574 (ref), v575 (ref), v280 (ref), v570 (ref), v571 (ref), v577 (ref)
            local l_m_vecVelocity_0 = v579.m_vecVelocity;
            local l_m_flDuckAmount_0 = v579.m_flDuckAmount;
            local l_m_fFlags_0 = v579.m_fFlags;
            local v584 = 2;
            if l_m_vecVelocity_0:length2d() > 2 then
                v584 = 3;
                if v576:get() then
                    v584 = 4;
                end;
            end;
            if l_m_flDuckAmount_0 > 0.99 or v574:get() then
                v584 = 5;
            end;
            if v578.in_jump and v575:get() or bit.band(l_m_fFlags_0, 1) ~= 1 then
                v584 = v584 == 5 and 7 or 6;
            end;
            v280.last_state_id = v584;
            if rage.exploit:get() < 1 and (v570:get_override() or v570:get()) == false and (v571:get_override() or v571:get()) == false and v577[9]:get() then
                v584 = 9;
            end;
            if v578.in_use and v580:get_classname() ~= "CC4" then
                v584 = 8;
                v280.last_state_id = v584;
            end;
            return v584;
        end;
        v280.get_state_id2 = function(v585, v586, v587)
            -- upvalues: v576 (ref), v574 (ref), v575 (ref), v280 (ref)
            local l_m_vecVelocity_1 = v586.m_vecVelocity;
            local l_m_flDuckAmount_1 = v586.m_flDuckAmount;
            local l_m_fFlags_1 = v586.m_fFlags;
            local v591 = 2;
            if l_m_vecVelocity_1:length2d() > 2 then
                v591 = 3;
                if v576:get() then
                    v591 = 4;
                end;
            end;
            if l_m_flDuckAmount_1 > 0.99 or v574:get() then
                v591 = 5;
            end;
            if v585.in_jump and v575:get() or bit.band(l_m_fFlags_1, 1) ~= 1 then
                v591 = v591 == 5 and 7 or 6;
            end;
            v280.last_state_id = v591;
            if v585.in_use and v587:get_classname() ~= "CC4" then
                v591 = 8;
                v280.last_state_id = v591;
            end;
            return v591;
        end;
        local v592 = {
            [1] = "Default", 
            [2] = "Standing", 
            [3] = "Moving", 
            [4] = "Slow Walking", 
            [5] = "Crouching", 
            [6] = "In Air", 
            [7] = "In Air & Crouching", 
            [8] = "In Use", 
            [9] = "No Exploits"
        };
        v289.group("anti aim", "Main", "Other");
        local v593 = v289.combo("anti aim", "main", "anti aim settings", "Mode", nil, {
            [1] = "Disabled", 
            [2] = "Classic Jitter", 
            [3] = "Delayed Jitter", 
            [4] = "Conditional"
        });
        local _ = ui.get_alpha;
        v289.group("anti aim", "Main", "Misc");
        v289.label("anti aim", "main", "Misc", "Please note that this preset is already set up.", function()
            -- upvalues: v593 (ref)
            return v593:get() ~= "Disabled" and v593:get() ~= "Conditional";
        end);
        local function v595()
            -- upvalues: v593 (ref)
            return v593:get() == "Conditional";
        end;
        local v596 = v289.combo("anti aim", "main", "anti aim settings", "Current State", v595, v592);
        local v597 = nil;
        v597 = v289.combo("anti aim", "main", "anti aim settings", "Manual Yaw", nil, {
            [1] = "Disabled", 
            [2] = "Left", 
            [3] = "Right", 
            [4] = "Forward"
        });
        local v598 = v289.sub_switch("anti aim", "main", "anti aim settings", "manual yaw", "Disable Yaw Modififers");
        local v599 = v289.sub_switch("anti aim", "main", "anti aim settings", "manual yaw", "Arrows");
        local v600 = nil;
        do
            local l_v598_0, l_v600_0 = v598, v600;
            v289.sub_sub_color_picker("anti aim", "main", "anti aim settings", "manual yaw", "Arrows"):set_callback(function(v603)
                -- upvalues: l_v600_0 (ref)
                l_v600_0 = v603:get();
            end, true);
            local v604 = render.load_font("Verdana", vector(16, 32, 1), "abo");
            local _ = 0;
            local v606 = render.screen_size() * 0.5;
            local v607 = 0;
            local v608 = 0;
            local v609 = true;
            local function v616()
                -- upvalues: v607 (ref), v597 (ref), v606 (ref), l_v600_0 (ref), v608 (ref), v52 (ref), v609 (ref), v604 (ref)
                local v610 = entity.get_local_player();
                if v610 == nil or v610:is_alive() == false then
                    return;
                else
                    local v611 = render.screen_size() * 0.5;
                    v611.y = v611.y - 2;
                    local v612 = nil;
                    local l_v607_0 = v607;
                    local v614 = v597:get();
                    if v614 == "Left" then
                        v612 = v611 + vector(-90, 0);
                        l_v607_0 = 270;
                        v606 = v606 + (v612 - v606) * (globals.exactframetime * 10);
                        v607 = v607 + (l_v607_0 - v607) * (globals.exactframetime * 15);
                    elseif v614 == "Right" then
                        v612 = v611 + vector(90, 0);
                        l_v607_0 = 90;
                        v606 = v606 + (v612 - v606) * (globals.exactframetime * 10);
                        v607 = v607 + (l_v607_0 - v607) * (globals.exactframetime * 15);
                    elseif v614 == "Forward" then
                        l_v607_0 = 180;
                        v612 = v611 + vector(0, -90);
                        v606 = v606 + (v611 + vector(0, -90) - v606) * (globals.exactframetime * 10);
                        v607 = v607 + (l_v607_0 - v607) * (globals.exactframetime * 15);
                    else
                        v612 = v611;
                        v606 = v606 + (v611 - v606) * (globals.exactframetime * 10);
                    end;
                    if math.abs(l_v607_0 - v607) < 1 then
                        v607 = l_v607_0;
                    end;
                    local v615 = l_v600_0:clone();
                    v615.a = v615.a * ((math.max(45, math.min(90, v606:dist2d(v611))) - 45) / 45);
                    v608 = v52.linear(math.abs(globals.realtime % 1 - 0.5) * 2, 0, 1, 1);
                    if v608 == 1 or v608 == 0 then
                        v609 = not v609;
                    end;
                    v615.a = v615.a * v52.cubic_out(v608, 0, 1, 1);
                    if v615.a > 0 then
                        render.push_rotation(v607);
                        render.text(v604, v606, v615, "c", ">");
                        render.pop_rotation();
                    end;
                    return;
                end;
            end;
            v599:set_callback(function(v617)
                -- upvalues: l_events_0 (ref), v616 (ref)
                l_events_0.render(v616, v617:get());
            end, true);
            v280.manual_yaw_base = function(v618, _)
                -- upvalues: v597 (ref), v566 (ref), l_v598_0 (ref), v593 (ref)
                if v618 == 8 then
                    return;
                elseif v597:get() == "Disabled" then
                    return;
                else
                    v566.freestanding_ref:override(false);
                    if l_v598_0:get() then
                        v566.yaw_modifier_ref:override("Disabled");
                        v566.body_yaw_options_ref:override("Avoid Overlap");
                        v566.body_yaw_freestanding_ref:override("Off");
                        if v618 == 5 then
                            v566.body_yaw_options_ref:override("");
                        end;
                        v566.inverter_ref:override(false);
                    end;
                    v566.yaw_ref:override("Backward");
                    v566.yaw_base_ref:override("Local View");
                    if v597:get() == "Left" then
                        v566.yaw_offset_ref:override(-90);
                    end;
                    if v597:get() == "Right" then
                        v566.yaw_offset_ref:override(90);
                    end;
                    if v597:get() == "Forward" then
                        v566.yaw_offset_ref:override(180);
                    end;
                    if v593:get() == "Delayed Jitter" then
                        rage.antiaim:inverter(false);
                    end;
                    return;
                end;
            end;
        end;
        v598 = {};
        for v620, v621 in ipairs(v592) do
            local v622 = v621 .. " Angles";
            v289.group("anti aim", "Main", v622);
            v598[v620] = {};
            local v623 = v598[v620];
            do
                local l_v620_0, l_v621_0 = v620, v621;
                local function v626()
                    -- upvalues: l_v621_0 (ref), v596 (ref), v595 (ref)
                    return l_v621_0 == v596:get() and v595();
                end;
                local _ = {};
                v623.pitch_ref = v289.combo("anti aim", "main", v622, "Pitch", v626, {
                    [1] = "Disabled", 
                    [2] = "Down", 
                    [3] = "Fake Down", 
                    [4] = "Fake Up"
                });
                v623.yaw_ref = v289.combo("anti aim", "main", v622, "Yaw", v626, {
                    [1] = "Disabled", 
                    [2] = "Backward", 
                    [3] = "Static"
                });
                v623.yaw_base_ref = v289.sub_combo("anti aim", "main", v622, "Yaw", "Base", v626, {
                    [1] = "Local View", 
                    [2] = "At Target"
                });
                v623.yaw_offset_left_ref = v289.sub_slider("anti aim", "main", v622, "Yaw", "Offset Left", v626, -180, 180, 0);
                v623.yaw_offset_right_ref = v289.sub_slider("anti aim", "main", v622, "Yaw", "Offset Right", v626, -180, 180, 0);
                v623.yaw_modifier_ref = v289.combo("anti aim", "main", v622, "Yaw Modifier", v626, {
                    [1] = "Disabled", 
                    [2] = "Center", 
                    [3] = "Offset", 
                    [4] = "Random", 
                    [5] = "Spin", 
                    [6] = "3-Way", 
                    [7] = "5-Way"
                });
                do
                    local l_v623_0, l_v626_0 = v623, v626;
                    l_v623_0.way_mode_ref = v289.sub_switch("anti aim", "main", v622, "Yaw Modifier", "Manual Mode", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and (l_v623_0.yaw_modifier_ref:get() == "3-Way Chimera" or l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera");
                    end);
                    l_v623_0.modifier_degree_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Offset", function()
                        -- upvalues: l_v623_0 (ref), l_v626_0 (ref)
                        if l_v623_0.yaw_modifier_ref:get() == "3-Way Chimera" or l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera" then
                            return l_v626_0() and not l_v623_0.way_mode_ref:get();
                        else
                            return l_v626_0();
                        end;
                    end, -180, 180, 0);
                    l_v623_0.jitter_randomize_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Randomize", function()
                        -- upvalues: l_v626_0 (ref)
                        return l_v626_0();
                    end, 0, 180, 0);
                    l_v623_0.offset_1_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Offset #1", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and (not (l_v623_0.yaw_modifier_ref:get() ~= "3-Way Chimera") or l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera") and l_v623_0.way_mode_ref:get();
                    end, -180, 180, 0);
                    l_v623_0.offset_2_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Offset #2", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and (not (l_v623_0.yaw_modifier_ref:get() ~= "3-Way Chimera") or l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera") and l_v623_0.way_mode_ref:get();
                    end, -180, 180, 0);
                    l_v623_0.offset_3_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Offset #3", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and (not (l_v623_0.yaw_modifier_ref:get() ~= "3-Way Chimera") or l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera") and l_v623_0.way_mode_ref:get();
                    end, -180, 180, 0);
                    l_v623_0.offset_4_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Offset #4", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera" and l_v623_0.way_mode_ref:get();
                    end, -180, 180, 0);
                    l_v623_0.offset_5_ref = v289.sub_slider("anti aim", "main", v622, "Yaw Modifier", "Offset #5", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and l_v623_0.yaw_modifier_ref:get() == "5-Way Chimera" and l_v623_0.way_mode_ref:get();
                    end, -180, 180, 0);
                    l_v623_0.body_yaw_ref = v289.switch("anti aim", "main", v622, "Body Yaw", l_v626_0);
                    l_v623_0.inverter_ref = v289.sub_switch("anti aim", "main", v622, "Body Yaw", "Inverter", l_v626_0);
                    l_v623_0.left_limit_ref = v289.sub_slider("anti aim", "main", v622, "Body Yaw", "Left Limit", l_v626_0, 0, 60);
                    l_v623_0.right_limit_ref = v289.sub_slider("anti aim", "main", v622, "Body Yaw", "Right Limit", l_v626_0, 0, 60);
                    l_v623_0.body_yaw_options_ref = v289.sub_selectable("anti aim", "main", v622, "Body Yaw", "Options", l_v626_0, {
                        [1] = "Avoid Overlap", 
                        [2] = "Jitter", 
                        [3] = "Randomize Jitter"
                    });
                    l_v623_0.delay_ref = v289.sub_slider("anti aim", "main", v622, "Body Yaw", "Delay", function()
                        -- upvalues: l_v626_0 (ref), l_v623_0 (ref)
                        return l_v626_0() and l_v623_0.body_yaw_options_ref:get("Jitter");
                    end, 0, 10, 0);
                    l_v623_0.body_yaw_freestanding_ref = v289.sub_combo("anti aim", "main", v622, "Body Yaw", "Freestanding", l_v626_0, {
                        [1] = "Off", 
                        [2] = "Peek Fake", 
                        [3] = "Peek Real"
                    });
                    if l_v621_0 ~= "Default" then
                        v577[l_v620_0] = v289.switch("anti aim", "main", "anti aim settings", "Override " .. l_v621_0, l_v626_0);
                    end;
                    if l_v621_0 == "In Use" then
                        l_v623_0.ignore_bombsite_ref = v289.switch("anti aim", "main", "anti aim settings", "Bombsite Fix", function()
                            -- upvalues: l_v626_0 (ref), v577 (ref), l_v620_0 (ref)
                            return l_v626_0() and v577[l_v620_0]:get();
                        end);
                    end;
                end;
            end;
        end;
        v599 = nil;
        v599 = v289.switch("anti aim", "main", "other", "Freestanding");
        v600 = v289.sub_switch("anti aim", "main", "other", "Freestanding", "Body Freestanding");
        local v630 = v289.sub_switch("anti aim", "main", "other", "Freestanding", "Better Freestanding");
        do
            local l_v600_1, l_v630_0 = v600, v630;
            v280.freestanding = function(v633, _)
                -- upvalues: v289 (ref), v566 (ref), l_v630_0 (ref), v599 (ref), l_v600_1 (ref)
                v289.disable_yaw_modifiers_fs = false;
                if v633 == 8 then
                    v566.freestanding_ref:override(false);
                    return;
                elseif l_v630_0:get() and v633 ~= 2 and v633 ~= 3 and v633 ~= 1 then
                    return;
                else
                    v566.freestanding_ref:override(v599:get());
                    if rage.antiaim:get_target(true) then
                        local v635 = math.normalize_yaw(rage.antiaim:get_target() - rage.antiaim:get_target(true));
                        if v635 >= 5 and v635 <= 5 then
                            v566.freestanding_ref:override(false);
                            v566.disable_yaw_modifiers_ref:override(false);
                        else
                            v566.disable_yaw_modifiers_ref:override(true);
                        end;
                        if l_v600_1:get() and v599:get() then
                            v289.disable_yaw_modifiers_fs = true;
                        end;
                    end;
                    return;
                end;
            end;
        end;
        v600 = nil;
        v600 = v289.switch("anti aim", "main", "other", "Disable during Warmup");
        v280.disable_anti_aim_on_warmup_on_create_move = function()
            -- upvalues: v566 (ref)
            local v636 = entity.get_game_rules();
            if not v636 then
                return false;
            else
                local v637 = math.normalize_yaw(-180 + globals.tickcount % 9 * 40 + utils.random_float(-45, 45));
                if v636.m_bWarmupPeriod then
                    v566.pitch_ref:override("Disabled");
                    v566.yaw_ref:override("Backwards");
                    v566.yaw_offset_ref:override(v637);
                    v566.body_yaw_ref:override(false);
                    v566.freestanding_ref:override(false);
                    v566.extended_angles_ref:override(false);
                    v566.enable_fake_lag_ref:override(false);
                    return true;
                else
                    return false;
                end;
            end;
        end;
        v630 = {
            [0] = {
                body_yaw_freestanding = "Peek Real", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 180, 
                yaw = "Backward", 
                yaw_base = "Local View", 
                pitch = "Disabled", 
                body_yaw_options = {
                    [1] = "Avoid Overlap", 
                    [2] = "Jitter"
                }
            }, 
            [7] = {
                body_yaw_freestanding = "Off", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [1] = {
                body_yaw_freestanding = "Off", 
                right_limit = 0, 
                left_limit = 0, 
                body_yaw = false, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "Local View", 
                pitch = "Disabled", 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [2] = {
                body_yaw_freestanding = "Peek Fake", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = "Avoid Overlap", 
                    [2] = "Jitter"
                }
            }, 
            [3] = {
                body_yaw_freestanding = "Off", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [4] = {
                body_yaw_freestanding = "Peek Fake", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = "Avoid Overlap"
                }
            }, 
            [6] = {
                body_yaw_freestanding = "Off", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [9] = {
                body_yaw_freestanding = "Off", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 37, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [5] = {
                body_yaw_freestanding = "Off", 
                right_limit = 0, 
                left_limit = 0, 
                body_yaw = true, 
                modifier_degree = 0, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_options = {
                    [1] = ""
                }
            }
        };
        local v638 = v289.switch("anti aim", "main", "other", "Avoid Backstab");
        v280.anti_backstab = function()
            -- upvalues: v566 (ref), v638 (ref)
            v566.avoid_backstab_ref:override(v638:get());
        end;
        local v639 = v289.switch("anti aim", "main", "other", "Defensive AA");
        local v640 = v289.sub_combo("anti aim", "main", "other", "Defensive AA", "Pitch", nil, {
            [1] = "None", 
            [2] = "Down", 
            [3] = "Up", 
            [4] = "Random", 
            [5] = "PAKETA", 
            [6] = "Semi-Up", 
            [7] = "Semi-Down"
        });
        local v641 = v289.sub_combo("anti aim", "main", "other", "Defensive AA", "Yaw", nil, {
            [1] = "None", 
            [2] = "Spinbot", 
            [3] = "Opposite", 
            [4] = "Opposite Jitter", 
            [5] = "Sideways", 
            [6] = "Random", 
            [7] = "3-Way", 
            [8] = "5-Way"
        });
        local v642 = v289.sub_selectable("anti aim", "main", "other", "Defensive AA", "Disablers", nil, {
            [1] = "Freestanding", 
            [2] = "Manual Yaw Base"
        });
        local v643 = v289.sub_switch("anti aim", "main", "other", "Defensive AA", "E-Spam while Safe Head");
        local v644 = v289.sub_switch("anti aim", "main", "other", "Defensive AA", "Edge Manual Yaw");
        local v645 = false;
        local v646 = false;
        local v647 = nil;
        v289.selectable("anti aim", "main", "other", "Safe Head", nil, {
            [1] = "Standing", 
            [2] = "Crouching", 
            [3] = "Air Crouching", 
            [4] = "Air Crouching Knife", 
            [5] = "Air Crouching Taser", 
            [6] = "Distance"
        }):set_callback(function(v648)
            -- upvalues: v647 (ref)
            v647 = v648:get();
        end, true);
        v280.safe_head = function(_, v650, v651)
            -- upvalues: v280 (ref), v597 (ref), v645 (ref), v646 (ref), v647 (ref), v630 (ref), v566 (ref)
            if v280.last_state_id == 8 then
                return;
            elseif v597:get() ~= "Disabled" then
                return;
            else
                v645 = false;
                v646 = false;
                local v652 = entity.get_threat();
                if not v652 then
                    return;
                else
                    local v653 = v651:get_classid() == 107;
                    local v654 = v651:get_classid() == 268;
                    local v655 = false;
                    local v656 = false;
                    local v657 = false;
                    local v658 = false;
                    local v659 = false;
                    local v660 = nil;
                    for _, v662 in ipairs(v647) do
                        if v662 == "Standing" then
                            v655 = true;
                        elseif v662 == "Crouching" then
                            v656 = true;
                        elseif v662 == "Air Crouching" then
                            v657 = true;
                        elseif v662 == "Air Crouching Knife" then
                            v658 = true;
                        elseif v662 == "Air Crouching Taser" then
                            v659 = true;
                        elseif v662 == "Distance" then
                            v660 = true;
                        end;
                    end;
                    local v663 = v650:get_eye_position();
                    local v664 = v652:get_origin();
                    local v665 = v663:dist2dsqr(v664) / 10000;
                    v664.z = v664.z + 64;
                    local v666 = nil;
                    if v663.z - v664.z > -80 and v658 and v280.last_state_id == 7 and v653 then
                        v666 = 9;
                        v646 = true;
                    end;
                    if v663.z - v664.z > -20 and v659 and v280.last_state_id == 7 and v654 then
                        v666 = 5;
                        v645 = false;
                    end;
                    if v660 and v665 > 100 and (v280.last_state_id == 2 and v663.z - v664.z >= 0 or v280.last_state_id == 5 and v663.z - v664.z >= -18) then
                        v666 = 5;
                        v645 = true;
                    end;
                    if v663.z - v664.z > 22 and (v655 and v280.last_state_id == 2 or v656 and v280.last_state_id == 5) or v663.z - v664.z > 65 and v657 and v280.last_state_id == 7 then
                        v666 = 5;
                        v645 = true;
                    end;
                    if not v666 then
                        return;
                    else
                        local v667 = v630[v666];
                        v566.pitch_ref:override(v667.pitch);
                        v566.yaw_base_ref:override(v667.yaw_base);
                        v566.yaw_ref:override(v667.yaw);
                        v566.yaw_offset_ref:override(v667.yaw_offset);
                        v566.yaw_modifier_ref:override(v667.yaw_modifier);
                        v566.modifier_degree_ref:override(v667.modifier_degree);
                        v566.inverter_ref:override(false);
                        v566.body_yaw_ref:override(v667.body_yaw);
                        v566.body_yaw_options_ref:override(v667.body_yaw_options);
                        v566.left_limit_ref:override(v667.left_limit);
                        v566.right_limit_ref:override(v667.right_limit);
                        v566.body_yaw_freestanding_ref:override(v667.body_yaw_freestanding);
                        return;
                    end;
                end;
            end;
        end;
        local _ = 0;
        local _ = 0;
        local v670 = false;
        local v671 = nil;
        v671 = v289.selectable("anti aim", "main", "other", "Static Body Yaw On", nil, {
            [1] = "Manual Yaw Base", 
            [2] = "Freestanding"
        });
        v280.no_body_yaw = function(v672)
            -- upvalues: v671 (ref), v597 (ref), v566 (ref)
            if v672 == 8 then
                return;
            else
                if v671:get("Manual Yaw Base") and v597:get() ~= "Disabled" then
                    v566.left_limit_ref:override(0);
                    v566.right_limit_ref:override(0);
                end;
                local v673 = rage.antiaim:get_target(true);
                if v671:get("Freestanding") and v673 and v566.freestanding_ref:get_override() and math.abs(math.normalize_yaw(rage.antiaim:get_target() - rage.antiaim:get_target(true))) > 5 then
                    v566.left_limit_ref:override(0);
                    v566.right_limit_ref:override(0);
                end;
                return;
            end;
        end;
        local v674 = nil;
        v674 = v289.selectable("anti aim", "main", "other", "Disable Fake Lag", nil, {
            [1] = "Double Tap", 
            [2] = "Hide Shots", 
            [3] = "Standing", 
            [4] = "DT Heavy Pistols", 
            [5] = "DT Knife", 
            [6] = "DT High Firerate"
        });
        local v675 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
        local v676 = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
        do
            local l_v675_0, l_v676_0 = v675, v676;
            v280.disable_fake_lag = function()
                -- upvalues: v674 (ref), l_v675_0 (ref), v566 (ref), l_v676_0 (ref), v289 (ref)
                if v674:get("Double Tap") and l_v675_0:get() then
                    return v566.enable_fake_lag_ref:override(false);
                elseif v674:get("Hide Shots") and l_v676_0:get() then
                    return v566.enable_fake_lag_ref:override(false);
                else
                    local v679 = entity.get_local_player();
                    if not v679 then
                        return;
                    else
                        local v680 = v679:get_player_weapon();
                        if not v680 then
                            return;
                        else
                            local v681 = v680:get_weapon_index();
                            local v682 = v680:get_classid();
                            local v683 = v289.get_weapon_type(v681);
                            if v674:get("DT Heavy Pistols") and l_v675_0:get() and (v681 == 1 or v681 == 64) then
                                return v566.enable_fake_lag_ref:override(false);
                            elseif v674:get("DT Knife") and l_v675_0:get() and v682 == 107 then
                                return v566.enable_fake_lag_ref:override(false);
                            elseif v674:get("DT High Firerate") and l_v675_0:get() and (v683 == "SMG" or v683 == "Pistol" or v683 == "Autosniper" or v683 == "Rifle" or v683 == "Machine Gun") then
                                return v566.enable_fake_lag_ref:override(false);
                            else
                                if v674:get("Standing") and v679.m_vecVelocity:length2d() < 2 and bit.band(v679.m_fFlags, 1) == 1 then
                                    v566.enable_fake_lag_ref:override(false);
                                end;
                                return;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        v675 = false;
        v676 = nil;
        local v684 = nil;
        local v685 = nil;
        local v686 = nil;
        v289.selectable("anti aim", "main", "other", "Force Break LC", nil, {
            [1] = "Standing", 
            [2] = "Moving", 
            [3] = "Slow Walking", 
            [4] = "Crouching", 
            [5] = "In Air", 
            [6] = "Safe Head", 
            [7] = "Manual Yaw Base"
        }):set_callback(function(v687)
            -- upvalues: v684 (ref), v685 (ref), v686 (ref)
            v684 = v687:get("In Air");
            v685 = v687:get("Manual Yaw Base");
            v686 = v687:get("Crouching");
            force_lc_standing = v687:get("Standing");
            force_lc_moving = v687:get("Moving");
            force_lc_slow_walking = v687:get("Slow Walking");
            force_lc_safe_head = v687:get("Safe Head");
        end, true);
        local v688 = false;
        do
            local l_v688_0 = v688;
            v289.sub_switch("anti aim", "main", "other", "Force Break LC", "Disable if Pin Pulled"):set_callback(function(v690)
                -- upvalues: l_v688_0 (ref)
                l_v688_0 = v690:get();
            end, true);
            local v691 = false;
            local v692 = false;
            local v693 = false;
            local v694 = false;
            v289.sub_selectable("anti aim", "main", "other", "Force Break LC", "Triggers", nil, {
                [1] = "Weapon Switch", 
                [2] = "Flashed", 
                [3] = "Reloading", 
                [4] = "Flinching"
            }):set_callback(function(v695)
                -- upvalues: v691 (ref), v692 (ref), v693 (ref), v694 (ref)
                v691 = v695:get("Weapon Switch");
                v692 = v695:get("Flashed");
                v693 = v695:get("Reloading");
                v694 = v695:get("Flinching");
            end, true);
            local _ = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
            local v697 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap", "Lag Options");
            local _ = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
            local v699 = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots", "Options");
            local _ = 0;
            local _ = 0;
            v280.force_lc = function(v702, _)
                -- upvalues: v697 (ref), v699 (ref), v280 (ref), v8 (ref), v691 (ref), v693 (ref), v692 (ref), v694 (ref), l_v688_0 (ref), v645 (ref), v684 (ref), v685 (ref), v597 (ref), v686 (ref)
                v697:override();
                v699:override();
                if v280.last_state_id == 8 then
                    return;
                else
                    local v704 = entity.get_local_player();
                    if not v704 then
                        return;
                    else
                        local v705 = ffi.cast(ffi.typeof("$ *", v8), v704[0]);
                        if v705 == nil then
                            return;
                        else
                            local v706 = v705:get_model_ptr();
                            if v706 == nil then
                                return;
                            else
                                local v707 = v705:get_anim_overlay(1, true);
                                local v708 = v705:get_anim_overlay(9, true);
                                local v709 = v705:get_anim_overlay(10, true);
                                local v710 = 960;
                                local v711 = 967;
                                local v712 = 972;
                                local v713 = 982;
                                local v714 = v706:get_sequence_activity(v707.sequence);
                                local v715 = v706:get_sequence_activity(v708.sequence);
                                local v716 = v706:get_sequence_activity(v709.sequence);
                                local v717 = v714 == v712 and v707.weight > 0;
                                local v718 = v714 == v711 and v707.weight > 0;
                                local v719 = v715 == v710 and v708.weight > 0.3;
                                local v720 = v716 == v713 and v709.weight > 0;
                                if v691 and v717 or v693 and v718 or v692 and v719 or v694 and v720 then
                                    v697:override("Always On");
                                    v699:override("Break LC");
                                    return;
                                else
                                    local v721 = v704:get_player_weapon();
                                    if not v721 then
                                        return;
                                    elseif v721.m_bPinPulled and l_v688_0 then
                                        return;
                                    elseif (not force_lc_safe_head or v645 == false) and (not force_lc_slow_walking or v280.get_state_id2(v702, v704, v721) ~= 4) and (not force_lc_moving or v280.get_state_id2(v702, v704, v721) ~= 3) and (not force_lc_standing or v280.get_state_id2(v702, v704, v721) ~= 2) and (not v684 or bit.band(v704.m_fFlags, 1) == 1) and (not v685 or v597:get() == "Disabled") and (not v686 or v704.m_flDuckAmount < 0.99 or bit.band(v704.m_fFlags, 1) ~= 1) then
                                        return;
                                    else
                                        aboba = true;
                                        if aboba then
                                            return v697:override("Always On") and v699:override("Break LC");
                                        else
                                            return;
                                        end;
                                    end;
                                end;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        v280.get_name_by_state_id = function(v722)
            -- upvalues: v592 (ref)
            return v592[v722] or "Default";
        end;
        v688 = nil;
        local v723 = nil;
        v723 = false;
        v688 = v289.switch("anti aim", "main", "other", "Automatic Teleport");
        local v724 = v289.sub_selectable("anti aim", "main", "other", "Automatic Teleport", "Weapons", nil, v289.weapon_types);
        local v725 = v289.sub_slider("anti aim", "main", "other", "Automatic Teleport", "Delay", function()
            -- upvalues: v723 (ref)
            return not v723;
        end, 0, 16);
        local v726 = nil;
        do
            local l_v724_0, l_v725_0, l_v726_0 = v724, v725, v726;
            v289.sub_switch("anti aim", "main", "other", "Automatic Teleport", "In Air Only"):set_callback(function(v730)
                -- upvalues: l_v726_0 (ref)
                l_v726_0 = v730:get();
            end, true);
            local v731 = false;
            local v732 = 0;
            local v733 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
            local _ = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
            local _ = false;
            local _ = false;
            local _ = ui.find("Aimbot", "Ragebot", "Main", "Double Tap", "Lag Options");
            local _ = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots", "Options");
            v280.automatic_exploit = function(v739, v740)
                -- upvalues: v733 (ref), l_v726_0 (ref), l_v724_0 (ref), v289 (ref), v731 (ref), v732 (ref), l_v725_0 (ref)
                if not v733:get_override() and not v733:get() then
                    return;
                elseif bit.band(v739.m_fFlags, 1) == 1 and l_v726_0 then
                    return;
                elseif not l_v724_0:get(v289.get_weapon_type(v740:get_weapon_index())) then
                    return;
                else
                    local v741 = entity.get_threat(true);
                    if v741 then
                        local v742 = v741:get_player_weapon();
                        if v742 then
                            local v743 = v289.get_weapon_type(v742:get_weapon_index());
                            if v743 ~= "Other" and v743 ~= "Nades" then
                                if not v731 then
                                    v732 = globals.tickcount + l_v725_0:get();
                                end;
                                v731 = true;
                                if globals.tickcount >= v732 then
                                    rage.exploit:force_teleport();
                                    rage.exploit:allow_charge(false);
                                end;
                            end;
                        end;
                    else
                        v731 = false;
                        rage.exploit:allow_charge(true);
                    end;
                    return;
                end;
            end;
        end;
        v724 = nil;
        v725 = ui.find("Aimbot", "Anti Aim", "Misc", "Leg Movement");
        do
            local l_v725_1, l_v726_1 = v725, v726;
            l_v726_1 = function(_)
                -- upvalues: v724 (ref), l_v725_1 (ref)
                if v724 == "Default" then
                    l_v725_1:override(utils.random_int(0, 1) == 1 and "Sliding" or "Walking");
                elseif v724 == "Experimental" then
                    local v747 = utils.random_int(0, 2);
                    l_v725_1:override(v747 == 0 and "Default" or v747 == 1 and "Sliding" or "Walking");
                end;
            end;
            v289.combo("anti aim", "main", "other", "Leg Breaker", nil, {
                [1] = "Disabled", 
                [2] = "Default", 
                [3] = "Experimental"
            }):set_callback(function(v748)
                -- upvalues: v724 (ref), l_events_0 (ref), l_v726_1 (ref), l_v725_1 (ref)
                v724 = v748:get();
                l_events_0.createmove(l_v726_1, v724 ~= "Disabled");
                l_v725_1:override();
            end, true);
        end;
        v725 = nil;
        v725 = v289.switch("anti aim", "main", "other", "Extended Angles");
        v726 = v289.sub_slider("anti aim", "main", "other", "Extended Angles", "Extended Pitch", nil, -180, 180);
        local v749 = v289.sub_slider("anti aim", "main", "other", "Extended Angles", "Extended Roll", nil, 0, 90);
        do
            local l_v726_2, l_v749_0 = v726, v749;
            v280.extended = function()
                -- upvalues: v566 (ref), v725 (ref), l_v726_2 (ref), l_v749_0 (ref)
                v566.extended_angles_ref:override(v725:get());
                v566.extended_pitch_ref:override(l_v726_2:get());
                v566.extended_roll_ref:override(l_v749_0:get());
            end;
        end;
        v726 = ui.find("Aimbot", "Anti Aim", "Angles", "Yaw", "Hidden");
        v749 = 0;
        local v752 = {
            [0] = -90, 
            [1] = 180, 
            [2] = 90
        };
        local v753 = {
            [0] = -90, 
            [1] = -45, 
            [2] = 180, 
            [3] = 45, 
            [4] = 90
        };
        local v754 = false;
        v280.run_hidden = function()
            -- upvalues: v754 (ref), v566 (ref), v643 (ref), v646 (ref), v645 (ref), v726 (ref), v639 (ref), v644 (ref), v597 (ref), v641 (ref), v749 (ref), v752 (ref), v753 (ref), v640 (ref)
            if globals.choked_commands == 0 then
                v754 = not v754;
            end;
            local v755 = false;
            if rage.antiaim:get_target(true) and v566.freestanding_ref:get_override() then
                local v756 = math.normalize_yaw(rage.antiaim:get_target() - rage.antiaim:get_target(true));
                v755 = v756 < 5 or v756 > 5;
            end;
            local v757 = v643:get() and (v646 or v645);
            v726:override(false);
            if v639:get() == false then
                return;
            else
                v726:override(true);
                local v758 = utils.random_float(-30, 30);
                if (not v644:get() or v597:get() == "Disabled") and not v755 and not v757 then
                    if v641:get() == "Random" then
                        v758 = utils.random_float(-180, 180);
                    end;
                    if v641:get() == "Sideways" then
                        v758 = v754 and utils.random_int(-60, -120) or utils.random_int(60, 120);
                    end;
                    if v641:get() == "Opposite" then
                        v758 = utils.random_int(165, 195);
                    end;
                    if v641:get() == "Opposite Jitter" then
                        v758 = v754 and utils.random_int(120, 165) or utils.random_int(195, 240);
                    end;
                    if v641:get() == "3-Way" then
                        if globals.choked_commands == 0 then
                            v749 = v749 + 1;
                        end;
                        if v749 > 2 then
                            v749 = 0;
                        end;
                        v758 = v752[v749];
                    end;
                    if v641:get() == "5-Way" then
                        if globals.choked_commands == 0 then
                            v749 = v749 + 1;
                        end;
                        if v749 > 4 then
                            v749 = 0;
                        end;
                        v758 = v753[v749];
                    end;
                    if v641:get() == "Spinbot" then
                        v758 = math.normalize_yaw(-180 + globals.tickcount % 12 * 30 + utils.random_float(-30, 30));
                    end;
                end;
                if v644:get() and v597:get() ~= "Disabled" or v755 or v643:get() and v645 then
                    v758 = utils.random_int(165, 195);
                elseif v643:get() and v646 then
                    v758 = utils.random_int(197, 237);
                end;
                if v641:get() ~= "Spin" then
                    rage.antiaim:override_hidden_yaw_offset(v758);
                end;
                local v759 = utils.random_float(-8, 8);
                if (not v644:get() or v597:get() == "Disabled") and not v755 and not v757 then
                    if v640:get() == "Down" then
                        v759 = utils.random_int(74, 89);
                    end;
                    if v640:get() == "Up" then
                        v759 = utils.random_int(-74, -89);
                    end;
                    if v640:get() == "PAKETA" then
                        v759 = math.map(math.abs(globals.realtime % 0.3 - 0.15), 0, 0.15, -89, 89);
                    end;
                    if v640:get() == "Semi-Up" then
                        v759 = utils.random_int(-45, -60);
                    end;
                    if v640:get() == "Semi-Down" then
                        v759 = utils.random_int(45, 60);
                    end;
                    if v640:get() == "Random" then
                        v759 = utils.random_float(-89, 89);
                    end;
                end;
                if v644:get() and v597:get() ~= "Disabled" or v755 or v757 then
                    v759 = utils.random_float(-8, 8);
                end;
                rage.antiaim:override_hidden_pitch(v759);
                return;
            end;
        end;
        local function _(v760)
            if v760 > 0 then
                return true, v760;
            else
                return false, v760;
            end;
        end;
        local _ = 0;
        local _ = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
        local v764 = 0;
        local v765 = 0;
        local v766 = 0;
        local v767 = 0;
        local v768 = false;
        local v769 = 0;
        v280.handle_states = function(v770, v771)
            -- upvalues: v597 (ref), v598 (ref), v769 (ref), v768 (ref), v280 (ref), v566 (ref), v670 (ref), v764 (ref), v765 (ref), v767 (ref), v766 (ref), v289 (ref), v749 (ref)
            local v772 = entity.get_local_player();
            if not v772 then
                return;
            elseif v597:get() ~= "Disabled" and not v770 == 8 then
                return;
            else
                local v773 = v598[v770];
                if v771.choked_commands == 0 then
                    if v769 == 0 then
                        v768 = not v768;
                        if v773.body_yaw_options_ref:get("Randomize Jitter") then
                            v768 = utils.random_int(0, 1) == 1;
                        end;
                    end;
                    v769 = v769 + 1;
                    if v769 > v773.delay_ref:get() then
                        v769 = 0;
                    end;
                end;
                if not v773.body_yaw_options_ref:get("Jitter") then
                    v768 = v773.inverter_ref:get();
                end;
                v280.freestanding(v770);
                v280.extended();
                v280.anti_backstab();
                v566.pitch_ref:override(v773.pitch_ref:get());
                v566.yaw_ref:override(v773.yaw_ref:get());
                v566.yaw_base_ref:override(v773.yaw_base_ref:get());
                v670 = rage.antiaim:inverter();
                if v771.choked_commands == 0 then
                    v764 = v764 + 1;
                end;
                if v764 % 2 == 0 then
                    v765 = v773.jitter_randomize_ref:get();
                    v767 = v766;
                    v766 = utils.random_int(v773.modifier_degree_ref:get() - v765, v773.modifier_degree_ref:get() + v765);
                end;
                local v774 = 0;
                if v768 then
                    v774 = v773.yaw_offset_left_ref:get();
                else
                    v774 = v773.yaw_offset_right_ref:get();
                end;
                v774 = math.normalize_yaw(v774);
                v566.yaw_offset_ref:override(v774);
                v566.body_yaw_ref:override(v773.body_yaw_ref:get());
                v566.inverter_ref:override(v768);
                if v289.disable_yaw_modifiers_fs then
                    v566.inverter_ref:override(false);
                end;
                v566.left_limit_ref:override(v773.left_limit_ref:get());
                v566.right_limit_ref:override(v773.right_limit_ref:get());
                if v773.yaw_modifier_ref:get() == "3-Way Chimera" then
                    if globals.choked_commands == 0 then
                        v749 = v749 + 1;
                    end;
                    if v749 > 2 then
                        v749 = 0;
                    end;
                    v774 = utils.random_int(v774 + v765, v774 - v765);
                    if v749 == 0 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_1_ref:get() or -v773.modifier_degree_ref:get())));
                    elseif v749 == 1 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_2_ref:get() or 0)));
                    elseif v749 == 2 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_3_ref:get() or v773.modifier_degree_ref:get())));
                    end;
                    v566.yaw_modifier_ref:override("Disabled");
                elseif v773.yaw_modifier_ref:get() == "5-Way Chimera" then
                    if globals.choked_commands == 0 then
                        v749 = v749 + 1;
                    end;
                    if v749 > 4 then
                        v749 = 0;
                    end;
                    v774 = utils.random_int(v774 + v765, v774 - v765);
                    if v749 == 0 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_1_ref:get() or -v773.modifier_degree_ref:get())));
                    elseif v749 == 1 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_2_ref:get() or -v773.modifier_degree_ref:get() * 0.5)));
                    elseif v749 == 2 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_3_ref:get() or 0)));
                    elseif v749 == 3 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_4_ref:get() or v773.modifier_degree_ref:get() * 0.5)));
                    elseif v749 == 4 then
                        v566.yaw_offset_ref:override(math.normalize_yaw(v774 + (v773.way_mode_ref:get() and v773.offset_5_ref:get() or v773.modifier_degree_ref:get())));
                    end;
                    v566.yaw_modifier_ref:override("Disabled");
                elseif v773.yaw_modifier_ref:get() == "Offset" then
                    if v768 then
                        v774 = math.normalize_yaw(v774 + v766);
                    end;
                    v566.yaw_modifier_ref:override("Disabled");
                    v566.yaw_offset_ref:override(v774);
                elseif v773.yaw_modifier_ref:get() == "Center" then
                    if v768 then
                        v774 = math.normalize_yaw(v774 + v766 * 0.5);
                    else
                        v774 = math.normalize_yaw(v774 - v766 * 0.5);
                    end;
                    v566.yaw_modifier_ref:override("Disabled");
                    v566.yaw_offset_ref:override(v774);
                else
                    v566.yaw_modifier_ref:override(v773.yaw_modifier_ref:get());
                    v566.modifier_degree_ref:override(v766);
                end;
                v566.body_yaw_options_ref:override(v773.body_yaw_options_ref:get("Avoid Overlap") and {
                    [1] = "Avoid Overlap"
                } or {});
                v566.body_yaw_freestanding_ref:override(v773.body_yaw_freestanding_ref:get());
                if not v772:get_player_weapon() then
                    return;
                else
                    return;
                end;
            end;
        end;
        local v775 = {
            [1] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 20, 
                right_limit = 24, 
                left_limit = 48, 
                body_yaw = true, 
                yaw_modifier = "Offset", 
                yaw_offset = 25, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -85, 
                    [2] = -27
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [2] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 1, 
                right_limit = 58, 
                left_limit = 58, 
                body_yaw = true, 
                yaw_modifier = "Center", 
                yaw_offset = 10, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -73, 
                    [2] = -73
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [3] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 1, 
                right_limit = 58, 
                left_limit = 58, 
                body_yaw = true, 
                yaw_modifier = "Center", 
                yaw_offset = -4, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -76, 
                    [2] = -76
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [4] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 1, 
                right_limit = 45, 
                left_limit = 45, 
                body_yaw = true, 
                yaw_modifier = "Center", 
                yaw_offset = 12, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -87, 
                    [2] = -87
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [5] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 1, 
                right_limit = 30, 
                left_limit = 30, 
                body_yaw = true, 
                yaw_modifier = "Center", 
                yaw_offset = 9, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -64, 
                    [2] = -64
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [6] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 1, 
                right_limit = 58, 
                left_limit = 58, 
                body_yaw = true, 
                yaw_modifier = "Center", 
                yaw_offset = 13, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -76, 
                    [2] = -76
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [7] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 1, 
                right_limit = 58, 
                left_limit = 58, 
                body_yaw = true, 
                yaw_modifier = "Center", 
                yaw_offset = 9, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                modifier_degree = {
                    [1] = -69, 
                    [2] = -69
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [8] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 90, 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Disabled", 
                yaw_base = "Local View", 
                pitch = "Disabled", 
                body_yaw_freestanding = "Peek Real", 
                modifier_degree = {
                    [1] = 0, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = "Avoid Overlap"
                }
            }, 
            [9] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                randomize = 0, 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw_offset = 0, 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Peek Fake", 
                modifier_degree = {
                    [1] = -25, 
                    [2] = -25
                }, 
                body_yaw_options = {
                    [1] = "Jitter", 
                    [2] = "Avoid Overlap"
                }
            }
        };
        local v776 = {
            [1] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 24, 
                left_limit = 48, 
                body_yaw = true, 
                yaw_modifier = "Offset", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                yaw_offset = {
                    [1] = 25, 
                    [2] = 133, 
                    [3] = 20, 
                    [4] = 20
                }, 
                modifier_degree = {
                    [1] = -85, 
                    [2] = -27
                }, 
                randomize = {
                    [1] = 90, 
                    [2] = 45
                }, 
                body_yaw_options = {
                    [1] = "Jitter"
                }
            }, 
            [2] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                yaw_offset = {
                    [1] = -25, 
                    [2] = 40, 
                    [3] = 2, 
                    [4] = 8
                }, 
                modifier_degree = {
                    [1] = -63, 
                    [2] = -63
                }, 
                randomize = {
                    [1] = 0, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [3] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                yaw_offset = {
                    [1] = -25, 
                    [2] = 40, 
                    [3] = 2, 
                    [4] = 8
                }, 
                modifier_degree = {
                    [1] = -63, 
                    [2] = -63
                }, 
                randomize = {
                    [1] = 0, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [4] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                yaw_offset = {
                    [1] = -25, 
                    [2] = 40, 
                    [3] = 2, 
                    [4] = 8
                }, 
                modifier_degree = {
                    [1] = -2, 
                    [2] = -2
                }, 
                randomize = {
                    [1] = 1, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [5] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                yaw_offset = {
                    [1] = -25, 
                    [2] = 40, 
                    [3] = 2, 
                    [4] = 8
                }, 
                modifier_degree = {
                    [1] = 0, 
                    [2] = 0
                }, 
                randomize = {
                    [1] = 0, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [6] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Peek Real", 
                yaw_offset = {
                    [1] = 0, 
                    [2] = 0, 
                    [3] = 2, 
                    [4] = 8
                }, 
                modifier_degree = {
                    [1] = -25, 
                    [2] = -25
                }, 
                randomize = {
                    [1] = 1, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = "Avoid Overlap", 
                    [2] = "Jitter"
                }
            }, 
            [7] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Off", 
                yaw_offset = {
                    [1] = -25, 
                    [2] = 40, 
                    [3] = 2, 
                    [4] = 8
                }, 
                modifier_degree = {
                    [1] = -25, 
                    [2] = -25
                }, 
                randomize = {
                    [1] = 0, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = ""
                }
            }, 
            [8] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Disabled", 
                yaw_base = "Local View", 
                pitch = "Disabled", 
                body_yaw_freestanding = "Peek Real", 
                yaw_offset = {
                    [1] = 0, 
                    [2] = 0, 
                    [3] = 3, 
                    [4] = 10
                }, 
                modifier_degree = {
                    [1] = 0, 
                    [2] = 0
                }, 
                randomize = {
                    [1] = 90, 
                    [2] = 10
                }, 
                body_yaw_options = {
                    [1] = "Avoid Overlap"
                }
            }, 
            [9] = {
                on_shot = "Default", 
                lby_mode = "Disabled", 
                right_limit = 60, 
                left_limit = 60, 
                body_yaw = true, 
                yaw_modifier = "Disabled", 
                yaw = "Backward", 
                yaw_base = "At Target", 
                pitch = "Down", 
                body_yaw_freestanding = "Peek Fake", 
                yaw_offset = {
                    [1] = 0, 
                    [2] = 0, 
                    [3] = 1, 
                    [4] = 2
                }, 
                modifier_degree = {
                    [1] = -25, 
                    [2] = -25
                }, 
                randomize = {
                    [1] = 0, 
                    [2] = 0
                }, 
                body_yaw_options = {
                    [1] = "Jitter", 
                    [2] = "Avoid Overlap"
                }
            }
        };
        local v777 = 0;
        local _ = 0;
        local _ = 0;
        v280.handle_states5 = function(v780, v781)
            -- upvalues: v777 (ref), v775 (ref), v280 (ref), v566 (ref), v289 (ref)
            if v781.choked_commands == 0 then
                v777 = v777 + 1;
                if v777 >= 3 then
                    v777 = 0;
                end;
            end;
            local v782 = entity.get_local_player();
            if not v782 then
                return;
            else
                local v783 = v775[v780] or test_values2[1];
                v280.freestanding(v780);
                v280.extended();
                v280.anti_backstab();
                v566.pitch_ref:override(v783.pitch);
                v566.yaw_base_ref:override(v783.yaw_base);
                v566.yaw_ref:override(v783.yaw);
                v566.yaw_offset_ref:override(v783.yaw_offset);
                v566.yaw_modifier_ref:override(v783.yaw_modifier);
                local v784 = v777 == 0 and v783.modifier_degree[1] or v783.modifier_degree[2];
                local v785 = utils.random_int(v784 - v783.randomize, v784 + v783.randomize);
                v566.modifier_degree_ref:override(v785);
                v566.body_yaw_ref:override(v783.body_yaw);
                if v289.disable_yaw_modifiers_fs then
                    v566.body_yaw_options_ref:override("");
                else
                    v566.body_yaw_options_ref:override(v783.body_yaw_options);
                end;
                v566.left_limit_ref:override(v783.left_limit);
                v566.right_limit_ref:override(v783.right_limit);
                v566.body_yaw_freestanding_ref:override(v783.body_yaw_freestanding);
                local v786 = v782:get_player_weapon();
                if not v786 then
                    return;
                else
                    local _ = v786:get_weapon_info();
                    return;
                end;
            end;
        end;
        local _ = false;
        local v789 = {
            [1] = 0, 
            [2] = 0
        };
        v280.handle_states8 = function(v790, v791)
            -- upvalues: v777 (ref), v776 (ref), v280 (ref), v566 (ref), v789 (ref), v289 (ref)
            if v791.choked_commands == 0 then
                v777 = v777 + 1;
                if v777 >= 3 then
                    v777 = 0;
                end;
            end;
            local v792 = entity.get_local_player();
            if not v792 then
                return;
            else
                local v793 = v776[v790] or test_values2[1];
                local v794 = utils.random_int(v793.yaw_offset[3], v793.yaw_offset[4] or v793.yaw_offset[3]);
                if type(v793.yaw_offset) ~= "number" and globals.tickcount % v794 == 0 then
                    sand_nigger_cock_cunt = not sand_nigger_cock_cunt;
                end;
                v280.freestanding(v790);
                v280.extended();
                v280.anti_backstab();
                v566.pitch_ref:override(v793.pitch);
                v566.yaw_base_ref:override(v793.yaw_base);
                v566.yaw_ref:override(v793.yaw);
                v566.yaw_modifier_ref:override(v793.yaw_modifier);
                local v795 = v777 == 0 and v793.modifier_degree[1] or v793.modifier_degree[2];
                local v796 = utils.random_int(v795 - v793.randomize[1], v795 + v793.randomize[1]);
                if v791.choked_commands == 0 then
                    local v797 = math.abs(v789[1] - v796);
                    local v798 = math.abs(v789[2] - v796);
                    while v797 < v793.randomize[2] or v798 < v793.randomize[2] do
                        v796 = utils.random_int(v795 - v793.randomize[1], v795 + v793.randomize[1]);
                        v797 = math.abs(v789[1] - v796);
                        v798 = math.abs(v789[2] - v796);
                    end;
                    local l_v789_0 = v789;
                    local l_v789_1 = v789;
                    local v801 = v789[2];
                    l_v789_1[2] = v796;
                    l_v789_0[1] = v801;
                end;
                if v790 ~= 9 and v790 ~= 6 and not v289.disable_yaw_modifiers_fs then
                    rage.antiaim:inverter((type(v793.yaw_offset) == "table" and #v793.yaw_offset == 4 and (sand_nigger_cock_cunt and v793.yaw_offset[2] or v793.yaw_offset[1]) or v793.yaw_offset) < 0);
                end;
                v566.yaw_offset_ref:override(type(v793.yaw_offset) == "table" and #v793.yaw_offset == 4 and (not rage.antiaim:inverter() and v793.yaw_offset[2] or v793.yaw_offset[1]) or v793.yaw_offset);
                v566.modifier_degree_ref:override(v789[2]);
                v566.body_yaw_ref:override(v793.body_yaw);
                if v289.disable_yaw_modifiers_fs then
                    v566.body_yaw_options_ref:override("");
                else
                    v566.body_yaw_options_ref:override(v793.body_yaw_options);
                end;
                v566.left_limit_ref:override(v793.left_limit);
                v566.right_limit_ref:override(v793.right_limit);
                v566.body_yaw_freestanding_ref:override(v793.body_yaw_freestanding);
                local v802 = v792:get_player_weapon();
                if not v802 then
                    return;
                else
                    local _ = v802:get_weapon_info();
                    return;
                end;
            end;
        end;
        local v804 = false;
        local v805 = false;
        local v806 = false;
        local v807 = false;
        local v808 = nil;
        local v809 = nil;
        do
            local l_v807_0, l_v808_0, l_v809_0 = v807, v808, v809;
            local function v816(v813)
                -- upvalues: l_v808_0 (ref), l_v809_0 (ref), l_v807_0 (ref)
                if not v813:get_weapon_index() then
                    return;
                elseif v813:get_weapon_owner() then
                    return;
                else
                    local v814 = v813:get_origin();
                    if l_v808_0:dist(v814) > 128 then
                        return;
                    else
                        local v815 = l_v808_0:to(v814);
                        if math.deg(math.acos(l_v809_0:dot(v815) / v815:length())) > 15 then
                            return;
                        else
                            l_v807_0 = true;
                            return;
                        end;
                    end;
                end;
            end;
            v280.can_pick_up_a_weapon = function(v817, v818)
                -- upvalues: l_v808_0 (ref), l_v807_0 (ref), l_v809_0 (ref), v816 (ref)
                l_v808_0 = v818:get_eye_position();
                l_v807_0 = false;
                l_v809_0 = vector():angles(v817.view_angles:unpack());
                entity.get_entities(false, false, v816);
                local v819 = nil;
                l_v809_0 = nil;
                l_v808_0 = v819;
                return l_v807_0;
            end;
            v280.is_trying_to_interact = function(v820, v821)
                local v822 = v821:get_eye_position();
                local v823 = vector():angles(v820.view_angles:unpack());
                local v824 = utils.trace_line(v822, v822 + v823 * 128, v821, 1174421515);
                if not v824.entity then
                    return false;
                else
                    local v825 = v824.entity:get_classid();
                    if v825 == 40 or v825 == 275 or v825 == 83 then
                        return false;
                    else
                        return true;
                    end;
                end;
            end;
            local v826 = false;
            local v827 = nil;
            local function v829(v828)
                -- upvalues: v827 (ref), v826 (ref)
                if v827:distsqr(v828:get_origin()) < 3600 then
                    v826 = true;
                end;
            end;
            v280.can_defuse = function(v830)
                -- upvalues: v826 (ref), v827 (ref), v829 (ref)
                v826 = false;
                v827 = v830;
                entity.get_entities(129, false, v829);
                v827 = nil;
                return v826;
            end;
            local v831 = false;
            local v832 = nil;
            local v833 = nil;
            local function v838(v834)
                -- upvalues: v832 (ref), v833 (ref), v831 (ref)
                local v835 = v834:get_origin();
                v835.z = v835.z + 35.5;
                local v836 = v832:to(v835);
                local v837 = math.deg(math.acos(v833:dot(v836) / v836:length()));
                if v832:distsqr(v835) < 3600 and v837 < 40 then
                    v831 = true;
                end;
            end;
            v280.can_rescue = function(v839, v840)
                -- upvalues: v831 (ref), v832 (ref), v833 (ref), v838 (ref)
                v831 = false;
                v832 = v840:get_eye_position();
                v833 = vector():angles(v839.view_angles:unpack());
                entity.get_entities(97, false, v838);
                v832 = nil;
                v833 = nil;
                return v831;
            end;
        end;
        v807 = false;
        v808 = 0;
        v809 = ui.find("Aimbot", "Anti Aim", "Misc", "Leg Movement");
        v280.on_createmove = function(v841, v842, v843)
            -- upvalues: v807 (ref), v280 (ref), v600 (ref), v674 (ref), v593 (ref), v577 (ref), v671 (ref), v805 (ref), v804 (ref), v598 (ref), v806 (ref), v642 (ref), v566 (ref), v597 (ref), v647 (ref), v688 (ref)
            if v841.choked_commands == 0 then
                v807 = not v807;
            end;
            v280.reset();
            if v600:get() and v280.disable_anti_aim_on_warmup_on_create_move() then
                return;
            else
                if #v674:get() > 0 and not override_disable_fl then
                    v280.disable_fake_lag();
                end;
                if v593:get() == "Conditional" then
                    local v844 = v280.get_state_id(v841, v842, v843);
                    if not v577[v844]:get() then
                        v844 = 1;
                    end;
                    v280.handle_states(v844, v841);
                    v280.manual_yaw_base(v844);
                    if v671:get() then
                        v280.no_body_yaw(v844);
                    end;
                    if v577[8]:get() then
                        v805 = false;
                        if v841.in_use then
                            if not v804 then
                                v805 = true;
                            end;
                            v804 = true;
                        else
                            v804 = false;
                        end;
                        local v845 = v842:get_origin();
                        local l_m_bInBombZone_0 = v842.m_bInBombZone;
                        local l_m_iTeamNum_0 = v842.m_iTeamNum;
                        local v848 = v843:get_classid();
                        v841.in_use = false;
                        if v804 then
                            if l_m_iTeamNum_0 == 2 then
                                if v805 and l_m_bInBombZone_0 and v848 ~= 34 and not v598[8].ignore_bombsite_ref:get() then
                                    v841.in_use = true;
                                end;
                                if v848 == 34 then
                                    v841.in_use = true;
                                end;
                            end;
                            if l_m_iTeamNum_0 == 3 then
                                if v280.can_defuse(v845) then
                                    v280.handle_states(1, v841);
                                    v841.in_use = true;
                                end;
                                local v849 = v280.can_rescue(v841, v842);
                                if v805 and v849 then
                                    v806 = true;
                                end;
                                if not v849 then
                                    v806 = false;
                                end;
                                if v806 then
                                    v841.in_use = true;
                                end;
                            end;
                            if v805 and v280.can_pick_up_a_weapon(v841, v842) then
                                v841.in_use = true;
                            end;
                            if v805 and v280.is_trying_to_interact(v841, v842) then
                                v841.in_use = true;
                            end;
                        end;
                    end;
                elseif v593:get() == "Classic Jitter" then
                    local v850 = v280.get_state_id2(v841, v842, v843);
                    v280.handle_states5(v850, v841);
                    v280.manual_yaw_base(v850);
                    if v671:get() then
                        v280.no_body_yaw(v850);
                    end;
                    v805 = false;
                    if v841.in_use then
                        if not v804 then
                            v805 = true;
                        end;
                        v804 = true;
                    else
                        v804 = false;
                    end;
                    local v851 = v842:get_origin();
                    local l_m_bInBombZone_1 = v842.m_bInBombZone;
                    local l_m_iTeamNum_1 = v842.m_iTeamNum;
                    local v854 = v843:get_classid();
                    v841.in_use = false;
                    if v804 then
                        if l_m_iTeamNum_1 == 2 then
                            if v805 and l_m_bInBombZone_1 and v854 ~= 34 and not v598[8].ignore_bombsite_ref:get() then
                                v841.in_use = true;
                            end;
                            if v854 == 34 then
                                v841.in_use = true;
                            end;
                        end;
                        if l_m_iTeamNum_1 == 3 then
                            if v280.can_defuse(v851) then
                                v280.handle_states(1, v841);
                                v841.in_use = true;
                            end;
                            local v855 = v280.can_rescue(v841, v842);
                            if v805 and v855 then
                                v806 = true;
                            end;
                            if not v855 then
                                v806 = false;
                            end;
                            if v806 then
                                v841.in_use = true;
                            end;
                        end;
                        if v805 and v280.can_pick_up_a_weapon(v841, v842) then
                            v841.in_use = true;
                        end;
                        if v805 and v280.is_trying_to_interact(v841, v842) then
                            v841.in_use = true;
                        end;
                    end;
                elseif v593:get() == "Delayed Jitter" then
                    local v856 = v280.get_state_id2(v841, v842, v843);
                    v280.handle_states8(v856, v841);
                    v280.manual_yaw_base(v856);
                    if v671:get() then
                        v280.no_body_yaw(v856);
                    end;
                    v805 = false;
                    if v841.in_use then
                        if not v804 then
                            v805 = true;
                        end;
                        v804 = true;
                    else
                        v804 = false;
                    end;
                    local v857 = v842:get_origin();
                    local l_m_bInBombZone_2 = v842.m_bInBombZone;
                    local l_m_iTeamNum_2 = v842.m_iTeamNum;
                    local v860 = v843:get_classid();
                    v841.in_use = false;
                    if v804 then
                        if l_m_iTeamNum_2 == 2 then
                            if v805 and l_m_bInBombZone_2 and v860 ~= 34 and not v598[8].ignore_bombsite_ref:get() then
                                v841.in_use = true;
                            end;
                            if v860 == 34 then
                                v841.in_use = true;
                            end;
                        end;
                        if l_m_iTeamNum_2 == 3 then
                            if v280.can_defuse(v857) then
                                v280.handle_states(1, v841);
                                v841.in_use = true;
                            end;
                            local v861 = v280.can_rescue(v841, v842);
                            if v805 and v861 then
                                v806 = true;
                            end;
                            if not v861 then
                                v806 = false;
                            end;
                            if v806 then
                                v841.in_use = true;
                            end;
                        end;
                        if v805 and v280.can_pick_up_a_weapon(v841, v842) then
                            v841.in_use = true;
                        end;
                        if v805 and v280.is_trying_to_interact(v841, v842) then
                            v841.in_use = true;
                        end;
                    end;
                else
                    v280.get_state_id(v841, v842, v843);
                    v280.manual_yaw_base(v280.last_state_id);
                    if v671:get() then
                        v280.no_body_yaw(v280.last_state_id);
                    end;
                    v280.freestanding(v280.last_state_id);
                    v280.extended();
                    v280.anti_backstab();
                end;
                rage.antiaim:override_hidden_yaw_offset(0);
                v280.force_lc(v841, v593:get());
                local v862 = false;
                local v863 = rage.antiaim:get_target(true);
                if v642:get("Freestanding") and v863 and v566.freestanding_ref:get_override() and math.abs(math.normalize_yaw(rage.antiaim:get_target() - rage.antiaim:get_target(true))) > 5 then
                    v862 = true;
                end;
                if v642:get("Manual Yaw Base") and v597:get() ~= "Disabled" then
                    v862 = true;
                end;
                if #v647 > 0 then
                    v280.safe_head(v841, v842, v843);
                end;
                if not v862 then
                    v280.run_hidden();
                end;
                if v688:get() then
                    v280.automatic_exploit(v842, v843);
                end;
                return;
            end;
        end;
    end)();
    local v864 = nil;
    (function()
        -- upvalues: v289 (ref), v864 (ref), l_events_0 (ref), v52 (ref), v8 (ref), v464 (ref), v0 (ref), v280 (ref), v49 (ref)
        v289.tab("Visuals");
        v289.sub_tab("Visuals", "Main");
        v289.group("Visuals", "Main", "Main");
        v289.group("Visuals", "Main", "Indicators");
        v289.group("Visuals", "Main", "Logs", 1);
        v864 = {
            enabled_ref = v289.switch("visuals", "main", "main", "Enable Visuals")
        };
        l_events_0.override_view:set(function(v865)
            -- upvalues: v864 (ref)
            v864.fov = v865.fov;
        end);
        local v866 = nil;
        local v868 = v289.switch("visuals", "main", "main", "Better Scope Overlay", function()
            -- upvalues: v864 (ref)
            return v864.enabled_ref:get();
        end):set_callback(function(v867)
            -- upvalues: v866 (ref)
            v866 = v867:get();
        end, true);
        local v869 = v289.sub_slider("visuals", "main", "main", "Better Scope Overlay", "Line", nil, 0, 100, 20, 1);
        local v870 = v289.sub_slider("visuals", "main", "main", "Better Scope Overlay", "Gap", nil, 0, 100, 1, 1);
        local v871 = v289.sub_slider("visuals", "main", "main", "Better Scope Overlay", "Aspect Ratio", nil, 0, 100);
        local v872 = v289.sub_combo("visuals", "main", "main", "Better Scope Overlay", "Spread Based", nil, {
            [1] = "Disabled", 
            [2] = "Inaccuracy", 
            [3] = "Accuracy Penalty"
        });
        local v873 = v289.sub_selectable("visuals", "main", "main", "Better Scope Overlay", "Exclude Lines", nil, {
            [1] = "Left", 
            [2] = "Top", 
            [3] = "Right", 
            [4] = "Bottom"
        });
        local v874 = v289.sub_color_picker("visuals", "main", "main", "Better Scope Overlay", "Color", color(100, 100, 110, 255));
        local v875 = 0;
        local v876 = ui.find("visuals", "world", "main", "override zoom", "scope overlay");
        do
            local l_v869_0, l_v870_0, l_v871_0, l_v872_0, l_v873_0, l_v874_0, l_v875_0, l_v876_0 = v869, v870, v871, v872, v873, v874, v875, v876;
            local function v885()
                -- upvalues: l_v873_0 (ref), l_v875_0 (ref)
                if l_v873_0:get() ~= 15 then
                    l_v875_0 = l_v873_0:get();
                else
                    l_v873_0:set(l_v875_0);
                end;
            end;
            v868:set_callback(function()
                -- upvalues: l_v876_0 (ref)
                l_v876_0:override();
            end);
            v864.enabled_ref:set_callback(function()
                -- upvalues: l_v876_0 (ref)
                l_v876_0:override();
            end);
            l_v873_0:set_callback(v885);
            v885();
            l_v872_0:tooltip("\194\183 Appends the radius of the spread to both gap and size.");
            local v886 = 0;
            local v887 = 1.1920929E-7;
            local v888 = 0;
            local v889 = 0;
            local v890 = 0;
            v864.better_scope_overlay = function(v891)
                -- upvalues: l_v876_0 (ref), l_v869_0 (ref), l_v870_0 (ref), l_v871_0 (ref), v289 (ref), v888 (ref), v889 (ref), v890 (ref), v886 (ref), l_v874_0 (ref), v52 (ref), l_v872_0 (ref), v864 (ref), v887 (ref), l_v873_0 (ref)
                l_v876_0:override();
                if not v891 then
                    return;
                else
                    local v892 = l_v869_0:get() / 100;
                    local v893 = l_v870_0:get() / 100;
                    local v894 = l_v871_0:get() / 100;
                    local l_frametime_0 = v289.frametime;
                    local v896 = l_frametime_0 * 15;
                    v888 = v888 + (v892 - v888) * v896;
                    v889 = v889 + (v893 - v889) * v896;
                    v890 = v890 + (v894 - v890) * v896;
                    local v897 = render.screen_size();
                    local v898 = v897 / 2;
                    local v899 = v891:get_player_weapon();
                    if not v899 then
                        return;
                    else
                        local _ = v899:get_classid();
                        l_v876_0:override("Remove All");
                        local l_m_bIsScoped_0 = v891.m_bIsScoped;
                        if l_m_bIsScoped_0 then
                            v886 = math.min(1, v886 + l_frametime_0 * 3);
                        else
                            v886 = math.max(0, v886 - l_frametime_0 * 10);
                        end;
                        local v902, v903, v904, v905 = l_v874_0:get():unpack();
                        if not l_m_bIsScoped_0 or not v52.circ_out(v886, 0, 1, 1) then
                            local _ = v52.circ_in(v886, 0, 1, 1);
                        end;
                        local _ = v888;
                        local _ = v889;
                        local v909 = math.ceil(v897.y * 0.5 * v888);
                        local v910 = math.ceil(v909 + v897.x * 0.25 * v890 * v888);
                        local v911 = math.ceil(v897.y * 0.5 * v889);
                        local v912 = math.ceil(v911 + v897.x * 0.25 * v890 * v889);
                        if l_v872_0:get() ~= "Disabled" then
                            local v913 = l_v872_0:get() == "Inaccuracy" and v899:get_inaccuracy() or v899.m_fAccuracyPenalty;
                            local v914 = v899:get_spread();
                            if v913 and v914 then
                                local v915 = math.ceil((v913 + v914) * 320 / (math.tan((math.rad(v864.fov or 90) or 1) * 0.5) + v887));
                                local v916 = v909 + v915;
                                local v917 = v910 + v915;
                                local v918 = v911 + v915;
                                v912 = v912 + v915;
                                v911 = v918;
                                v910 = v917;
                                v909 = v916;
                            end;
                        end;
                        local v919 = color(v902, v903, v904, v905 * v886);
                        local v920 = color(v902, v903, v904, 0);
                        if not l_v873_0:get(3) then
                            render.gradient(vector(v898.x + v912 + 1, v898.y), vector(v898.x + v910 + 1, v898.y + 1), v919, v920, v919, v920);
                        end;
                        if not l_v873_0:get(4) then
                            render.gradient(vector(v898.x, v898.y + v911 + 1), vector(v898.x + 1, v898.y + v909 + 1), v919, v919, v920, v920);
                        end;
                        if not l_v873_0:get(1) then
                            render.gradient(vector(v898.x - v912, v898.y), vector(v898.x - v910, v898.y + 1), v919, v920, v919, v920);
                        end;
                        if not l_v873_0:get(2) then
                            render.gradient(vector(v898.x, v898.y - v911), vector(v898.x + 1, v898.y - v909), v919, v919, v920, v920);
                        end;
                        return;
                    end;
                end;
            end;
        end;
        v868 = nil;
        v289.switch("visuals", "main", "main", "Hit Marker", function()
            -- upvalues: v864 (ref)
            return v864.enabled_ref:get();
        end):set_callback(function(v921)
            -- upvalues: v868 (ref)
            v868 = v921:get();
        end, true):tooltip("\194\183 Draws a visual clue indicating that you have hit the target.");
        v870 = v289.sub_switch("visuals", "main", "main", "Hit Marker", "Screen Marker");
        v871 = v289.sub_sub_color_picker("visuals", "main", "main", "Hit Marker", "Screen Marker", "Screen Marker Color");
        v871:set(color(255, 230));
        v872 = v289.sub_switch("visuals", "main", "main", "Hit Marker", "World Marker");
        v873 = v289.sub_sub_color_picker("visuals", "main", "main", "Hit Marker", "World Marker", "World Marker Color");
        v873:set(color(255, 230));
        v874 = false;
        do
            local l_v870_1, l_v871_1, l_v872_1, l_v873_1, l_v874_1, l_v875_1, l_v876_1 = v870, v871, v872, v873, v874, v875, v876;
            l_v872_1:set_callback(function(v929)
                -- upvalues: l_v874_1 (ref)
                l_v874_1 = v929:get();
            end, true);
            l_v875_1 = false;
            v289.sub_switch("visuals", "main", "main", "Hit Marker", "Damage Marker"):set_callback(function(v930)
                -- upvalues: l_v875_1 (ref)
                l_v875_1 = v930:get();
            end, true);
            l_v876_1 = nil;
            v289.sub_sub_color_picker("visuals", "main", "main", "Hit Marker", "Damage Marker"):set_callback(function(v931)
                -- upvalues: l_v876_1 (ref)
                l_v876_1 = v931:get();
            end, true);
            local v932 = nil;
            v289.sub_color_picker("visuals", "main", "main", "Hit Marker", "Headshot", function()
                -- upvalues: l_v875_1 (ref)
                return l_v875_1;
            end):set_callback(function(v933)
                -- upvalues: v932 (ref)
                v932 = v933:get();
            end, true);
            local v934 = v289.sub_slider("visuals", "main", "main", "Hit Marker", "Duration", function()
                -- upvalues: l_v872_1 (ref)
                return l_v872_1:get();
            end, 1, 10, 1, 1);
            local v935 = 0;
            local v936 = {};
            local v937 = {};
            local v938 = {
                [1] = {
                    [1] = 0, 
                    [2] = 1
                }, 
                [2] = {
                    [1] = 4, 
                    [2] = 5, 
                    [3] = 6
                }, 
                [3] = {
                    [1] = 2, 
                    [2] = 3
                }, 
                [4] = {
                    [1] = 13, 
                    [2] = 15, 
                    [3] = 16
                }, 
                [5] = {
                    [1] = 14, 
                    [2] = 17, 
                    [3] = 18
                }, 
                [6] = {
                    [1] = 7, 
                    [2] = 9, 
                    [3] = 11
                }, 
                [7] = {
                    [1] = 8, 
                    [2] = 10, 
                    [3] = 12
                }
            };
            v864.hitmarker_on_player_hurt = function(v939)
                -- upvalues: v935 (ref), l_v872_1 (ref), l_v875_1 (ref), v938 (ref), v936 (ref), v937 (ref)
                local v940 = entity.get_local_player();
                if not v940 then
                    return;
                else
                    local v941 = entity.get(v939.userid, true);
                    local v942 = entity.get(v939.attacker, true);
                    if v941 == v942 or v942 ~= v940 then
                        return;
                    elseif not v941 then
                        return;
                    else
                        v939.hitgroup = v939.hitgroup >= 1 and v939.hitgroup <= 7 and v939.hitgroup or 3;
                        v935 = globals.realtime;
                        if l_v872_1:get() or l_v875_1 then
                            local l_huge_2 = math.huge;
                            local v944 = nil;
                            for _, v946 in pairs(v938[v939.hitgroup]) do
                                local v947 = v941:get_hitbox_position(v946);
                                for _, v949 in ipairs(v936) do
                                    local l_origin_0 = v949.origin;
                                    local v951 = l_origin_0:dist(v947);
                                    if v951 < l_huge_2 then
                                        v944 = l_origin_0;
                                        l_huge_2 = v951;
                                    end;
                                end;
                            end;
                            if not v944 or v941:is_dormant() then
                                v944 = v941:get_origin();
                                v944.z = v944.z + 40;
                            end;
                            v937[#v937 + 1] = {
                                origin = v944, 
                                time = v935, 
                                dmg = v939.dmg_health, 
                                hitgroup = v939.hitgroup
                            };
                            v936 = {};
                        end;
                        return;
                    end;
                end;
            end;
            v864.hitmarker_on_bullet_impact = function(v952)
                -- upvalues: l_v872_1 (ref), l_v875_1 (ref), v936 (ref)
                if not l_v872_1:get() and not l_v875_1 then
                    return;
                else
                    local v953 = entity.get_local_player();
                    if not v953 then
                        return;
                    elseif entity.get(v952.userid, true) ~= v953 then
                        return;
                    else
                        v936[#v936 + 1] = {
                            realtime = globals.realtime, 
                            origin = vector(v952.x, v952.y, v952.z)
                        };
                        return;
                    end;
                end;
            end;
            v864.hitmarker_on_player_blind = function(v954)
                -- upvalues: l_v870_1 (ref), v935 (ref)
                if not l_v870_1:get() then
                    return;
                else
                    local v955 = entity.get_local_player();
                    if not v955 then
                        return;
                    else
                        local v956 = entity.get(v954.userid, true);
                        local v957 = entity.get(v954.attacker, true);
                        if v956 == v957 or v957 ~= v955 then
                            return;
                        elseif not v956 then
                            return;
                        else
                            v935 = globals.realtime;
                            return;
                        end;
                    end;
                end;
            end;
            local function v963(v958, v959, v960)
                local v961 = color(0, v960.a * 0.5);
                local v962 = v959 * 2;
                render.line(vector(v958.x - v962 - 1, v958.y - v962 - 1), vector(v958.x - (v959 - 1), v958.y - (v959 - 1)), v961);
                render.line(vector(v958.x - v962 - 1, v958.y + v962 + 1), vector(v958.x - (v959 - 1), v958.y + (v959 + 1)), v961);
                render.line(vector(v958.x + v962 + 1, v958.y - v962 - 1), vector(v958.x + (v959 + 1), v958.y - (v959 - 1)), v961);
                render.line(vector(v958.x + v962 + 1, v958.y + v962 + 1), vector(v958.x + (v959 + 1), v958.y + (v959 + 1)), v961);
                render.line(vector(v958.x - v962, v958.y - v962), vector(v958.x - v959, v958.y - v959), v960);
                render.line(vector(v958.x - v962, v958.y + v962), vector(v958.x - v959, v958.y + v959), v960);
                render.line(vector(v958.x + v962, v958.y - v962), vector(v958.x + v959, v958.y - v959), v960);
                render.line(vector(v958.x + v962, v958.y + v962), vector(v958.x + v959, v958.y + v959), v960);
            end;
            v864.hitmarker_on_render = function(v964)
                -- upvalues: l_v870_1 (ref), v935 (ref), l_v871_1 (ref), v52 (ref), v963 (ref), l_v874_1 (ref), l_v875_1 (ref), v934 (ref), l_v873_1 (ref), v937 (ref), l_v876_1 (ref), v932 (ref)
                if not v964 then
                    return;
                elseif not v964:is_alive() then
                    return;
                else
                    local l_realtime_0 = globals.realtime;
                    if l_v870_1:get() then
                        local v966 = l_realtime_0 - v935;
                        if v966 < 0.4 then
                            local v967 = l_v871_1:get();
                            local v968 = 1 - math.max(0, math.min(1, v966 * 2.5));
                            local v969 = v52.cubic_out(v968, 0, 1, 1);
                            v967.a = v967.a * v969;
                            local v970 = render.screen_size() * 0.5;
                            v963(v970, 5, v967);
                        end;
                    end;
                    if l_v874_1 or l_v875_1 then
                        local v971 = v934:get();
                        local v972 = l_v873_1:get();
                        for v973, v974 in ipairs(v937) do
                            local v975 = v974.origin:to_screen();
                            if v975 then
                                local v976 = l_realtime_0 - v974.time;
                                if v971 - v976 + 0.4 <= 0 then
                                    table.remove(v937, v973);
                                else
                                    local v977 = 1 - math.max(0, math.min(1, (v976 - v971) * 2.5));
                                    local v978 = v52.cubic_out(v977, 0, 1, 1);
                                    local v979 = v972:clone();
                                    v979.a = v979.a * v978;
                                    if l_v874_1 then
                                        v963(v975, 3, v979);
                                    end;
                                    local v980 = v974.origin:clone();
                                    v980.z = v980.z + v976 * 60;
                                    local v981 = l_v876_1:clone();
                                    if v974.hitgroup == 1 then
                                        v981 = color(v932.r, v932.g, v932.b, v981.a);
                                    end;
                                    v981.a = v981.a * (1 - math.max(0, math.min(100, v974.origin:dist(v980)) * 0.01));
                                    local v982 = v980:to_screen();
                                    if v982 and l_v875_1 then
                                        render.text(1, v982, v981, "c", v974.dmg);
                                    end;
                                end;
                            end;
                        end;
                    end;
                    return;
                end;
            end;
            v864.hitmarker_on_level_init = function()
                -- upvalues: v935 (ref), v936 (ref), v937 (ref)
                v935 = 0;
                v936 = {};
                v937 = {};
            end;
        end;
        v869 = nil;
        v870 = nil;
        v871 = function()
            -- upvalues: v864 (ref)
            return v864.enabled_ref:get();
        end;
        v872 = ui.find("Miscellaneous", "Main", "Other", "Log Events");
        v870 = v289.switch("visuals", "main", "logs", "Enable Logs", v871):set(true);
        do
            local l_v871_2, l_v872_2, l_v873_2, l_v874_2, l_v875_2, l_v876_2 = v871, v872, v873, v874, v875, v876;
            v870:set_callback(function()
                -- upvalues: l_v872_2 (ref)
                l_v872_2:override();
            end);
            l_v873_2 = nil;
            l_v874_2 = nil;
            v289.sub_color_picker("visuals", "main", "logs", "enable logs", "test", color("#FFBC80FF")):set_callback(function(v989)
                -- upvalues: l_v873_2 (ref), l_v874_2 (ref)
                l_v873_2 = v989:get();
                l_v874_2 = l_v873_2;
            end, true);
            l_v875_2 = function()
                -- upvalues: l_v871_2 (ref), v870 (ref)
                return l_v871_2() and v870:get();
            end;
            l_v876_2 = v289.selectable("visuals", "main", "logs", "Events", l_v875_2, {
                [1] = "Damage Dealt", 
                [2] = "Purchases", 
                [3] = "Aimbot"
            });
            local v990 = v289.selectable("visuals", "main", "logs", "Style", l_v875_2, {
                [1] = "On Screen", 
                [2] = "Console Panel"
            });
            local v991 = v289.switch("visuals", "main", "logs", "Glow", l_v875_2);
            local function _()
                -- upvalues: l_v875_2 (ref), v990 (ref)
                return l_v875_2() and v990:get("On Screen");
            end;
            local v993 = 1;
            local v994 = {
                Normal = "d", 
                Small = "o", 
                Monospace = "d"
            };
            local v995 = {};
            local _ = {};
            local v997 = nil;
            local v998 = "Default";
            local v999 = "Centered";
            local v1000 = 0.5;
            local v1001 = 0.8;
            local v1002 = 6;
            local v1003 = 6;
            local v1004 = 0;
            v289.log = function(v1005, v1006)
                -- upvalues: v990 (ref), v1004 (ref), v997 (ref), v998 (ref), v995 (ref), l_v872_2 (ref)
                local v1008 = v1005:gsub("\a(%x%x%x%x%x%x%x%x)", function(v1007)
                    if v1007 == "FFFFFFFF" then
                        return "\aC5CAD0FF";
                    else
                        return "\a" .. v1007;
                    end;
                end);
                if v1006 ~= false then
                    print_raw("\aBC838300chimera \a888888FF\194\183 \aC5CAD0FF" .. v1008);
                    if v1006 == true then
                        return;
                    end;
                end;
                if v990:get("On Screen") then
                    v1004 = v1004 + 1;
                    if v997 ~= "Small" then
                        if v998 == "Upper" then
                            v1005 = v1005:upper();
                        elseif v998 == "Lower" then
                            v1005 = v1005:lower();
                        end;
                    else
                        v1005 = v1005:gsub(" ", "  "):upper();
                    end;
                    v995[#v995 + 1] = {
                        time = -1, 
                        pct = 0, 
                        offset = -1, 
                        text = v1005, 
                        id = v1004
                    };
                    table.sort(v995, function(v1009, v1010)
                        return v1009.id > v1010.id;
                    end);
                end;
                l_v872_2:override();
                if v990:get("Console Panel") then
                    l_v872_2:override({});
                    print_dev(v1005);
                end;
            end;
            v289.log(string.format("Welcome, \a%s%s\aFFFFFFFF!", l_v874_2:to_hex(), common.get_username()));
            local v1011 = {
                [0] = "generic", 
                [1] = "head", 
                [2] = "chest", 
                [3] = "stomach", 
                [4] = "left arm", 
                [5] = "right arm", 
                [6] = "left leg", 
                [7] = "right leg", 
                [8] = "neck", 
                [9] = nil, 
                [10] = "gear"
            };
            local v1012 = {
                hegrenade = "Naded", 
                taser = "Tased", 
                knife = "Knifed", 
                inferno = "Mollied"
            };
            v864.logs_on_player_hurt = function(v1013)
                -- upvalues: l_v876_2 (ref), v1011 (ref), v1012 (ref), l_v874_2 (ref), l_v873_2 (ref), v289 (ref)
                if not l_v876_2:get("Damage Dealt") then
                    return;
                else
                    local v1014 = entity.get_local_player();
                    if not v1014 then
                        return;
                    else
                        local l_userid_0 = v1013.userid;
                        local l_attacker_0 = v1013.attacker;
                        if l_userid_0 == l_attacker_0 then
                            return;
                        else
                            local v1017 = entity.get(l_userid_0, true);
                            if v1014 ~= entity.get(l_attacker_0, true) then
                                return;
                            elseif not v1017 then
                                return;
                            else
                                local v1018 = v1011[v1013.hitgroup] or "GENERIC";
                                local v1019 = v1012[v1013.weapon] or "Hit";
                                local v1020 = ({
                                    [1] = l_v874_2, 
                                    [4] = l_v873_2, 
                                    [5] = l_v873_2, 
                                    [6] = l_v873_2, 
                                    [7] = l_v873_2
                                })[v1013.hitgroup] or l_v874_2:lerp(l_v873_2, 0.5);
                                local v1021 = math.clamp(v1013.dmg_health, 0, 100) * 0.01;
                                local v1022 = math.clamp(v1013.health, 0, 100) * 0.01;
                                local v1023 = l_v873_2:lerp(l_v874_2, v1021);
                                local v1024 = l_v873_2:lerp(l_v874_2, v1022);
                                local v1025 = string.format("\aFFFFFFFF%s \a%s%s%s \aFFFFFFFFfor \a%s%d damage \aFFFFFFFF(\a%s%d health remaining\aFFFFFFFF)", v1019, l_v874_2:to_hex(), v1017:get_name():sub(1, 32), v1019 == "Hit" and " \aFFFFFFFFin the \a" .. v1020:to_hex() .. v1018 or "", v1023:to_hex(), v1013.dmg_health, v1024:to_hex(), v1013.health);
                                v289.log(v1025, false);
                                return;
                            end;
                        end;
                    end;
                end;
            end;
            local _ = {
                [82] = true, 
                [85] = true, 
                [81] = true, 
                [89] = true, 
                [18] = true, 
                [87] = true, 
                [8] = true, 
                [86] = true, 
                [83] = true, 
                [11] = true, 
                [80] = true, 
                [84] = true, 
                [88] = true
            };
            local v1027 = {
                [0] = "generic", 
                [1] = "head", 
                [2] = "chest", 
                [3] = "stomach", 
                [4] = "left arm", 
                [5] = "right arm", 
                [6] = "left leg", 
                [7] = "right leg", 
                [8] = "neck", 
                [9] = nil, 
                [10] = "gear"
            };
            local v1028 = {
                correction = "resolver"
            };
            l_events_0.aim_ack:set(function(v1029)
                -- upvalues: v864 (ref), v870 (ref), l_v876_2 (ref), l_v873_2 (ref), v1028 (ref), v1027 (ref), v289 (ref)
                if not v864.enabled_ref:get() then
                    return;
                elseif not v870:get() then
                    return;
                elseif not l_v876_2:get("Aimbot") then
                    return;
                else
                    local v1030 = l_v873_2:to_hex();
                    if v1029.state then
                        local v1031 = v1028[v1029.state] or v1029.state;
                        local v1032 = string.format("Missed shot at \a%s%s\aFFFFFFFF's \a%s%s\aFFFFFFFF(\a%s%d%%\aFFFFFFFF) due to \a%s%s \aFFFFFFFF(dmg: \a%s%d\aFFFFFFFF | history: \a%s%d\aFFFFFFFF)", v1030, v1029.target:get_name(), v1030, v1027[v1029.wanted_hitgroup], v1030, v1029.hitchance, v1030, v1031, v1030, v1029.wanted_damage, v1030, v1029.backtrack);
                        v289.log(v1032, true);
                        v289.log(string.format("Missed shot due to \a%s%s\aFFFFFFFF", v1030, v1028[v1029.state] or v1029.state), false);
                    else
                        local _ = math.clamp(v1029.damage, 0, 100) * 0.01;
                        local v1034 = string.format("Hit \a%s%s\aFFFFFFFF's \a%s%s\aFFFFFFFF for \a%s%d\aFFFFFFFF(\a%s%d\aFFFFFFFF) \aFFFFFFFFaimed=\a%s%s\aFFFFFFFF(\a%s%d%%\aFFFFFFFF) (\a%s%d \aFFFFFFFFticks)", v1030, v1029.target:get_name():sub(1, 32), v1030, v1027[v1029.hitgroup], v1030, v1029.damage, v1030, v1029.wanted_damage, v1030, v1027[v1029.wanted_hitgroup], v1030, v1029.hitchance, v1030, v1029.backtrack);
                        v289.log(v1034, true);
                    end;
                    return;
                end;
            end);
            v864.logs_on_item_purchase = function(v1035)
                -- upvalues: l_v876_2 (ref), l_v874_2 (ref), l_v873_2 (ref), v289 (ref)
                if not v1035 then
                    return;
                elseif v1035 == nil then
                    return;
                elseif not l_v876_2 then
                    return;
                elseif l_v876_2 == nil then
                    return;
                elseif not l_v876_2:get("Purchases") then
                    return;
                else
                    local v1036 = entity.get(v1035.userid, true);
                    if not v1036 then
                        return;
                    elseif v1036 == nil then
                        return;
                    elseif not v1036:is_enemy() then
                        return;
                    elseif v1035.weapon == "unknown" or v1035.weapon == "weapon_unknown" then
                        return;
                    else
                        local v1037 = string.format("\a%s%s \aFFFFFFFFbought \a%s%s", l_v874_2:to_hex(), v1036:get_name():sub(1, 32), l_v873_2:to_hex(), string.match(v1035.weapon, "^.+_(.*)$") or v1035.weapon);
                        v289.log(v1037);
                        return;
                    end;
                end;
            end;
            v864.logs_on_render = function()
                -- upvalues: v289 (ref), v995 (ref), v1000 (ref), v1001 (ref), v990 (ref), v994 (ref), v997 (ref), v993 (ref), v1003 (ref), v1002 (ref), v52 (ref), v999 (ref), v991 (ref), l_v873_2 (ref)
                local l_frametime_1 = v289.frametime;
                local l_realtime_1 = globals.realtime;
                local l_v995_0 = v995;
                local v1041 = render.screen_size();
                local v1042 = vector(v1041.x * v1000, v1041.y * v1001);
                if v990:get("On Screen") then
                    local v1043 = v994[v997];
                    local v1044 = render.measure_text(v993, v1043, "Sample text").y * 1.04;
                    render.push_clip_rect(vector(0, v1042.y), vector(v1041.x, v1042.y + v1044 * v1003));
                    local v1045 = l_frametime_1 * 5;
                    local v1046 = l_frametime_1 * 2;
                    local v1047 = l_frametime_1 * 10;
                    local v1048 = 0;
                    for v1049, v1050 in ipairs(l_v995_0) do
                        if v1050.offset == -1 then
                            v1050.offset = v1048;
                        end;
                        if v1050.offset < v1048 then
                            v1050.offset = math.clamp(v1050.offset + v1047, nil, v1048);
                        elseif v1048 < v1050.offset then
                            v1050.offset = math.clamp(v1050.offset - v1047, v1048);
                        end;
                        local v1051 = false;
                        if v1050.time == -1 then
                            local v1052 = l_v995_0[v1049 + 1];
                            if v1052 then
                                if v1052.offset - v1050.offset > 0.5 then
                                    v1050.pct = math.clamp(v1050.pct + v1045, 0, 1);
                                end;
                            else
                                v1050.pct = math.clamp(v1050.pct + v1045, 0, 1);
                            end;
                            if v1050.pct == 1 then
                                v1050.time = l_realtime_1;
                            end;
                        else
                            if l_realtime_1 - v1050.time > v1002 then
                                v1050.pct = math.clamp(v1050.pct - v1046, 0, 1);
                                v1051 = true;
                            end;
                            if v1050.pct == 0 then
                                table.remove(l_v995_0, v1049);
                                goto label1 --[[  false, false  ]];
                            end;
                        end;
                        if v1050.offset >= v1003 then
                            table.remove(l_v995_0, v1049);
                        else
                            local v1053 = render.measure_text(v993, v1043, v1050.text);
                            local v1054 = v1051 and v52.quart_in(v1050.pct, 0, 1, 1) or v52.quart_out(v1050.pct, 0, 1, 1);
                            v1053.x = v1053.x * v1054;
                            local v1055 = vector(v1042.x, v1042.y + v1050.offset * v1044);
                            if v999 == "Centered" then
                                v1055 = vector(v1055.x - v1053.x * 0.5, v1055.y);
                            elseif v999 == "Right-Aligned" then
                                v1055 = vector(v1055.x - v1053.x, v1055.y);
                            end;
                            if v991:get() then
                                local v1056 = l_v873_2:lerp(color(), 0.5) * v1050.pct;
                                v1056.a = v1056.a * 0.2;
                                render.shadow(v1055 + vector(0, v1053.y * 0.5), v1055 + vector(v1053.x, v1053.y * 0.5), v1056, 50, 0);
                                v1056.a = v1056.a * 0.275;
                                render.rect(v1055 + vector(0, v1053.y * 0.5), v1055 + vector(v1053.x, v1053.y * 0.5), v1056);
                            end;
                            render.push_clip_rect(v1055, v1055 + v1053, true);
                            render.text(v993, v1055, color(255, 220 * v1054), v1043, v1050.text);
                            render.pop_clip_rect();
                            v1048 = v1048 + 1;
                        end;
                        ::label1::;
                    end;
                    render.pop_clip_rect();
                end;
            end;
        end;
        v871 = nil;
        v871 = v289.switch("visuals", "main", "indicators", "Enable Indicators", function()
            -- upvalues: v864 (ref)
            return v864.enabled_ref:get();
        end);
        v872 = function()
            -- upvalues: v864 (ref), v871 (ref)
            return v864.enabled_ref:get() and v871:get();
        end;
        v289.features_ref = v289.selectable("visuals", "main", "indicators", "500$ Indicators", v872, {
            [1] = "Safe Points", 
            [2] = "Body Aim", 
            [3] = "Fake Latency", 
            [4] = "Double Tap", 
            [5] = "Fake Duck", 
            [6] = "Freestanding", 
            [7] = "Hide Shots", 
            [8] = "Minimum Damage", 
            [9] = "Dormant Aimbot", 
            [10] = "Bomb Info", 
            [11] = "Defusing", 
            [12] = "Hit Chance Override", 
            [13] = "Fake Lag", 
            [14] = "Aimbot Stats", 
            [15] = "Flinching"
        });
        v873 = v289.features_ref;
        v874 = {};
        v875 = function(v1057, v1058, v1059, v1060, v1061, _)
            local v1063 = v1061 * v1060;
            render.rect(vector(0, 0), vector(20, v1061), color(0, 0, 0, 120));
            render.rect(vector(1, 0 + v1063 + 1), vector(19, 0 + v1063 + 1 + v1061 - v1063 - 3), color(v1057, v1058, v1059, 120));
        end;
        do
            local l_v873_3, l_v874_3, l_v875_3, l_v876_3 = v873, v874, v875, v876;
            v289.indicator = function(v1068, v1069, v1070, v1071)
                -- upvalues: l_v874_3 (ref)
                l_v874_3[#l_v874_3 + 1] = {
                    clr = v1068, 
                    text = v1069, 
                    pct = v1070 or -1, 
                    icon = v1071 or false
                };
            end;
            l_v876_3 = render.load_font("Calibri Bold", vector(25, 23.5, 0), "da");
            local v1072 = 0;
            local v1073 = 0;
            local v1074 = 0;
            local v1075 = 0;
            local v1076 = 0;
            local v1077 = "0-0-0-0-0";
            l_events_0.createmove:set(function(v1078)
                -- upvalues: v1072 (ref), v1076 (ref), v1075 (ref), v1074 (ref), v1073 (ref), v1077 (ref)
                if v1078.choked_commands <= v1072 then
                    v1076 = v1075;
                    v1075 = v1074;
                    v1074 = v1073;
                    v1073 = v1072;
                    v1077 = string.format("%d-%d-%d-%d-%d", v1072, v1073, v1074, v1075, v1076);
                end;
                v1072 = v1078.choked_commands;
            end);
            local _ = 5;
            local v1080 = nil;
            local v1081 = nil;
            local v1082 = nil;
            local v1083 = 3.125;
            l_events_0.bomb_beginplant:set(function(v1084)
                -- upvalues: v1080 (ref), v1081 (ref), v1082 (ref)
                local v1085 = entity.get_player_resource();
                if not v1085 then
                    return;
                else
                    local l_m_bombsiteCenterA_0 = v1085.m_bombsiteCenterA;
                    local l_m_bombsiteCenterB_0 = v1085.m_bombsiteCenterB;
                    local v1088 = entity.get(v1084.site);
                    if not v1088 then
                        return;
                    else
                        local v1089 = v1088.m_vecMins:lerp(v1088.m_vecMaxs, 0.5);
                        v1080 = v1089:distsqr(l_m_bombsiteCenterA_0) < v1089:distsqr(l_m_bombsiteCenterB_0) and "A" or "B";
                        v1081 = globals.curtime;
                        v1082 = entity.get(v1084.userid, true);
                        return;
                    end;
                end;
            end);
            local function v1090()
                -- upvalues: v1080 (ref), v1082 (ref)
                v1080 = nil;
                v1082 = nil;
            end;
            l_events_0.bomb_abortplant:set(v1090);
            l_events_0.bomb_planted:set(v1090);
            l_events_0.round_start:set(v1090);
            local function v1096(v1091, v1092)
                local v1093 = 0.5;
                local v1094 = 0.5;
                if v1092 > 0 then
                    local v1095 = v1091 * v1093;
                    if v1092 < (v1091 - v1095) * v1094 then
                        v1095 = v1091 - v1092 * (1 / v1094);
                    end;
                    v1091 = v1095;
                end;
                return v1091;
            end;
            local v1097 = ui.find("miscellaneous", "main", "other", "fake latency");
            local v1098 = ui.find("Aimbot", "Anti Aim", "Misc", "Fake Duck");
            local v1099 = ui.find("Aimbot", "Ragebot", "Safety", "Safe Points");
            local v1100 = ui.find("Aimbot", "Ragebot", "Safety", "Body Aim");
            local v1101 = ui.find("Aimbot", "Ragebot", "Safety", "Body Aim", "Disablers");
            local v1102 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
            local v1103 = ui.find("Aimbot", "Anti Aim", "Angles", "Freestanding");
            local v1104 = utils.get_vfunc("engine.dll", "VEngineClient014", 78, "void*(__thiscall*)(void*)");
            local v1105 = utils.get_vfunc(9, "float(__thiscall*)(void*, int)");
            local v1106 = utils.get_vfunc(10, "float(__thiscall*)(void*, int)");
            local _ = nil;
            local v1108 = 0;
            local v1109 = 0;
            l_events_0.aim_ack:set(function(v1110)
                -- upvalues: v1108 (ref), v1109 (ref)
                if v1110.state and v1110.state ~= "death" and v1110.state ~= "unregistered shot" and v1110.state ~= "player death" then
                    v1108 = v1108 + 1;
                else
                    v1109 = v1109 + 1;
                end;
            end);
            l_events_0.level_init:set(function()
                -- upvalues: v1108 (ref), v1109 (ref)
                v1108 = 0;
                v1109 = 0;
            end);
            local v1111 = render.load_image_from_file("materials/panorama/images/icons/ui/bomb_c4.svg", vector(32, 32));
            local v1112 = ui.find("Aimbot", "Ragebot", "Main", "Enabled", "Dormant Aimbot");
            local v1113 = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
            v864.indicators_on_render = function()
                -- upvalues: v8 (ref), l_v873_3 (ref), v1109 (ref), v1108 (ref), v289 (ref), v1077 (ref), v1097 (ref), v1104 (ref), v1105 (ref), v1106 (ref), v1098 (ref), v1113 (ref), v1102 (ref), v1099 (ref), v1100 (ref), v1101 (ref), v1112 (ref), v464 (ref), v1103 (ref), l_v875_3 (ref), v1082 (ref), v1081 (ref), v1083 (ref), v1080 (ref), v1096 (ref), l_v874_3 (ref), l_v876_3 (ref), v1111 (ref)
                local v1114 = render.screen_size();
                local l_curtime_0 = globals.curtime;
                local v1116 = entity.get_local_player();
                if not v1116 then
                    return;
                else
                    local v1117 = ffi.cast(ffi.typeof("$ *", v8), v1116[0]);
                    if v1117 == nil then
                        return;
                    else
                        local v1118 = v1117:get_model_ptr();
                        if v1118 == nil then
                            return;
                        else
                            local v1119 = v1117:get_anim_overlay(1, true);
                            local v1120 = v1117:get_anim_overlay(9, true);
                            local v1121 = v1117:get_anim_overlay(10, true);
                            local v1122 = 960;
                            local v1123 = 967;
                            local v1124 = 972;
                            local v1125 = 982;
                            local v1126 = v1118:get_sequence_activity(v1119.sequence);
                            local v1127 = v1118:get_sequence_activity(v1120.sequence);
                            local v1128 = v1118:get_sequence_activity(v1121.sequence);
                            local _ = v1126 == v1124 and v1119.weight > 0;
                            local _ = v1126 == v1123 and v1119.weight > 0;
                            local _ = v1127 == v1122 and v1120.weight > 0.3;
                            local v1132 = v1128 == v1125 and v1121.weight > 0;
                            if #l_v873_3:get() > 0 then
                                local v1133 = v1116:is_alive();
                                if l_v873_3:get("Aimbot Stats") and v1133 then
                                    local v1134 = v1109 / (v1109 + v1108);
                                    if v1134 ~= v1134 then
                                        v1134 = 0;
                                    end;
                                    if v1109 + v1108 > 0 then
                                        v289.indicator(color(255, 255, 255, 200), string.format("%d%%", v1134 * 100));
                                    end;
                                end;
                                if l_v873_3:get("Fake Lag") and v1133 then
                                    v289.indicator(color(255, 255, 255, 200), v1077);
                                end;
                                if l_v873_3:get("Flinching") and v1132 and v1133 then
                                    v289.indicator(color(255, 255, 255, 200), "FLINCH");
                                end;
                                local v1135 = v1097:get_override() or v1097:get();
                                if l_v873_3:get("Fake Latency") and v1135 > 0 and v1133 then
                                    local v1136 = v1104();
                                    if v1136 ~= nil then
                                        local v1137 = v1105(v1136, 0) + v1105(v1136, 1);
                                        local v1138 = v1106(v1136, 0);
                                        local v1139 = v1106(v1136, 1);
                                        local v1140 = v1137 / math.min(math.max(v1138 - v1135 * -0.001 + v1139, 0.001), 0.2);
                                        v1140 = math.clamp(v1140, 0, 1);
                                        local v1141 = nil;
                                        if v1140 >= 0.5 then
                                            v1141 = color(213, 197, 84, 255):lerp(color(145, 195, 25, 255), (v1140 - 0.5) * 2);
                                        else
                                            v1141 = color(250, 234, 232, 255):lerp(color(213, 197, 84, 255), v1140 * 2);
                                        end;
                                        v289.indicator(v1141, "PING");
                                    end;
                                end;
                                local v1142 = false;
                                if l_v873_3:get("Fake Duck") and (v1098:get_override() or v1098:get()) and v1133 then
                                    v289.indicator(color(255, 200), "DUCK");
                                    v1142 = true;
                                end;
                                if l_v873_3:get("Hide Shots") and (v1113:get_override() or v1113:get()) and v1133 and not v1102:get_override() and not v1102:get() and not v1142 then
                                    v289.indicator(color(255, 200), "OSAA");
                                end;
                                if l_v873_3:get("Double Tap") and (v1102:get_override() or v1102:get()) and v1133 and not v1142 then
                                    local v1143 = color(255, 0, 40, 200);
                                    if rage.exploit:get() == 1 then
                                        v1143 = color(255, 255, 255, 200);
                                    end;
                                    v289.indicator(v1143, "DT");
                                end;
                                if l_v873_3:get("Safe Points") and (v1099:get_override() or v1099:get()) == "Force" and v1133 then
                                    v289.indicator(color(255, 200), "SAFE");
                                end;
                                if l_v873_3:get("Body Aim") and (v1100:get_override() or v1100:get()) == "Force" and v1133 and #v1101:get() == 0 then
                                    v289.indicator(color(255, 200), "BODY");
                                end;
                                if l_v873_3:get("Minimum Damage") and v1133 then
                                    for _, v1145 in ipairs(ui.get_binds()) do
                                        if v1145.name == "Min. Damage" and v1145.active then
                                            v289.indicator(color(255, 255, 255, 200), "MD");
                                            break;
                                        end;
                                    end;
                                end;
                                if l_v873_3:get("Hit Chance Override") and v1133 then
                                    for _, v1147 in ipairs(ui.get_binds()) do
                                        if v1147.name == "Hit Chance" and v1147.active then
                                            v289.indicator(color(255, 255, 255, 200), "HC");
                                            break;
                                        end;
                                    end;
                                end;
                                if l_v873_3:get("Dormant Aimbot") then
                                    if v1112:get() then
                                        v289.indicator(color(255, 255, 255, 200), "DA");
                                    elseif v464.chimera_dormant == 1 then
                                        v289.indicator(color(255, 255, 255, 200), "DA");
                                    elseif v464.chimera_dormant == 2 then
                                        v289.indicator(color(145, 195, 25, 255), "DA");
                                    end;
                                end;
                                if l_v873_3:get("Freestanding") and (v1103:get_override() or v1103:get()) and v1133 then
                                    v289.indicator(color(255, 200), "FS");
                                end;
                                if l_v873_3:get("Defusing") then
                                    local v1148 = entity.get_entities(129)[1];
                                    if v1148 and v1148.m_hBombDefuser ~= nil then
                                        local v1149 = 1 - (10 - (v1148.m_flDefuseCountDown - globals.curtime)) * 0.1;
                                        if v1149 > 0 and v1149 < 1 then
                                            local v1150 = 0;
                                            local v1151 = 255;
                                            local v1152 = 0;
                                            if v1148.m_flDefuseCountDown - globals.curtime > v1148.m_flC4Blow - globals.curtime then
                                                local v1153 = 255;
                                                local v1154 = 0;
                                                v1152 = 0;
                                                v1151 = v1154;
                                                v1150 = v1153;
                                            end;
                                            l_v875_3(v1150, v1151, v1152, 1 - v1149, render.screen_size().y);
                                        end;
                                    end;
                                end;
                                do
                                    local l_v1133_0 = v1133;
                                    if l_v873_3:get("Bomb Info") then
                                        if v1082 then
                                            local v1156 = (l_curtime_0 - v1081) / v1083;
                                            if v1156 > 0 and v1156 < 1 and entity.get_game_rules().m_bBombPlanted ~= 1 then
                                                v289.indicator(color(252, 243, 105, 255), "" .. v1080, v1156, true);
                                            end;
                                        else
                                            local l_m_ArmorValue_0 = v1116.m_ArmorValue;
                                            local l_m_iHealth_0 = v1116.m_iHealth;
                                            do
                                                local l_l_m_ArmorValue_0_0, l_l_m_iHealth_0_0 = l_m_ArmorValue_0, l_m_iHealth_0;
                                                entity.get_entities("CPlantedC4", true, function(v1161)
                                                    -- upvalues: l_curtime_0 (ref), v289 (ref), v1116 (ref), v1096 (ref), l_l_m_ArmorValue_0_0 (ref), l_v1133_0 (ref), l_l_m_iHealth_0_0 (ref)
                                                    if v1161.m_bBombDefused then
                                                        return;
                                                    else
                                                        local l_m_flC4Blow_0 = v1161.m_flC4Blow;
                                                        local v1163 = v1161.m_nBombSite == 0 and "A" or "B";
                                                        if l_m_flC4Blow_0 - l_curtime_0 >= 0 then
                                                            v289.indicator(color(255, 255, 255, 200), string.format("%s - %.1fs", v1163, l_m_flC4Blow_0 - l_curtime_0), nil, true);
                                                            local v1164 = v1116:get_eye_position():dist(v1161:get_origin());
                                                            local v1165 = 500;
                                                            local v1166 = v1165 * 3.5;
                                                            v1165 = v1165 * math.exp(-(v1164 * v1164 / (v1166 * 2 / 3 * (v1166 / 3))));
                                                            v1165 = math.max(v1165, 0);
                                                            v1165 = v1096(v1165, l_l_m_ArmorValue_0_0);
                                                            if l_v1133_0 and v1165 >= 1 then
                                                                if v1165 < l_l_m_iHealth_0_0 then
                                                                    v289.indicator(color(252, 243, 105, 255), string.format("-%d HP", v1165));
                                                                else
                                                                    v289.indicator(color(255, 0, 50, 255), "FATAL");
                                                                end;
                                                            end;
                                                        end;
                                                        return;
                                                    end;
                                                end);
                                            end;
                                        end;
                                    end;
                                    local v1167 = vector(10, v1114.y - 350);
                                    local v1168 = 0;
                                    for _, v1170 in ipairs(l_v874_3) do
                                        local v1171 = render.measure_text(l_v876_3, "", v1170.text);
                                        local v1172 = v1171.y * 0.2;
                                        v1171.y = v1171.y * 1.166666;
                                        local v1173 = math.floor(v1171.x * 0.5) + 20;
                                        render.gradient(vector(v1167.x, v1167.y + v1168), vector(v1167.x + v1173, v1167.y + v1168 + v1171.y + 5), color(0, 0, 0, 0), color(0, 0, 0, 51), color(0, 0, 0, 0), color(0, 0, 0, 51));
                                        render.gradient(vector(v1167.x + v1173, v1167.y + v1168), vector(v1167.x + v1173 * 2, v1167.y + v1168 + v1171.y + 5), color(0, 0, 0, 51), color(0, 0, 0, 0), color(0, 0, 0, 51), color(0, 0, 0, 0));
                                        local v1174 = 0;
                                        if v1170.icon == true then
                                            v1174 = 37;
                                            render.texture(v1111, vector(v1167.x + 20, v1167.y + v1168 + 1), vector(32, 32), v1170.clr);
                                        end;
                                        render.text(l_v876_3, vector(v1167.x + 20 + v1174, v1167.y + 2 + v1168 + v1172), v1170.clr, "d", v1170.text);
                                        if v1170.pct ~= -1 then
                                            local v1175 = 10;
                                            render.circle_outline(vector(v1167.x + 17 + v1171.x + v1175 * 2 + v1174, v1167.y + v1168 + v1171.y * 0.5 + 3), color(0, 200), v1175, 0, 1, 5);
                                            render.circle_outline(vector(v1167.x + 17 + v1171.x + v1175 * 2 + v1174, v1167.y + v1168 + v1171.y * 0.5 + 3), color(255, 200), v1175 - 1, 0, v1170.pct, 3);
                                        end;
                                        v1168 = v1168 - (v1171.y + 13);
                                    end;
                                end;
                            end;
                            l_v874_3 = {};
                            return;
                        end;
                    end;
                end;
            end;
        end;
        v872 = nil;
        v873 = v289.switch("visuals", "main", "indicators", "Anti Aim Arrow", function()
            -- upvalues: v864 (ref), v871 (ref)
            return v864.enabled_ref:get() and v871:get();
        end):set_callback(function(v1176)
            -- upvalues: v872 (ref)
            v872 = v1176:get();
        end, true);
        v874 = nil;
        do
            local l_v874_4, l_v876_4 = v874, v876;
            v875 = v289.sub_slider("visuals", "main", "indicators", "Anti Aim Arrow", "Radius", nil, 10, 80, 15, 0.01, function(v1179)
                local v1180 = render.screen_size();
                if v1179 == 10 then
                    return "Min.";
                elseif v1179 == 80 then
                    return "Max.";
                else
                    return string.format("%dpx", v1180.y * 0.5 * (v1179 * 0.01));
                end;
            end):set_callback(function(v1181)
                -- upvalues: l_v874_4 (ref)
                l_v874_4 = v1181:get() * 0.01;
            end, true);
            l_v876_4 = nil;
            local _ = v289.sub_slider("visuals", "main", "indicators", "Anti Aim Arrow", "Size", nil, 0, 100, 20, 0.01, function(v1182)
                local v1183 = render.screen_size();
                return string.format("%dpx", v1183.y * 0.25 * math.map(v1182, 0, 100, 0.025, 0.3));
            end):set_callback(function(v1184)
                -- upvalues: l_v876_4 (ref)
                l_v876_4 = math.map(v1184:get() * 0.01, 0, 1, 0.025, 0.3);
            end, true);
            local v1186 = nil;
            local _ = v289.sub_color_picker("visuals", "main", "indicators", "Anti Aim Arrow", "A", color(255, 255, 255, 255)):set_callback(function(v1187)
                -- upvalues: v1186 (ref)
                v1186 = v1187:get();
            end, true);
            local v1189 = nil;
            local _ = v289.sub_color_picker("visuals", "main", "indicators", "Anti Aim Arrow", "B", color(87, 118, 255, 255)):set_callback(function(v1190)
                -- upvalues: v1189 (ref)
                v1189 = v1190:get();
            end, true);
            local v1192 = nil;
            local _ = v289.sub_color_picker("visuals", "main", "indicators", "Anti Aim Arrow", "Outline", color(0, 0, 0, 113)):set_callback(function(v1193)
                -- upvalues: v1192 (ref)
                v1192 = v1193:get();
            end, true);
            local v1195 = {};
            l_events_0.net_update_end:set(function()
                -- upvalues: v1195 (ref), v1186 (ref), v1189 (ref), v1192 (ref)
                if globals.choked_commands == 0 then
                    v1195 = {};
                    local v1196 = entity.get_local_player();
                    if not v1196 then
                        return;
                    else
                        local v1197 = v1196:get_anim_state();
                        v1195.real_rotation = {
                            yaw = rage.antiaim:get_rotation(), 
                            clr = {
                                [1] = v1186, 
                                [2] = v1189, 
                                [3] = v1192
                            }, 
                            side = math.normalize_yaw(rage.antiaim:get_rotation() - v1197.eye_yaw) > 0
                        };
                    end;
                end;
            end);
            v864.anti_aim_arrows_on_render = function(v1198)
                -- upvalues: v1195 (ref), l_v876_4 (ref), l_v874_4 (ref)
                if not v1198 then
                    return;
                elseif not v1198:is_alive() then
                    return;
                else
                    local l_y_0 = render.camera_angles().y;
                    local v1200 = render.screen_size() * 0.5;
                    for _, v1202 in pairs(v1195) do
                        local v1203 = math.normalize_yaw(v1202.yaw);
                        local v1204 = vector():angles(0, math.normalize_yaw(l_y_0 - v1203 - 90));
                        local v1205 = v1204:cross(vector(0, 0, 1));
                        local v1206 = v1200.y * l_v876_4;
                        local v1207 = v1200 + v1204 * math.max(v1206 * 0.5, v1200.y * l_v874_4 - v1206 * 0.5);
                        local v1208 = v1207 - v1205 * (v1206 * 0.3);
                        local v1209 = v1207 + v1205 * (v1206 * 0.3);
                        local v1210 = v1207 + v1204 * (v1206 * 0.5);
                        local v1211 = v1207 + v1204 * (v1206 * 0.35);
                        local v1212 = v1207 + v1204 * (v1206 * 0.125);
                        local v1213 = v1212 + v1205 * (v1206 * 0.04);
                        local v1214 = v1212 - v1205 * (v1206 * 0.04);
                        local _ = 1;
                        local v1216 = v1202.clr[1]:clone();
                        local v1217 = v1202.clr[2]:clone();
                        local v1218 = v1202.clr[3]:clone();
                        render.poly(v1202.side and v1217 or v1216, v1210, v1209, v1213, v1211);
                        render.poly(v1202.side and v1216 or v1217, v1210, v1208, v1214, v1211);
                        render.poly_line(v1218, v1210, v1209, v1213, v1211, v1214, v1208, v1210);
                    end;
                    return;
                end;
            end;
        end;
        v873 = nil;
        v873 = v289.switch("visuals", "main", "indicators", "Crosshair Indicators", function()
            -- upvalues: v864 (ref), v871 (ref)
            return v864.enabled_ref:get() and v871:get();
        end);
        v874 = v289.sub_switch("visuals", "main", "indicators", "crosshair indicators", "Minimum Damage");
        v875 = {};
        v876 = {};
        local v1219 = {};
        do
            local l_v874_5, l_v875_4, l_v876_5, l_v1219_0 = v874, v875, v876, v1219;
            v289.indicator2 = function(v1224, v1225, v1226, v1227)
                -- upvalues: l_v875_4 (ref)
                l_v875_4[v1224] = {
                    pct = 0, 
                    cur_size_x = -1, 
                    size_x = -1, 
                    pos = -1, 
                    prev_text = v1225, 
                    text = v1225, 
                    time = v1227 or -1, 
                    animation_pct = v1226 or 1, 
                    index = v1224
                };
            end;
            local v1228 = 2;
            local v1229 = v289.sub_combo("visuals", "main", "indicators", "Crosshair Indicators", "Positioning", nil, {
                [1] = "Normal", 
                [2] = "Centered", 
                [3] = "Auto"
            }):set("Auto");
            local v1230 = nil;
            local v1231 = nil;
            v289.sub_color_picker("visuals", "main", "indicators", "Crosshair Indicators", "Main Color"):set_callback(function(v1232)
                -- upvalues: v1230 (ref), v1231 (ref)
                v1230 = v1232:get();
                v1230.a = math.max(135, v1230.a);
                v1231 = v1230:clone();
                v1231.a = v1230.a * 0.5;
            end, true);
            local v1233 = nil;
            v289.sub_color_picker("visuals", "main", "indicators", "Crosshair Indicators", "Watermark Color", color("#FFD990FF")):set_callback(function(v1234)
                -- upvalues: v1233 (ref)
                v1233 = v1234:get();
                v1233.a = math.max(135, v1233.a);
            end, true);
            local v1235 = v289.sub_switch("visuals", "main", "indicators", "Crosshair Indicators", "Glow");
            local v1236 = 0;
            local v1237 = ui.find("Aimbot", "Ragebot", "Main", "Double Tap");
            local v1238 = ui.find("Aimbot", "Ragebot", "Main", "Hide Shots");
            local v1239 = ui.find("Aimbot", "Ragebot", "Selection", "Min. Damage");
            local v1240 = {
                [1] = nil, 
                [2] = "- STANDING -", 
                [3] = "- MOVING -", 
                [4] = "- SLOWWALK -", 
                [5] = "- CROUCH -", 
                [6] = "- AIR -", 
                [7] = "- AIR -", 
                [8] = "- LEGIT AA -"
            };
            local _ = ui.find("aimbot", "anti aim", "misc", "fake duck");
            local v1242 = ui.find("Aimbot", "Ragebot", "Main", "Enabled", "Dormant Aimbot");
            local v1243 = 1;
            local function v1259()
                -- upvalues: v52 (ref), v1233 (ref), v1243 (ref), v289 (ref), v0 (ref), v280 (ref), v1240 (ref), v49 (ref), v1238 (ref), v1237 (ref), v464 (ref), v1242 (ref)
                local v1244 = v52.linear(math.abs(globals.realtime % 1 - 0.5) * 2, 0, 1, 1);
                local v1245 = v1233:clone();
                v1245.a = v1245.a * v1244 * v1243;
                v289.indicator2("watermark", string.format("CHIMERA \a%s%s", v1245:to_hex(), v0 and "ALPHA" or "YAW"), 1, 1);
                if v280.last_state_id then
                    local v1246 = entity.get_local_player();
                    local v1247 = v1246:get_player_weapon();
                    local v1248 = entity.get_entities(129)[1];
                    if v1246 and v1246.m_bIsDefusing and v1248 then
                        v289.indicator2("state", "- DEFUSING -", math.map(v1248.m_flDefuseCountDown - globals.curtime, 0, v1248.m_flDefuseLength, 0, 1), 2);
                    elseif v1247 and v1247:get_classid() == 34 and v1247.m_bStartedArming then
                        v289.indicator2("state", "- PLANTING -", 1 - math.map(v1247.m_fArmedTime - globals.curtime, 0, 3, 0, 1), 2);
                    else
                        v289.indicator2("state", v1240[v280.last_state_id] or "- DEFAULT -", 1, 2);
                    end;
                end;
                local v1249 = rage.exploit:get();
                local v1250 = 0;
                local v1251 = v49.get_snapshot(local_player);
                if v1251 then
                    local v1252, v1253 = v1251.command.no_entry:unpack();
                    v1252 = math.map(v1252, 0, v1253, 0, 1);
                    if v1252 ~= v1252 then
                        v1252 = 0;
                    end;
                    if v1252 > 0 then
                        v1250 = v1252;
                    end;
                end;
                local _ = v52.cubic_out(v1249, 0, 1, 1);
                local v1255 = "WAITING";
                if v1249 > 0 then
                    v1255 = "CHARGING";
                end;
                if v1249 == 1 then
                    v1255 = "READY";
                end;
                local v1256 = color(255, 64, 64, 255):lerp(color(192, 255, 145, 255), v1249):to_hex();
                if v1238:get() then
                    v289.indicator2("exploits", string.format("HIDE \a%s%s", v1256, v1255), v1249, 3);
                end;
                if v1237:get() then
                    v289.indicator2("exploits", string.format("DT \a%s%s", v1256, v1255), v1249, 3);
                end;
                if v464.ideal_tick_ref:get() then
                    v289.indicator2("exploits", string.format("IDEAL TICK \a%s%s", v1256, v1255), rage.exploit:get(), 3);
                end;
                if v1250 > 0 then
                    v1255 = "ACTIVE";
                    v1256 = color(127, 255, 255):to_hex();
                    if v1237:get() then
                        v289.indicator2("exploits", string.format("DT \a%sACTIVE", v1256), 1, 3);
                        if v464.ideal_tick_ref:get() then
                            v289.indicator2("exploits", string.format("IDEAL TICK \a%sACTIVE", v1256), 1, 3);
                        end;
                    elseif v1238:get() then
                        v289.indicator2("exploits", string.format("HIDE \a%sACTIVE", v1256), 1, 3);
                    end;
                end;
                for _, v1258 in ipairs(ui.get_binds()) do
                    if v1258.name == "Hit Chance" and v1258.active then
                        v289.indicator2("hitchance", "HC", 1, 4);
                    elseif v1258.name == "Min. Damage" and v1258.active then
                        v289.indicator2("dmg", "DMG", 1, 5);
                    end;
                end;
                if v1242:get() then
                    v289.indicator2("dormant", "\aFFFFFF88DORMANT", 1, 6);
                end;
            end;
            local v1260 = ui.find("Visuals", "Players", "Self", "Chams", "Model", "Transparency");
            local v1261 = 0;
            l_events_0.createmove(function(v1262)
                -- upvalues: v1261 (ref)
                if v1262.in_score then
                    v1261 = globals.realtime;
                end;
            end);
            v864.handle_indicators = function()
                -- upvalues: v1260 (ref), v1261 (ref), v1243 (ref), v1230 (ref), v1231 (ref), v1259 (ref), l_v874_5 (ref), v1239 (ref), v1229 (ref), v1236 (ref), v52 (ref), l_v875_4 (ref), l_v876_5 (ref), l_v1219_0 (ref), v1228 (ref), v1235 (ref), v1233 (ref)
                local v1263 = entity.get_local_player();
                if not v1263 then
                    return;
                elseif not v1263:is_alive() then
                    return;
                else
                    local v1264 = v1263:get_player_weapon();
                    if not v1264 then
                        return;
                    else
                        if v1264:get_weapon_info().weapon_type == 9 and v1260:get("Grenades") or globals.realtime - v1261 < globals.tickinterval * 2 then
                            v1243 = math.max(0.25, math.min(1, v1243 - globals.exactframetime * 5));
                        else
                            v1243 = math.max(0.25, math.min(1, v1243 + globals.exactframetime * 5));
                        end;
                        local v1265 = v1230:clone();
                        v1265.a = v1265.a * v1243;
                        local v1266 = v1231:clone();
                        v1266.a = v1266.a * v1243;
                        v1259();
                        local v1267 = render.screen_size();
                        local v1268 = globals.exactframetime * 5;
                        local _ = globals.realtime;
                        local v1270 = v1267 * 0.5;
                        v1270.x = v1270.x + 12;
                        v1270.y = v1270.y - 20;
                        if l_v874_5:get() then
                            local v1271 = v1239:get_override() or v1239:get();
                            if v1271 == 0 then
                                v1271 = "AUTO";
                            end;
                            render.text(2, v1270, color(255, 255, 255, 255 * v1243), "", v1271);
                        end;
                        local v1272 = entity.get_local_player();
                        local v1273 = v1272 and v1272.m_bIsScoped or false;
                        local v1274 = v1229:get();
                        if v1274 == "Auto" then
                            if v1273 then
                                v1236 = math.max(0, math.min(1, v1236 - v1268));
                            else
                                v1236 = math.max(0, math.min(1, v1236 + v1268));
                            end;
                        elseif v1274 == "Normal" then
                            v1236 = math.max(0, math.min(1, v1236 - v1268));
                        else
                            v1236 = math.max(0, math.min(1, v1236 + v1268));
                        end;
                        local v1275 = v52.cubic_in_out(v1236, 0, 1, 1);
                        for v1276, v1277 in pairs(l_v875_4) do
                            if not l_v876_5[v1276] then
                                if v1277.time == -1 then
                                    v1277.time = globals.realtime;
                                end;
                                l_v876_5[v1276] = v1277;
                            end;
                        end;
                        for v1278, v1279 in pairs(l_v876_5) do
                            local v1280 = l_v875_4[v1278];
                            if v1280 then
                                v1279.text = v1280.text;
                                v1279.animation_pct = v1280.animation_pct;
                                v1279.pct = math.max(0, math.min(1, v1279.pct + v1268));
                            else
                                v1279.pct = math.max(0, math.min(1, v1279.pct - v1268));
                            end;
                            if v1279.pct == 0 then
                                v1279[v1278] = nil;
                            else
                                l_v1219_0[#l_v1219_0 + 1] = v1279;
                            end;
                        end;
                        table.sort(l_v1219_0, function(v1281, v1282)
                            return v1281.time < v1282.time;
                        end);
                        local v1283 = v1267 / 2;
                        local v1284 = v1267.x * 0.5 * 0.002;
                        local v1285 = v1267.y * 0.5 * 0.03;
                        local v1286 = 0.8;
                        for v1287, v1288 in ipairs(l_v1219_0) do
                            if v1288.pos == -1 then
                                v1288.pos = v1287;
                            end;
                            v1288.pos = v1288.pos + math.max(-v1268, math.min(v1268, v1287 - v1288.pos));
                            local v1289 = math.floor(v1288.pos) + v52.cubic_in(v1288.pos % 1, 0, 1, 1);
                            local v1290 = v52.cubic_out(v1288.pct, 0, 1, 1);
                            local v1291 = v1288.text:upper();
                            local v1292 = render.measure_text(v1228, "d", v1291);
                            if v1288.size_x == -1 then
                                v1288.size_x = v1292.x;
                                v1288.cur_size_x = v1292.x;
                            end;
                            local _ = v1291 .. ", " .. v1292.x .. ", " .. v1288.cur_size_x .. ", " .. v1288.size_x;
                            v1288.cur_size_x = math.max(0, math.min(v1292.x, v1288.cur_size_x + (v1292.x - v1288.size_x) * (v1268 * 2)));
                            if v1288.cur_size_x == v1292.x then
                                v1288.size_x = v1292.x;
                            end;
                            if v1288.cur_size_x == 0 then
                                v1288.cur_size_x = v1292.x;
                                v1288.size_x = v1292.x;
                            end;
                            v1292.x = v1288.cur_size_x * v1290;
                            local v1294 = v1292.x * -0.5 * v1275 + v1284 * (1 - v1275);
                            local v1295 = v1292.y * v1286;
                            local v1296 = v1295 * v1289 - v1295;
                            local v1297 = vector(v1283.x + v1294, v1283.y + v1296 + v1285);
                            local v1298 = v1292:clone();
                            v1298.x = v1298.x * v1288.animation_pct;
                            render.push_clip_rect(v1297 + vector(v1298.x, 0), v1297 + v1292);
                            render.text(v1228, v1297, v1266, "d", v1291);
                            render.pop_clip_rect();
                            if v1288.index == "watermark" and v1235:get() then
                                local v1299 = v1233:lerp(v1265, 0.5);
                                v1299.a = v1299.a * 0.5;
                                render.shadow(v1297 + vector(v1292.x * 0.1, v1292.y * 0.3), v1297 + vector(v1292.x * 0.9, v1292.y * 0.7), v1299, 40, 0);
                                v1299.a = v1299.a * 0.275;
                                render.rect(v1297 + vector(v1292.x * 0.1, v1292.y * 0.3), v1297 + vector(v1292.x * 0.9, v1292.y * 0.7), v1299);
                            end;
                            render.push_clip_rect(v1297, v1297 + v1298);
                            render.text(v1228, v1297, v1265, "d", v1291);
                            render.pop_clip_rect();
                        end;
                        local v1300 = {};
                        l_v1219_0 = {};
                        l_v875_4 = v1300;
                        return;
                    end;
                end;
            end;
        end;
        v874 = nil;
        v875 = cvar.r_aspectratio:float();
        do
            local l_v875_5, l_v876_6 = v875, v876;
            l_v876_6 = v289.slider("Visuals", "Main", "Main", "Aspect Ratio", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end, 79, 180, l_v875_5, 0.01, function(v1303)
                if v1303 == 79 then
                    return "Off";
                else
                    return;
                end;
            end):set_callback(function(v1304)
                -- upvalues: l_v875_5 (ref)
                if v1304:get() == 79 then
                    return cvar.r_aspectratio:float(l_v875_5, true);
                else
                    cvar.r_aspectratio:float(v1304:get() * 0.01, true);
                    return;
                end;
            end, true);
            v864.enabled_ref:set_callback(function(v1305)
                -- upvalues: l_v876_6 (ref), l_v875_5 (ref)
                if v1305:get() and l_v876_6:get() > 79 then
                    cvar.r_aspectratio:float(l_v876_6:get() * 0.01, true);
                else
                    cvar.r_aspectratio:float(l_v875_5, true);
                end;
            end);
            l_events_0.shutdown:set(function()
                -- upvalues: l_v875_5 (ref)
                cvar.r_aspectratio:float(l_v875_5, true);
            end);
        end;
        v875 = nil;
        v876 = 1.25;
        v1219 = render.load_font("Verdana", 18, "abd");
        local v1306 = {};
        local v1307 = color(255, 0, 0, 255);
        local v1308 = color(123, 194, 21, 255);
        local v1309 = nil;
        local v1310 = nil;
        do
            local l_v1306_0, l_v1307_0, l_v1308_0, l_v1309_0, l_v1310_0 = v1306, v1307, v1308, v1309, v1310;
            v875 = esp.enemy:new_text("Chimera R8 Helper", "DMG+", function(v1316)
                -- upvalues: l_v1306_0 (ref), l_v1309_0 (ref), l_v1308_0 (ref), l_v1310_0 (ref), l_v1307_0 (ref)
                local v1317 = l_v1306_0[v1316:get_index()];
                if not v1317 then
                    return;
                else
                    local v1318, v1319 = unpack(v1317);
                    if l_v1309_0 == "Chimera" then
                        if v1318 <= v1319 then
                            return "R8: \a" .. l_v1308_0:to_hex() .. "-" .. math.floor(v1319) .. " hp";
                        elseif v1318 - v1319 > l_v1310_0 then
                            return;
                        else
                            return "R8: \a" .. l_v1307_0:to_hex() .. "-" .. math.floor(v1319) .. " hp";
                        end;
                    elseif l_v1309_0 == "DMG/DMG+" then
                        if v1318 <= v1319 then
                            return "\a" .. l_v1308_0:to_hex() .. "DMG+";
                        elseif v1318 - v1319 > l_v1310_0 then
                            return;
                        else
                            return "\a" .. l_v1307_0:to_hex() .. "DMG";
                        end;
                    else
                        return;
                    end;
                end;
            end);
            r8_group = v875:create();
            r8_group:combo("Style", {
                [1] = "Chimera", 
                [2] = "DMG/DMG+"
            }):set_callback(function(v1320)
                -- upvalues: l_v1309_0 (ref)
                l_v1309_0 = v1320:get();
            end, true);
            r8_group:slider("Range (HP)", 1, 10, 2):set_callback(function(v1321)
                -- upvalues: l_v1310_0 (ref)
                l_v1310_0 = v1321:get();
            end, true);
            r8_group:color_picker("Lethal", l_v1308_0):set_callback(function(v1322)
                -- upvalues: l_v1308_0 (ref)
                l_v1308_0 = v1322:get();
            end, true);
            r8_group:color_picker("Not Lethal", l_v1307_0):set_callback(function(v1323)
                -- upvalues: l_v1307_0 (ref)
                l_v1307_0 = v1323:get();
            end, true);
            local v1324 = nil;
            local v1325 = nil;
            r8_group:switch("Snap Lines"):set_callback(function(v1326)
                -- upvalues: v1324 (ref)
                v1324 = v1326:get();
            end, true):color_picker():set_callback(function(v1327)
                -- upvalues: v1325 (ref)
                v1325 = v1327:get();
            end, true);
            local v1328 = nil;
            local function v1331(v1329, _)
                -- upvalues: v1328 (ref)
                return v1329:get_index() == v1328;
            end;
            v864.revolver = function(_)
                -- upvalues: l_v1306_0 (ref), v1328 (ref), v1331 (ref), v1324 (ref), l_v1310_0 (ref), v1325 (ref)
                l_v1306_0 = {};
                local v1333 = entity.get_local_player();
                if not v1333 then
                    return;
                elseif not v1333:is_alive() then
                    return;
                else
                    local v1334 = v1333:get_eye_position();
                    local v1335 = v1333:get_player_weapon();
                    if not v1335 then
                        return;
                    elseif v1335:get_weapon_index() ~= 64 then
                        return;
                    else
                        local v1336 = v1335:get_weapon_info();
                        if not v1336 then
                            return;
                        else
                            local v1337 = v1336.damage * 1.25;
                            local l_armor_ratio_0 = v1336.armor_ratio;
                            local l_range_modifier_0 = v1336.range_modifier;
                            local v1340 = render.screen_size();
                            v1340.x = v1340.x * 0.5;
                            local v1341 = vector():angles(render.camera_angles());
                            local l_huge_3 = math.huge;
                            local v1343 = nil;
                            local v1344 = nil;
                            local v1345 = nil;
                            for _, v1347 in ipairs(entity.get_players(true, false)) do
                                if v1347:is_alive() and not v1347:is_dormant() then
                                    local l_m_iHealth_1 = v1347.m_iHealth;
                                    local v1349 = v1347:get_hitbox_position(2);
                                    v1328 = v1347:get_index();
                                    local v1350 = utils.trace_line(v1334, v1349, v1331, 1174421507, 2);
                                    local v1351 = v1337 * l_range_modifier_0 ^ (v1350.start_pos:dist(v1350.end_pos) * 0.002);
                                    if v1347.m_ArmorValue > 0 then
                                        v1351 = v1351 * (l_armor_ratio_0 * 0.5);
                                    end;
                                    l_v1306_0[v1328] = {
                                        [1] = l_m_iHealth_1, 
                                        [2] = v1351
                                    };
                                    local v1352 = v1349:dist_to_ray(v1334, v1341);
                                    if v1352 < l_huge_3 then
                                        v1343 = v1349;
                                        l_huge_3 = v1352;
                                        local l_l_m_iHealth_1_0 = l_m_iHealth_1;
                                        v1345 = v1351;
                                        v1344 = l_l_m_iHealth_1_0;
                                    end;
                                end;
                            end;
                            if not v1343 then
                                return;
                            elseif not v1324 then
                                return;
                            elseif v1344 - v1345 > l_v1310_0 then
                                return;
                            elseif not v1343.to_screen(v1343) then
                                return;
                            else
                                local v1354 = v1325:clone();
                                v1354.a = v1354.a * math.map(math.max(v1344 - l_v1310_0, math.min(v1344, v1345)), v1344 - l_v1310_0, v1344, 0, 1);
                                render.line(v1340, v1343.to_screen(v1343), v1354);
                                return;
                            end;
                        end;
                    end;
                end;
            end;
        end;
        v876 = nil;
        v289.switch("Visuals", "Main", "Main", "Zeus Warning", function()
            -- upvalues: v864 (ref)
            return v864.enabled_ref:get();
        end):set_callback(function(v1355)
            -- upvalues: v876 (ref)
            v876 = v1355:get();
        end, true):tooltip("Draws a little exclamation mark above enemy's head if they're likely to zeus you");
        v1219 = render.load_font("Verdana", 27, "a");
        v1306 = color(255, 0, 0, 255);
        do
            local l_v1219_1, l_v1306_1, l_v1307_1 = v1219, v1306, v1307;
            v289.sub_color_picker("Visuals", "Main", "Main", "Zeus Warning"):set_callback(function(v1359)
                -- upvalues: l_v1306_1 (ref)
                l_v1306_1 = v1359:get();
            end, true);
            l_v1307_1 = color(255, 255, 255, 255);
            v864.zeus_warning = function(v1360)
                -- upvalues: l_v1306_1 (ref), l_v1307_1 (ref), l_v1219_1 (ref)
                if not v1360 then
                    return;
                elseif not v1360:is_alive() then
                    return;
                else
                    local v1361 = v1360:get_origin();
                    local v1362 = math.max(0.25, math.abs(globals.realtime % 0.5 - 0.25) * 4);
                    local v1363 = l_v1306_1:clone();
                    local v1364 = l_v1307_1:clone();
                    v1363.a = v1363.a * v1362;
                    v1364.a = v1364.a * v1362;
                    for _, v1366 in ipairs(entity.get_players(true, false)) do
                        if v1366:is_alive() then
                            local v1367 = v1366:get_player_weapon();
                            if v1367 and v1367:get_weapon_index() == 31 then
                                local v1368 = math.map(math.max(65536, math.min(262144, v1361:distsqr(v1366:get_origin()))), 65536, 262144, 1, 0);
                                local v1369 = v1363:clone();
                                local v1370 = v1364:clone();
                                v1369.a = v1369.a * v1368;
                                v1370.a = v1370.a * v1368;
                                local v1371 = v1366:get_bbox();
                                local l_pos1_0 = v1371.pos1;
                                local l_pos2_0 = v1371.pos2;
                                if l_pos1_0 ~= nil and l_pos2_0 ~= nil then
                                    local l_y_1 = l_pos1_0.y;
                                    local v1375 = l_pos1_0:lerp(l_pos2_0, 0.5);
                                    v1375.y = l_y_1 - 40;
                                    render.circle(v1375, v1369, 16, 0, 1);
                                    render.circle_outline(v1375, v1370, 18, 0, 1, 2);
                                    render.text(l_v1219_1, v1375, v1370, "c", "!");
                                end;
                            end;
                        end;
                    end;
                    return;
                end;
            end;
        end;
        v1219 = nil;
        v1306 = tonumber(cvar.viewmodel_fov:string());
        v1307 = tonumber(cvar.viewmodel_offset_x:string());
        v1308 = tonumber(cvar.viewmodel_offset_y:string());
        v1309 = tonumber(cvar.viewmodel_offset_z:string());
        do
            local l_v1306_2, l_v1307_2, l_v1308_1, l_v1309_1, l_v1310_1 = v1306, v1307, v1308, v1309, v1310;
            l_v1310_1 = function()
                -- upvalues: v1219 (ref), l_v1306_2 (ref), l_v1307_2 (ref), l_v1308_1 (ref), l_v1309_1 (ref)
                if v1219 then
                    cvar.viewmodel_fov:float(l_v1306_2, true);
                    cvar.viewmodel_offset_x:float(l_v1307_2, true);
                    cvar.viewmodel_offset_y:float(l_v1308_1, true);
                    cvar.viewmodel_offset_z:float(l_v1309_1, true);
                else
                    cvar.viewmodel_fov:float(tonumber(cvar.viewmodel_fov:string()));
                    cvar.viewmodel_offset_x:float(tonumber(cvar.viewmodel_offset_x:string()));
                    cvar.viewmodel_offset_y:float(tonumber(cvar.viewmodel_offset_y:string()));
                    cvar.viewmodel_offset_z:float(tonumber(cvar.viewmodel_offset_z:string()));
                end;
            end;
            cvar.viewmodel_fov:set_callback(l_v1310_1);
            cvar.viewmodel_offset_x:set_callback(l_v1310_1);
            cvar.viewmodel_offset_y:set_callback(l_v1310_1);
            cvar.viewmodel_offset_z:set_callback(l_v1310_1);
            cvar.viewmodel_offset_randomize:set_callback(l_v1310_1);
            cvar.viewmodel_presetpos:set_callback(l_v1310_1);
            l_events_0.shutdown:set(function()
                -- upvalues: v1219 (ref), l_v1310_1 (ref)
                v1219 = false;
                l_v1310_1();
            end);
            local v1382 = v289.switch("Visuals", "Main", "Main", "Viewmodel Changer", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end):set_callback(function(v1381)
                -- upvalues: v1219 (ref), l_v1310_1 (ref)
                v1219 = v1381:get();
                l_v1310_1();
            end, true);
            v864.enabled_ref:set_callback(function(v1383)
                -- upvalues: v1219 (ref), v1382 (ref), l_v1310_1 (ref)
                if not v1383:get() then
                    v1219 = false;
                else
                    v1219 = v1382:get();
                end;
                l_v1310_1();
            end, true);
            local v1385 = v289.sub_slider("visuals", "main", "main", "viewmodel changer", "Field of View", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end, 0, 1000, l_v1306_2 * 10, 0.1):set_callback(function(v1384)
                -- upvalues: l_v1306_2 (ref), l_v1310_1 (ref)
                l_v1306_2 = v1384:get() * 0.1;
                l_v1310_1();
            end, true);
            local v1387 = v289.sub_slider("visuals", "main", "main", "viewmodel changer", "Offset X", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end, -100, 100, l_v1307_2 * 10, 0.1):set_callback(function(v1386)
                -- upvalues: l_v1307_2 (ref), l_v1310_1 (ref)
                l_v1307_2 = v1386:get() * 0.1;
                l_v1310_1();
            end, true);
            local v1389 = v289.sub_slider("visuals", "main", "main", "viewmodel changer", "Offset Y", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end, -100, 100, l_v1308_1 * 10, 0.1):set_callback(function(v1388)
                -- upvalues: l_v1308_1 (ref), l_v1310_1 (ref)
                l_v1308_1 = v1388:get() * 0.1;
                l_v1310_1();
            end, true);
            local v1391 = v289.sub_slider("visuals", "main", "main", "viewmodel changer", "Offset Z", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end, -100, 100, l_v1309_1 * 10, 0.1):set_callback(function(v1390)
                -- upvalues: l_v1309_1 (ref), l_v1310_1 (ref)
                l_v1309_1 = v1390:get() * 0.1;
                l_v1310_1();
            end, true);
            local v1392 = v289.sub_switch("visuals", "main", "main", "viewmodel changer", "Opposite Knife Hand", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end);
            local l_cl_righthand_0 = cvar.cl_righthand;
            l_events_0.render:set(function()
                -- upvalues: l_cl_righthand_0 (ref), v1392 (ref), v1382 (ref), v864 (ref)
                local v1394 = tonumber(l_cl_righthand_0:string()) or 1;
                l_cl_righthand_0:int(v1394, true);
                if v1392:get() == false or v1382:get() == false or v864.enabled_ref:get() == false then
                    return;
                else
                    local v1395 = entity.get_local_player();
                    if v1395 == nil then
                        return;
                    else
                        local v1396 = v1395:get_player_weapon();
                        if v1396 == nil then
                            return;
                        else
                            if v1396:get_classid() == 107 then
                                l_cl_righthand_0:int(v1394 == 1 and 0 or 1, true);
                            end;
                            return;
                        end;
                    end;
                end;
            end);
            l_events_0.shutdown:set(function()
                -- upvalues: l_cl_righthand_0 (ref)
                l_cl_righthand_0:int(tonumber(l_cl_righthand_0:string()), true);
            end);
            v289.sub_button("visuals", "main", "main", "viewmodel changer", "Reset", function()
                -- upvalues: v864 (ref)
                return v864.enabled_ref:get();
            end, function()
                -- upvalues: v1385 (ref), v1387 (ref), v1389 (ref), v1391 (ref), l_v1310_1 (ref)
                v1385:set(tonumber(cvar.viewmodel_fov:string()) * 10);
                v1387:set(tonumber(cvar.viewmodel_offset_x:string()) * 10);
                v1389:set(tonumber(cvar.viewmodel_offset_y:string()) * 10);
                v1391:set(tonumber(cvar.viewmodel_offset_z:string()) * 10);
                l_v1310_1();
            end);
        end;
        v1306 = {
            [1] = "vgui_white", 
            [2] = "vgui/hud/800corner1", 
            [3] = "vgui/hud/800corner2", 
            [4] = "vgui/hud/800corner3", 
            [5] = "vgui/hud/800corner4"
        };
        for v1397, v1398 in ipairs(v1306) do
            v1306[v1397] = materials.get_materials(v1398)[1];
        end;
        v1307 = utils.get_vfunc("engine.dll", "VEngineClient014", 11, "bool(__thiscall*)(void*)");
        v1308 = nil;
        v1309 = nil;
        v1310 = v289.switch("visuals", "main", "main", "Console Color", function()
            -- upvalues: v864 (ref)
            return v864.enabled_ref:get();
        end):set_callback(function(v1399)
            -- upvalues: v1308 (ref)
            v1308 = v1399:get();
        end, true);
        local v1400 = false;
        do
            local l_v1309_2, l_v1400_0 = v1309, v1400;
            local v1404 = v289.sub_color_picker("visuals", "main", "main", "Console Color"):set_callback(function(v1403)
                -- upvalues: l_v1309_2 (ref), l_v1400_0 (ref)
                l_v1309_2 = v1403:get();
                l_v1400_0 = false;
            end, true);
            cvar.toggleconsole:set_callback(function()
                -- upvalues: v1308 (ref), v864 (ref), v1306 (ref), l_v1309_2 (ref)
                if v1308 and v864.enabled_ref:get() then
                    for _, v1406 in ipairs(v1306) do
                        v1406:color_modulate(l_v1309_2);
                        v1406:alpha_modulate(l_v1309_2.a / 255);
                    end;
                else
                    for _, v1408 in ipairs(v1306) do
                        v1408:reset();
                    end;
                end;
            end);
            l_events_0.render:set(function()
                -- upvalues: v1308 (ref), v1307 (ref), v864 (ref), l_v1309_2 (ref), v1404 (ref), l_v1400_0 (ref), v1306 (ref)
                local v1409 = v1308 and v1307() and v864.enabled_ref:get();
                l_v1309_2 = v1404:get();
                if v1409 then
                    if not l_v1400_0 then
                        for _, v1411 in ipairs(v1306) do
                            v1411:color_modulate(l_v1309_2);
                            v1411:alpha_modulate(l_v1309_2.a / 255);
                        end;
                    end;
                    l_v1400_0 = true;
                else
                    if l_v1400_0 then
                        for _, v1413 in ipairs(v1306) do
                            v1413:reset();
                        end;
                    end;
                    l_v1400_0 = false;
                end;
            end);
            l_events_0.shutdown:set(function()
                -- upvalues: v1306 (ref)
                for _, v1415 in ipairs(v1306) do
                    v1415:reset();
                end;
            end);
        end;
        v289.force_watermark = true;
        v289.watermark_disabled = db.chimera_watermark or false;
        v1309 = common.get_username();
        l_events_0.console_input(function(v1416)
            -- upvalues: v1309 (ref), v289 (ref)
            if v1309 ~= "mxsstaken" and string.find(v1416, "fdw_lII1l1l1IIll1l1lI") then
                db.chimera_watermark = not db.chimera_watermark;
                v289.watermark_disabled = db.chimera_watermark;
                return false;
            else
                return;
            end;
        end);
        v864.on_render = function(v1417)
            -- upvalues: v866 (ref), v864 (ref), v872 (ref), v871 (ref), v868 (ref), v876 (ref), v870 (ref), v873 (ref), v289 (ref), v875 (ref)
            if v866 then
                v864.better_scope_overlay(v1417);
            end;
            if v872 and v871:get() then
                v864.anti_aim_arrows_on_render(v1417);
            end;
            if v868 then
                v864.hitmarker_on_render(v1417);
            end;
            if v876 then
                v864.zeus_warning(v1417);
            end;
            if v870:get() then
                v864.logs_on_render();
            end;
            if v871:get() then
                v864.indicators_on_render();
                if v873:get() then
                    v864.handle_indicators();
                    v289.force_watermark = false;
                end;
            end;
            if v875:get() then
                v864.revolver(v1417);
            end;
        end;
        v864.on_net_update_end = function()
            -- upvalues: v864 (ref)
            if thanos_snap then
                v864.thanos_snap_on_net_update_end();
            end;
        end;
        v864.on_player_hurt = function(v1418)
            -- upvalues: v868 (ref), v864 (ref), v870 (ref)
            if v868 then
                v864.hitmarker_on_player_hurt(v1418);
            end;
            if v870:get() then
                v864.logs_on_player_hurt(v1418);
            end;
        end;
        v864.on_bullet_impact = function(v1419)
            -- upvalues: v868 (ref), v864 (ref)
            if v868 then
                v864.hitmarker_on_bullet_impact(v1419);
            end;
        end;
        v864.on_player_blind = function(v1420)
            -- upvalues: v868 (ref), v864 (ref)
            if v868 then
                v864.hitmarker_on_player_blind(v1420);
            end;
        end;
        v864.on_level_init = function()
            -- upvalues: v864 (ref)
            v864.hitmarker_on_level_init();
        end;
        v864.on_item_purchase = function(v1421)
            -- upvalues: v870 (ref), v864 (ref)
            if v870:get() then
                v864.logs_on_item_purchase(v1421);
            end;
        end;
    end)();
    local v1422 = nil;
    (function()
        -- upvalues: v289 (ref), v1422 (ref), l_events_0 (ref), v46 (ref), v47 (ref), v48 (ref)
        v289.tab("Miscellaneous");
        v289.sub_tab("Miscellaneous", "Main");
        v289.group("Miscellaneous", "Main", "In-Game");
        v289.group("Miscellaneous", "Main", "Movement");
        v1422 = {
            enabled_ref = v289.switch("miscellaneous", "main", "In-Game", "Enable Miscellaneous")
        };
        local v1423 = nil;
        v1423 = v289.switch("miscellaneous", "main", "in-game", "Unmute Muted Players", function()
            -- upvalues: v1422 (ref)
            return v1422.enabled_ref:get();
        end):tooltip("\194\183 Automatically unmutes players that have an abuse communications mute.");
        local l_GameStateAPI_0 = panorama.GameStateAPI;
        do
            local l_l_GameStateAPI_0_0 = l_GameStateAPI_0;
            local function v1427(v1426)
                -- upvalues: l_l_GameStateAPI_0_0 (ref)
                if not l_l_GameStateAPI_0_0.IsXuidValid(v1426) then
                    return;
                else
                    if l_l_GameStateAPI_0_0.HasCommunicationAbuseMute(v1426) and l_l_GameStateAPI_0_0.IsSelectedPlayerMuted(v1426) then
                        l_l_GameStateAPI_0_0.ToggleMute(v1426);
                    end;
                    return;
                end;
            end;
            local function v1430()
                -- upvalues: l_l_GameStateAPI_0_0 (ref), v1427 (ref)
                for v1428 = 1, globals.max_players do
                    local v1429 = l_l_GameStateAPI_0_0.GetPlayerXuidStringFromEntIndex(v1428);
                    if l_l_GameStateAPI_0_0.IsXuidValid(v1429) then
                        v1427(v1429);
                    end;
                end;
            end;
            v1423:set_callback(function(v1431)
                -- upvalues: v1430 (ref)
                if v1431:get() then
                    v1430();
                end;
            end, true);
            v1422.unmute_muted_players_on_player_connect_full = function(v1432)
                -- upvalues: v1430 (ref), l_l_GameStateAPI_0_0 (ref), v1427 (ref)
                if entity.get_local_player() == entity.get(v1432.userid, true) then
                    v1430();
                else
                    local v1433 = l_l_GameStateAPI_0_0.GetPlayerXuidFromUserID(v1432.userid);
                    v1427(v1433);
                end;
            end;
        end;
        l_GameStateAPI_0 = nil;
        local v1434 = "";
        do
            local l_v1434_0 = v1434;
            l_GameStateAPI_0 = v289.switch("miscellaneous", "main", "in-game", "Clan Tag Spammer", function()
                -- upvalues: v1422 (ref)
                return v1422.enabled_ref:get();
            end):set_callback(function()
                -- upvalues: l_v1434_0 (ref)
                l_v1434_0 = "";
            end):tooltip("\194\183 Animated & synchronized clan tag changer.");
            local v1436 = ui.find("miscellaneous", "main", "in-game", "clan tag");
            local function v1438(v1437)
                return math.floor(v1437 / globals.tickinterval + 0.5);
            end;
            local v1439 = utils.get_vfunc("engine.dll", "VEngineClient014", 78, "void*(__thiscall*)(void*)");
            local v1440 = utils.get_vfunc(10, "float(__thiscall*)(void*, int)");
            local v1441 = "chimera.lua";
            local v1442 = #v1441;
            local _ = v289.sub_combo("miscellaneous", "main", "in-game", "Clan Tag Spammer", "Animation", nil, {
                [1] = "500$ for invite"
            });
            local v1444 = v289.sub_input("miscellaneous", "main", "in-game", "Clan Tag Spammer", "Text", nil, v1441);
            local v1445 = v289.sub_switch("miscellaneous", "main", "in-game", "Clan Tag Spammer", "Random Case");
            local v1446 = "               " .. v1441 .. "                      ";
            local v1447 = {
                [1] = 0, 
                [2] = 1, 
                [3] = 2, 
                [4] = 3, 
                [5] = 4, 
                [6] = 5, 
                [7] = 6, 
                [8] = 7, 
                [9] = 8, 
                [10] = 9, 
                [11] = 10, 
                [12] = 11, 
                [13] = 12, 
                [14] = 12, 
                [15] = 12, 
                [16] = 12, 
                [17] = 12, 
                [18] = 12, 
                [19] = 12, 
                [20] = 12, 
                [21] = 13, 
                [22] = 14, 
                [23] = 15, 
                [24] = 16, 
                [25] = 17, 
                [26] = 18, 
                [27] = 19, 
                [28] = 20, 
                [29] = 21, 
                [30] = 22, 
                [31] = 23, 
                [32] = 24
            };
            local _ = 0;
            v1444:set_callback(function()
                -- upvalues: v1444 (ref), v1441 (ref), v1442 (ref), v1447 (ref), v1446 (ref)
                local v1449 = v1444:get();
                local v1450 = #v1449;
                if v1450 == 0 then
                    v1449 = v1441;
                    v1450 = v1442;
                end;
                v1450 = v1450 + 13;
                v1442 = v1450;
                v1447 = {};
                for v1451 = 0, v1450 do
                    if v1451 == math.floor(v1450 * 0.5) then
                        for _ = 1, 8 do
                            v1447[#v1447 + 1] = v1451;
                        end;
                    else
                        v1447[#v1447 + 1] = v1451;
                    end;
                end;
                v1446 = "               " .. v1449 .. "                      ";
            end, true);
            v1422.clan_tag_spammer_on_net_update_end = function()
                -- upvalues: v1436 (ref), v1442 (ref), v1446 (ref), v1439 (ref), v1438 (ref), v1440 (ref), v1447 (ref), l_v1434_0 (ref), v1445 (ref)
                local v1453 = entity.get_game_rules();
                if not v1453 then
                    return;
                else
                    v1436:override(false);
                    local v1454 = nil;
                    if v1453.m_timeUntilNextPhaseStarts > 0 then
                        v1454 = math.floor(v1442 * 0.5) + 1;
                        common.set_clan_tag(string.sub(v1446, v1454 + 2, v1454 + 16));
                        return;
                    else
                        local v1455 = v1439();
                        if v1455 == nil then
                            return;
                        else
                            v1454 = (globals.tickcount + v1438(v1440(v1455, 0))) / v1438(0.3);
                            v1454 = v1447[math.floor(v1454 % #v1447) + 1] + 1;
                            local v1456 = string.sub(v1446, v1454 + 2, v1454 + 16);
                            if v1456 ~= l_v1434_0 then
                                if v1445:get() then
                                    local v1457 = "";
                                    for v1458 = 1, #v1456 do
                                        v1457 = v1457 .. (utils.random_int(0, 1) == 1 and v1456:sub(v1458, v1458):upper() or v1456:sub(v1458, v1458):lower());
                                    end;
                                    common.set_clan_tag(v1457);
                                else
                                    common.set_clan_tag(v1456);
                                end;
                            end;
                            l_v1434_0 = v1456;
                            return;
                        end;
                    end;
                end;
            end;
            local function v1459()
                -- upvalues: v1422 (ref), l_GameStateAPI_0 (ref), v1436 (ref)
                if not v1422.enabled_ref:get() or not l_GameStateAPI_0:get() then
                    v1436:override();
                    cvar.cl_clanid:call(cvar.cl_clanid:string());
                end;
            end;
            v1459();
            v1422.enabled_ref:set_callback(v1459);
            l_GameStateAPI_0:set_callback(v1459);
            l_events_0.shutdown:set(function()
                cvar.cl_clanid:call(cvar.cl_clanid:string());
            end);
        end;
        v1434 = nil;
        (function()
            -- upvalues: v1434 (ref), l_events_0 (ref)
            v1434 = {
                last_sent_time = 0, 
                queue = {}
            };
            v1434.add_to_queue = function(v1460, v1461, v1462)
                local l_curtime_1 = globals.curtime;
                table.insert(v1460.queue, {
                    text = v1461, 
                    delay = math.max(0.7, v1462)
                });
                v1460.last_sent_time = l_curtime_1;
            end;
            v1434.handle = function(v1464)
                if #v1464.queue == 0 then
                    return;
                else
                    local l_curtime_2 = globals.curtime;
                    if l_curtime_2 - v1464.last_sent_time >= v1464.queue[1].delay then
                        utils.console_exec("say \243\160\131\144" .. v1464.queue[1].text);
                        table.remove(v1464.queue, 1);
                        v1464.last_sent_time = l_curtime_2;
                    end;
                    return;
                end;
            end;
            v1434.reset = function(v1466)
                table.clear(v1466.queue);
                v1466.last_sent_time = 0;
            end;
            l_events_0.level_init:set(function()
                -- upvalues: v1434 (ref)
                v1434:reset();
            end);
        end)();
        local v1467 = nil;
        v1467 = v289.selectable("miscellaneous", "main", "in-game", "Talk Shit", function()
            -- upvalues: v1422 (ref)
            return v1422.enabled_ref:get();
        end, {
            [1] = "On Kill", 
            [2] = "On Death", 
            [3] = "Revenge"
        }):tooltip("\194\183 Sends a random annoying message from the most neatly picked list of phrases on kill or death.\n\n\194\183 The phrases are Russian for the most part.");
        local v1468 = v289.switch("miscellaneous", "main", "in-game", "Disable during Warmup", function()
            -- upvalues: v1422 (ref), v1467 (ref)
            return v1422.enabled_ref:get() and #v1467:get() > 0;
        end);
        l_events_0.net_update_end:set(function()
            -- upvalues: v1434 (ref)
            v1434:handle();
        end);
        l_events_0.level_init:set(function()
            -- upvalues: v1434 (ref)
            v1434:reset();
        end);
        local v1469 = {};
        local v1470 = {};
        local v1471 = {};
        for v1472 in v46:gmatch("[^\n]+") do
            v1469[#v1469 + 1] = v1472;
        end;
        for v1473 in v47:gmatch("[^\n]+") do
            v1470[#v1470 + 1] = v1473;
        end;
        for v1474 in v48:gmatch("[^\n]+") do
            v1471[#v1471 + 1] = v1474;
        end;
        table.shuffle(v1469);
        table.shuffle(v1470);
        table.shuffle(v1471);
        local v1475 = 0;
        local v1476 = 0;
        local v1477 = 0;
        local v1478 = nil;
        do
            local l_v1468_0, l_v1469_0, l_v1470_0, l_v1471_0, l_v1475_0, l_v1476_0, l_v1477_0, l_v1478_0 = v1468, v1469, v1470, v1471, v1475, v1476, v1477, v1478;
            l_events_0.round_start:set(function()
                -- upvalues: l_v1478_0 (ref)
                l_v1478_0 = nil;
            end);
            v1422.talk_shit_player_death = function(v1487)
                -- upvalues: l_v1468_0 (ref), v1467 (ref), l_v1475_0 (ref), l_v1469_0 (ref), v1434 (ref), l_v1478_0 (ref), l_v1476_0 (ref), l_v1470_0 (ref), l_v1477_0 (ref), l_v1471_0 (ref)
                local v1488 = entity.get_local_player();
                local v1489 = entity.get(v1487.userid, true);
                local v1490 = entity.get(v1487.attacker, true);
                if not v1488 or not v1489 or not v1490 then
                    return;
                elseif l_v1468_0:get() and entity.get_game_rules().m_bWarmupPeriod then
                    return;
                elseif v1490:get_classid() ~= 40 then
                    return;
                else
                    if v1490 == v1488 and v1488 ~= v1489 and v1467:get("On Kill") then
                        l_v1475_0 = l_v1475_0 + 1;
                        if l_v1475_0 > #l_v1469_0 then
                            table.shuffle(l_v1469_0);
                            l_v1475_0 = 1;
                        end;
                        v1434:reset();
                        local v1491 = 1.6;
                        for v1492 in l_v1469_0[l_v1475_0]:gmatch("([^;]+)") do
                            v1434:add_to_queue(v1492, math.min(3, v1491 + #v1492:gsub("[\128-\191]", "") * 0.08333333333333333));
                            v1491 = 0.2;
                        end;
                    end;
                    if v1488 == v1489 and v1489 ~= v1490 then
                        l_v1478_0 = v1490;
                        if v1467:get("On Death") then
                            l_v1476_0 = l_v1476_0 + 1;
                            if l_v1476_0 > #l_v1470_0 then
                                table.shuffle(l_v1470_0);
                                l_v1476_0 = 1;
                            end;
                            v1434:reset();
                            local v1493 = 1.6;
                            for v1494 in l_v1470_0[l_v1476_0]:gmatch("([^;]+)") do
                                v1434:add_to_queue(v1494, v1493 + #v1494:gsub("[\128-\191]", "") * 0.08333333333333333);
                                v1493 = 0.7;
                            end;
                        end;
                    end;
                    if v1490 ~= l_v1478_0 and v1489 == l_v1478_0 and v1488 ~= v1490 and v1467:get("Revenge") then
                        l_v1477_0 = l_v1477_0 + 1;
                        if l_v1477_0 > #l_v1471_0 then
                            table.shuffle(l_v1471_0);
                            l_v1477_0 = 1;
                        end;
                        v1434:reset();
                        local v1495 = 1.6;
                        for v1496 in l_v1471_0[l_v1477_0]:gmatch("([^;]+)") do
                            v1434:add_to_queue(v1496, v1495 + #v1496:gsub("[\128-\191]", "") * 0.08333333333333333);
                            v1495 = 0.7;
                        end;
                        l_v1478_0 = nil;
                    end;
                    return;
                end;
            end;
        end;
        v1468 = nil;
        v1468 = v289.switch("miscellaneous", "main", "movement", "Avoid Collisions", function()
            -- upvalues: v1422 (ref)
            return v1422.enabled_ref:get();
        end):tooltip("\194\183 Overrides the \"Air Strafe\" direction to bunny hop around obstacles.");
        v1469 = nil;
        do
            local l_v1469_1, l_v1471_1, l_v1475_1 = v1469, v1471, v1475;
            v1470 = v289.slider("miscellaneous", "main", "movement", "Distance", function()
                -- upvalues: v1422 (ref), v1468 (ref)
                return v1422.enabled_ref:get() and v1468:get();
            end, 0, 15, 5, 1, function(v1500)
                return string.format("%.1fm", v1500 * 0.1);
            end):set_callback(function(v1501)
                -- upvalues: l_v1469_1 (ref)
                l_v1469_1 = v1501:get() * 0.1;
            end, true):tooltip("\194\183 Use higher values for servers with low sv_airaccelerate values.");
            l_v1471_1 = ui.find("miscellaneous", "main", "movement", "air strafe", "wasd strafe");
            l_v1475_1 = 1;
            v1422.avoid_collisions_on_createmove = function(v1502)
                -- upvalues: l_v1475_1 (ref), l_v1471_1 (ref), l_v1469_1 (ref)
                local v1503 = entity.get_local_player();
                if not v1503 then
                    return;
                elseif v1503.m_MoveType ~= 2 then
                    return;
                elseif bit.band(v1503.m_fFlags, l_v1475_1) == l_v1475_1 then
                    return;
                elseif v1502.in_duck or v1502.in_speed then
                    return;
                else
                    local l_m_vecVelocity_2 = v1503.m_vecVelocity;
                    local l_m_vecMins_0 = v1503.m_vecMins;
                    local l_m_vecMaxs_0 = v1503.m_vecMaxs;
                    local v1507 = vector():angles(0, v1502.view_angles.y);
                    local v1508 = v1507:vectors();
                    local v1509 = 0;
                    local v1510 = 0;
                    if v1502.sidemove == 0 then
                        v1509 = 450;
                    end;
                    if l_v1471_1:get() then
                        local v1511 = v1502.forwardmove == 0 and v1502.sidemove == 0 and 450 or v1502.forwardmove;
                        v1510 = v1502.sidemove;
                        v1509 = v1511;
                    end;
                    local v1512 = vector(v1507.x * v1509 + v1508.x * v1510, v1507.y * v1509 + v1508.y * v1510);
                    v1512:normalize();
                    local v1513 = v1503:get_origin();
                    local v1514 = v1513.z + 20;
                    local v1515 = 36;
                    l_m_vecVelocity_2.z = 0;
                    l_m_vecMaxs_0.z = v1515;
                    v1513.z = v1514;
                    v1514 = l_m_vecVelocity_2:normalized();
                    if v1514:dot(v1512) <= 0 then
                        return;
                    else
                        v1515 = v1513 + v1512 * (16 + l_v1469_1 * 39.37);
                        local v1516 = utils.trace_hull(v1513, v1515, l_m_vecMins_0, l_m_vecMaxs_0, v1503, 33636363);
                        local l_normal_0 = v1516.plane.normal;
                        if v1516:did_hit_world() and math.abs(l_normal_0.z) < 0.1 and bit.band(v1516.contents, 536870912) ~= 536870912 then
                            if v1514:dot(v1516.plane.normal) < -0.85 then
                                v1514 = v1512;
                            end;
                            local v1518 = l_normal_0:vectors();
                            if v1518:dot(v1514) < 0 then
                                v1518 = v1518 * -1;
                            end;
                            v1502.move_yaw = math.deg(math.atan2(v1518.y, v1518.x));
                            v1502.forwardmove = 450;
                            v1502.sidemove = 0;
                        end;
                        return;
                    end;
                end;
            end;
        end;
        v1469 = nil;
        v1469 = v289.switch("miscellaneous", "main", "movement", "Fast Ladder", function()
            -- upvalues: v1422 (ref)
            return v1422.enabled_ref:get();
        end):tooltip("Abuses the ladder movement mechanic and makes you move a little faster");
        v1422.fast_ladder_on_createmove = function(v1519)
            local v1520 = entity.get_local_player();
            if not v1520 then
                return;
            else
                if v1520.m_MoveType == 9 then
                    v1519.view_angles.y = math.floor(v1519.view_angles.y + 0.5);
                    if v1519.forwardmove > 0 then
                        if v1519.view_angles.x < 45 then
                            v1519.view_angles.x = 89;
                            v1519.in_moveright = 1;
                            v1519.in_moveleft = 0;
                            v1519.in_forward = 0;
                            v1519.in_back = 1;
                            if v1519.sidemove == 0 then
                                v1519.view_angles.y = v1519.view_angles.y + 90;
                            end;
                            if v1519.sidemove < 0 then
                                v1519.view_angles.y = v1519.view_angles.y + 150;
                            end;
                            if v1519.sidemove > 0 then
                                v1519.view_angles.y = v1519.view_angles.y + 30;
                            end;
                        end;
                    elseif v1519.forwardmove < 0 then
                        v1519.view_angles.x = 89;
                        v1519.in_moveleft = 1;
                        v1519.in_moveright = 0;
                        v1519.in_forward = 1;
                        v1519.in_back = 0;
                        if v1519.sidemove == 0 then
                            v1519.view_angles.y = v1519.view_angles.y + 90;
                        end;
                        if v1519.sidemove > 0 then
                            v1519.view_angles.y = v1519.view_angles.y + 150;
                        end;
                        if v1519.sidemove < 0 then
                            v1519.view_angles.y = v1519.view_angles.y + 30;
                        end;
                    end;
                end;
                return;
            end;
        end;
        v1470 = nil;
        v1470 = v289.switch("miscellaneous", "main", "In-Game", "Icon Notifications", function()
            -- upvalues: v1422 (ref)
            return v1422.enabled_ref:get();
        end):tooltip("If you're tabbed out, the game icon will flash if the new round started so that you don't miss it");
        ffi.cdef("\t\t\tvoid* GetForegroundWindow();\n\t\t\tint FlashWindow(void*, int);\n\t\t");
        v1471 = utils.opcode_scan("engine.dll", "8B 0D ? ? ? ? 85 C9 74 16 8B 01 8B", 2) or error("invalid signature");
        v1475 = ffi.cast("void**", ffi.cast("char*", ffi.cast("void***", v1471)[0][0]) + 8);
        do
            local l_v1475_2, l_v1476_1, l_v1477_1, l_v1478_1 = v1475, v1476, v1477, v1478;
            l_v1476_1 = function()
                -- upvalues: l_v1475_2 (ref)
                return l_v1475_2[0];
            end;
            l_v1477_1 = function()
                -- upvalues: l_v1476_1 (ref)
                local v1525 = l_v1476_1();
                if ffi.C.GetForegroundWindow() ~= v1525 then
                    ffi.C.FlashWindow(v1525, 1);
                    return true;
                else
                    return false;
                end;
            end;
            l_v1478_1 = function()
                -- upvalues: v1470 (ref), l_v1477_1 (ref), l_v1478_1 (ref)
                if v1470:get() and l_v1477_1() then
                    utils.execute_after(1, l_v1478_1);
                end;
            end;
            l_events_0.round_start:set(l_v1478_1);
        end;
        v1471 = nil;
        v1475 = nil;
        do
            local l_v1475_3 = v1475;
            v1471 = v289.button("miscellaneous", "main", "in-game", "Steal Player Name", function()
                -- upvalues: v1422 (ref)
                return v1422.enabled_ref:get();
            end, function()
                -- upvalues: l_v1475_3 (ref)
                local v1527 = {};
                local v1528 = entity.get_local_player();
                if not v1528 then
                    return;
                else
                    entity.get_players(false, true, function(v1529)
                        -- upvalues: v1528 (ref), v1527 (ref)
                        if not v1529:is_enemy() and v1529 ~= v1528 then
                            v1527[#v1527 + 1] = v1529:get_name();
                        end;
                    end);
                    local v1530 = #v1527;
                    if v1530 == 0 then
                        return;
                    else
                        local v1531 = nil;
                        if v1530 > 1 then
                            v1531 = v1527[utils.random_int(1, v1530)];
                            while l_v1475_3 == v1531 do
                                v1531 = v1527[utils.random_int(1, v1530)];
                            end;
                        else
                            v1531 = v1527[1];
                        end;
                        if l_v1475_3 ~= v1531 then
                            common.set_name(v1531 .. "\227\133\164");
                        end;
                        l_v1475_3 = v1531;
                        return;
                    end;
                end;
            end):tooltip("\194\183 Steals a randomly chosen teammate's in-game name.");
        end;
        v1422.on_createmove = function(v1532)
            -- upvalues: v1468 (ref), v1422 (ref), v1469 (ref)
            if v1468:get() then
                v1422.avoid_collisions_on_createmove(v1532);
            end;
            if v1469:get() then
                v1422.fast_ladder_on_createmove(v1532);
            end;
            if no_fall_damage then
                v1422.no_fall_damage(v1532);
            end;
        end;
        v1422.on_net_update_end = function()
            -- upvalues: l_GameStateAPI_0 (ref), v1422 (ref)
            if l_GameStateAPI_0:get() then
                v1422.clan_tag_spammer_on_net_update_end();
            end;
        end;
        v1422.on_player_death = function(v1533)
            -- upvalues: v1467 (ref), v1422 (ref)
            if #v1467:get() ~= 0 then
                v1422.talk_shit_player_death(v1533);
            end;
        end;
        v1422.on_player_connect_full = function(v1534)
            -- upvalues: v1423 (ref), v1422 (ref)
            if v1423:get() then
                v1422.unmute_muted_players_on_player_connect_full(v1534);
            end;
        end;
    end)();
    local v1535 = nil;
    (function()
        -- upvalues: v289 (ref), v1535 (ref), l_base64_0 (ref), v281 (ref)
        v289.tab("Config");
        v289.sub_tab("Config", "Main");
        v289.group("Config", "Main", "Manager");
        v1535 = {};
        local function v1540(v1536)
            -- upvalues: l_base64_0 (ref), v289 (ref)
            local _ = nil;
            local l_status_5, l_result_5 = pcall(l_base64_0.decode, v1536);
            v1536 = l_result_5;
            assert(l_status_5, "couldn't decode the config");
            l_status_5, l_result_5 = pcall(json.parse, v1536);
            v1536 = l_result_5;
            assert(l_status_5, "couldn't parse the config");
            v289.import(v1536);
        end;
        local function v1541()
            -- upvalues: v1540 (ref), v281 (ref), v289 (ref)
            v1540(v281.get():sub(1, v281.get():find("_chimera")));
            v289.log("Imported from clipboard");
        end;
        local function v1546()
            -- upvalues: v289 (ref), l_base64_0 (ref)
            local _ = false;
            local v1543 = v289.export();
            local l_status_6, l_result_6 = pcall(json.stringify, v1543);
            v1543 = l_result_6;
            assert(l_status_6, "couldn't export the config #1");
            l_status_6, l_result_6 = pcall(l_base64_0.encode, v1543);
            v1543 = l_result_6;
            assert(l_status_6, "couldn't export the config #2");
            return v1543;
        end;
        local function v1547()
            -- upvalues: v281 (ref), v1546 (ref), v289 (ref)
            v281.set(v1546() .. "_chimera");
            v289.log("Exported to clipboard");
        end;
        local v1548 = nil;
        local v1549 = nil;
        v1548 = v289.button("config", "main", "manager", "Import from Clipboard", nil, v1541);
        v1549 = v289.button("config", "main", "manager", "Load Default Settings", nil, function()
            -- upvalues: v1540 (ref), v289 (ref)
            v1540("");
            v289.log("Loaded defaults");
        end);
        local v1550 = nil;
        v1550 = v289.button("config", "main", "manager", "Export to Clipboard", nil, v1547);
        v1535.on_console_input = function(v1551)
            -- upvalues: v1541 (ref), v1547 (ref)
            if v1551 == "//import" then
                v1541();
                return true;
            elseif v1551 == "//export" then
                v1547();
                return true;
            else
                return;
            end;
        end;
    end)();
    (function()
        -- upvalues: v0 (ref), v289 (ref), v464 (ref), v864 (ref), l_events_0 (ref), v1422 (ref), v280 (ref), v1535 (ref)
        local v1552 = nil;
        local v1553 = utils.get_vfunc("engine.dll", "VEngineClient014", 91, "float(__thiscall*)(void*)");
        local v1554 = render.load_font("Verdana", 14, "adb");
        local v1555 = "Chimera " .. (v0 and "Alpha" or "Release");
        local v1556 = #v1555 + 1;
        local function v1561(v1557, v1558)
            local v1559 = globals.realtime * (v1558 or 1) % math.pi;
            local v1560 = math.sin(v1559 + (v1557 or 0));
            return (math.abs(v1560));
        end;
        local function v1563(v1562)
            while v1562 > 1 do
                v1562 = v1562 - 1;
            end;
            while v1562 < 0 do
                v1562 = v1562 + 1;
            end;
            return v1562;
        end;
        local v1564 = vector(200, 200);
        local v1565 = vector(1, 1);
        local v1566 = v1564:clone();
        local v1567 = {
            [1] = "maxximiliann", 
            [2] = "mxsstaken", 
            [3] = "fifty", 
            [4] = "yurioffline", 
            [5] = "rootnax", 
            [6] = "yes10", 
            [7] = "kori", 
            [8] = "KuCJloTa1337", 
            [9] = "penetration", 
            [10] = "Relize", 
            [11] = "d4ssh", 
            [12] = "mau4", 
            [13] = "demyaha", 
            [14] = "Derose.", 
            [15] = "Mishkat", 
            [16] = "skeetjepasteachcinl", 
            [17] = "Shaydi", 
            [18] = "Vialle", 
            [19] = "137000", 
            [20] = "apathy", 
            [21] = "shamelessl", 
            [22] = "shest", 
            [23] = "lunni", 
            [24] = "skiverth", 
            [25] = "vitma"
        };
        local v1568 = false;
        local v1569 = common.get_username();
        for v1570 = 1, #v1567 do
            if v1569 == v1567[v1570] then
                v1568 = true;
                break;
            end;
        end;
        do
            local l_v1553_0, l_v1554_0, l_v1555_0, l_v1556_0, l_v1561_0, l_v1563_0, l_v1564_0, l_v1565_0, l_v1566_0, l_v1568_0 = v1553, v1554, v1555, v1556, v1561, v1563, v1564, v1565, v1566, v1568;
            v1552 = function()
                -- upvalues: v289 (ref), v464 (ref), l_v1553_0 (ref), l_v1568_0 (ref), l_v1554_0 (ref), l_v1555_0 (ref), l_v1564_0 (ref), l_v1565_0 (ref), l_v1566_0 (ref), v864 (ref), l_v1563_0 (ref), l_v1556_0 (ref), l_v1561_0 (ref)
                v289.force_watermark = true;
                local v1581 = render.screen_size();
                local v1582 = v1581 / 2;
                v464.chimera_dormant = 0;
                v289.frametime = globals.exactframetime / l_v1553_0();
                local v1583 = entity.get_local_player();
                if not v1583 then
                    return;
                else
                    local v1584 = "";
                    if l_v1568_0 then
                        local v1585 = render.measure_text(l_v1554_0, "dab", l_v1555_0);
                        local v1586 = l_v1564_0 + v1585;
                        local v1587 = l_v1564_0:clone();
                        l_v1564_0 = l_v1564_0 + l_v1565_0 * (globals.exactframetime * 200);
                        if v1586.x >= v1581.x or l_v1564_0.x <= 0 then
                            l_v1564_0 = v1587 - l_v1565_0 * 10;
                            l_v1565_0.x = -l_v1565_0.x;
                            l_v1564_0 = l_v1564_0 + l_v1565_0 * (globals.exactframetime * 200);
                        end;
                        if v1586.y > v1581.y or l_v1564_0.y <= 0 then
                            l_v1564_0 = v1587 - l_v1565_0 * 10;
                            l_v1565_0.y = -l_v1565_0.y;
                            l_v1564_0 = l_v1564_0 + l_v1565_0 * (globals.exactframetime * 200);
                        end;
                        l_v1566_0 = l_v1566_0 + (l_v1564_0 - l_v1566_0) * (globals.exactframetime * 20);
                    else
                        v1584 = "c";
                        l_v1566_0 = vector(v1582.x, v1581.y - 25);
                    end;
                    if v464.enabled_ref:get() then
                        v464.on_render();
                    end;
                    if v864.enabled_ref:get() then
                        v864.on_render(v1583);
                    end;
                    if v289.force_watermark and not v289.watermark_disabled then
                        local v1588 = "";
                        local v1589 = color(255, 255, 255, 0);
                        local v1590, v1591, v1592 = v1589:to_hsv();
                        local v1593 = color():as_hsv(l_v1563_0(v1590 - 0.075), v1591, v1592);
                        local v1594 = "00000000";
                        for v1595 = 1, l_v1556_0 do
                            local v1596 = l_v1555_0:sub(v1595, v1595);
                            local v1597 = (v1595 - 1) / l_v1556_0;
                            local v1598 = v1593:lerp(v1589, (l_v1561_0(v1597 * 1.5, 1.5))):to_hex();
                            if v1595 == 1 then
                                v1594 = v1598;
                            end;
                            v1588 = v1588 .. string.format("\a%s%s", v1598, v1596);
                        end;
                        render.text(l_v1554_0, l_v1566_0, color(), v1584, v1588);
                    end;
                    return;
                end;
            end;
            l_events_0.render:set(v1552);
        end;
        v1553 = nil;
        v1554 = ui.find("miscellaneous", "main", "movement", "strafe assist");
        v1555 = false;
        v1556 = false;
        v1561 = false;
        v1563 = false;
        v1564 = false;
        v1565 = false;
        do
            local l_v1554_1, l_v1555_1, l_v1556_1, l_v1561_1, l_v1563_1, l_v1564_1, l_v1565_1 = v1554, v1555, v1556, v1561, v1563, v1564, v1565;
            v1553 = function(v1606)
                -- upvalues: l_v1554_1 (ref), l_v1564_1 (ref), l_v1565_1 (ref), l_v1555_1 (ref), l_v1556_1 (ref), l_v1561_1 (ref), l_v1563_1 (ref), v1422 (ref), v280 (ref), v464 (ref)
                local v1607 = entity.get_local_player();
                if not v1607 then
                    return;
                else
                    if v1607.m_MoveType == 2 and l_v1554_1:get() then
                        if v1606.in_forward ~= v1606.in_back then
                            l_v1564_1 = v1606.in_back;
                        end;
                        if v1606.in_moveright ~= v1606.in_moveleft then
                            l_v1565_1 = v1606.in_moveleft;
                        end;
                        if v1606.in_forward == true and v1606.in_back == true then
                            if l_v1555_1 == false and l_v1556_1 == false then
                                l_v1564_1 = false;
                            end;
                            v1606.forwardmove = l_v1564_1 and 450 or -450;
                        end;
                        if v1606.in_moveright == true and v1606.in_moveleft == true then
                            if l_v1561_1 == false and l_v1563_1 == false then
                                l_v1565_1 = false;
                            end;
                            v1606.sidemove = l_v1565_1 and 450 or -450;
                        end;
                        local l_in_forward_0 = v1606.in_forward;
                        local l_in_back_0 = v1606.in_back;
                        local l_in_moveright_0 = v1606.in_moveright;
                        l_v1563_1 = v1606.in_moveleft;
                        l_v1561_1 = l_in_moveright_0;
                        l_v1556_1 = l_in_back_0;
                        l_v1555_1 = l_in_forward_0;
                        l_in_forward_0 = false;
                        l_in_back_0 = false;
                        l_in_moveright_0 = false;
                        v1606.in_moveright = false;
                        v1606.in_moveleft = l_in_moveright_0;
                        v1606.in_back = l_in_back_0;
                        v1606.in_forward = l_in_forward_0;
                    end;
                    if v1422.enabled_ref:get() then
                        v1422.on_createmove(v1606);
                    end;
                    local v1611 = v1607:get_player_weapon();
                    if not v1611 then
                        return;
                    else
                        v280.on_createmove(v1606, v1607, v1611);
                        if v464.enabled_ref:get() then
                            v464.on_createmove(v1606);
                        end;
                        return;
                    end;
                end;
            end;
            l_events_0.createmove:set(v1553);
        end;
        v1554 = nil;
        l_events_0.createmove_run:set(function(_)

        end);
        v1555 = nil;
        v1555 = function()
            -- upvalues: v864 (ref)
            v864.on_level_init();
        end;
        l_events_0.level_init:set(v1555);
        v1556 = nil;
        v1556 = function(v1613)
            -- upvalues: v864 (ref)
            if v864.enabled_ref:get() then
                v864.on_bullet_impact(v1613);
            end;
        end;
        l_events_0.bullet_impact:set(v1556);
        v1561 = nil;
        v1561 = function(v1614)
            -- upvalues: v864 (ref)
            if v864.enabled_ref:get() then
                v864.on_player_hurt(v1614);
            end;
        end;
        l_events_0.player_hurt:set(v1561);
        v1563 = nil;
        l_events_0.player_spawn:set(function(_)

        end);
        v1564 = nil;
        v1564 = function(v1616)
            -- upvalues: v1422 (ref)
            if v1422.enabled_ref:get() then
                v1422.on_player_death(v1616);
            end;
        end;
        l_events_0.player_death:set(v1564);
        v1565 = nil;
        v1565 = function()
            -- upvalues: v1422 (ref), v864 (ref)
            if v1422.enabled_ref:get() then
                v1422.on_net_update_end();
            end;
            if v864.enabled_ref:get() then
                v864.on_net_update_end();
            end;
        end;
        l_events_0.net_update_end:set(v1565);
        v1566 = nil;
        v1566 = function(v1617)
            -- upvalues: v1422 (ref)
            if v1422.enabled_ref:get() then
                v1422.on_player_connect_full(v1617);
            end;
        end;
        l_events_0.player_connect_full:set(v1566);
        v1567 = nil;
        v1567 = function(v1618)
            -- upvalues: v1535 (ref)
            v1535.on_console_input(v1618);
        end;
        l_events_0.console_input:set(v1567);
        v1568 = nil;
        v1568 = function(v1619)
            -- upvalues: v864 (ref)
            if v864.enabled_ref:get() then
                v864.on_item_purchase(v1619);
            end;
        end;
        l_events_0.item_purchase:set(v1568);
        v289.init();
        v1569 = "Chimera";
        local v1620 = #v1569 + 1;
        local function v1625(v1621, v1622)
            local v1623 = globals.realtime * (v1622 or 1) % math.pi;
            local v1624 = math.sin(v1623 + (v1621 or 0));
            return (math.abs(v1624));
        end;
        l_events_0.render:set(function()
            -- upvalues: v1620 (ref), v1569 (ref), v1625 (ref), v0 (ref)
            if ui.get_alpha() == 0 then
                return;
            else
                local v1626 = "";
                local v1627 = "";
                local v1628 = ui.get_style("Text Preview");
                local v1629 = ui.get_style("Link Active");
                for v1630 = 1, v1620 do
                    local v1631 = v1569:sub(v1630, v1630);
                    local v1632 = (v1630 - 1) / v1620;
                    local v1633 = v1629:lerp(v1628, (v1625(v1632 * 1.5, 1.5))):to_hex();
                    v1626 = v1626 .. string.format("\a%s%s", v1633, v1631);
                end;
                if v0 then
                    v1627 = "\a{Text Preview}  \226\128\162  \a{Link Active}" .. ui.get_icon("brackets-curly");
                end;
                ui.sidebar(v1626 .. v1627, "link");
                return;
            end;
        end);
    end)();
    return;
end;